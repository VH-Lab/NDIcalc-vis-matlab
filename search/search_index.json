{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"NDIcalc-vis-matlab \u00b6 About \u00b6 This package contains a set of database document types and ndi.calculator objects for performing analysis of responses to visual stimulation. It requires and depends on the Neuroscience Data Interface, NDI . Installation \u00b6 Check out the NDI Installation Guide . Help and Support \u00b6 Use the issue tracker to submit questions, bugs, and issues. Financial Support \u00b6 Supported by the NIH BRAIN Initiative informatics group , grant MH114678.","title":"Home"},{"location":"#ndicalc-vis-matlab","text":"","title":"NDIcalc-vis-matlab"},{"location":"#about","text":"This package contains a set of database document types and ndi.calculator objects for performing analysis of responses to visual stimulation. It requires and depends on the Neuroscience Data Interface, NDI .","title":"About"},{"location":"#installation","text":"Check out the NDI Installation Guide .","title":"Installation"},{"location":"#help-and-support","text":"Use the issue tracker to submit questions, bugs, and issues.","title":"Help and Support"},{"location":"#financial-support","text":"Supported by the NIH BRAIN Initiative informatics group , grant MH114678.","title":"Financial Support"},{"location":"contributing/","text":"Contributing \u00b6 Anyone with a GitHub account can contribute. Please see the guidelines below! How to contribute \u00b6 If you have code that you would like to write, do the following. Press the Fork button in the upper-right corner of the NDIcalc-vis-matlab GitHub repository to make a copy of NDIcalc-vis-matlab in your own GitHub space. Make your changes to NDIcalc-vis-matlab. Commit your changes back to your fork. Finally, issue a Pull Request on GitHub from your fork. The request will be received by the NDI development team for integration.","title":"Contributing"},{"location":"contributing/#contributing","text":"Anyone with a GitHub account can contribute. Please see the guidelines below!","title":"Contributing"},{"location":"contributing/#how-to-contribute","text":"If you have code that you would like to write, do the following. Press the Fork button in the upper-right corner of the NDIcalc-vis-matlab GitHub repository to make a copy of NDIcalc-vis-matlab in your own GitHub space. Make your changes to NDIcalc-vis-matlab. Commit your changes back to your fork. Finally, issue a Pull Request on GitHub from your fork. The request will be received by the NDI development team for integration.","title":"How to contribute"},{"location":"installation/","text":"Installation: \u00b6 Install NDI See the NDI Installation Guide and check out its requirements. In a terminal or DOS shell, use the function cd to navigate to your user account Matlab documents directory. On a Mac, for example, it is /Users/yourusername/Documents/MATLAB/ . Then, navigate to the tools directory within. Finally, clone this repository using git clone https://github.com/VH-Lab/NDIcalc-vis-matlab .","title":"Installation"},{"location":"installation/#installation","text":"Install NDI See the NDI Installation Guide and check out its requirements. In a terminal or DOS shell, use the function cd to navigate to your user account Matlab documents directory. On a Mac, for example, it is /Users/yourusername/Documents/MATLAB/ . Then, navigate to the tools directory within. Finally, clone this repository using git clone https://github.com/VH-Lab/NDIcalc-vis-matlab .","title":"Installation:"},{"location":"documents/calc/contrastsensitivity_calc/","text":"contrastsensitivity_calc (ndi.document class) \u00b6 Class definition \u00b6 Class name : contrastsensitivity_calc Short name : contrastsensitivity_calc Superclasses : ndi_document , ndi_document_app Definition : $NDICALCDOCUMENTPATH/calc/contrastsensitivity_calc.json Schema for validation : $NDICALCSCHEMAPATH/calc/contrastsensitivity_calc.json Property_list_name : contrastsensitivity_calc Class_version : 1 contrastsensitivity_calc fields \u00b6 Accessed by contrastsensitivity_calc.field where field is one of the field names below field default_value data type description input_parameters depends_on spatial_frequencies sensitivity_RB sensitivity_RBN sensitivity_RBNS is_modulated_response across_stimuli_varies_p_bonferroni visual_response_p_bonferroni response_varies_p_bonferroni response_type ndi_document fields \u00b6 Accessed by ndi_document.field where field is one of the field names below field default_value data type description session_id - NDI ID string The globally unique identifier of any data session that produced this document id - NDI ID string The globally unique identifier of this document name character array (ASCII) A user-specified name, free for users/developers to use as they like type character array (ASCII) A user-specified type, free for users/developers to use as they like (deprecated, will be removed) datestamp (current time) ISO-8601 date string, time zone must be UTC leap seconds Time of document creation database_version - character array (ASCII) Version of this document in the database ndi_document_app fields \u00b6 Accessed by app.field where field is one of the field names below field default_value data type description name ndi.app character array (ASCII) The name of the application version - character array (ASCII) The version of the app according to the app's own version schedule; often this is a Git commit identifier url URL as a character array (ASCII) The home page of the application os character array (ASCII) The operating system that ran the application os_version character array (ASCII) The operating system version interpreter character array (ASCII) If applicable, the name of the interpreter (Matlab, python3, etc) interpreter_version character array (ASCII) If applicable, the version of the interpreter","title":"contrastsensitivity_calc"},{"location":"documents/calc/contrastsensitivity_calc/#contrastsensitivity_calc-ndidocument-class","text":"","title":"contrastsensitivity_calc (ndi.document class)"},{"location":"documents/calc/contrastsensitivity_calc/#class-definition","text":"Class name : contrastsensitivity_calc Short name : contrastsensitivity_calc Superclasses : ndi_document , ndi_document_app Definition : $NDICALCDOCUMENTPATH/calc/contrastsensitivity_calc.json Schema for validation : $NDICALCSCHEMAPATH/calc/contrastsensitivity_calc.json Property_list_name : contrastsensitivity_calc Class_version : 1","title":"Class definition"},{"location":"documents/calc/contrastsensitivity_calc/#contrastsensitivity_calc-fields","text":"Accessed by contrastsensitivity_calc.field where field is one of the field names below field default_value data type description input_parameters depends_on spatial_frequencies sensitivity_RB sensitivity_RBN sensitivity_RBNS is_modulated_response across_stimuli_varies_p_bonferroni visual_response_p_bonferroni response_varies_p_bonferroni response_type","title":"contrastsensitivity_calc fields"},{"location":"documents/calc/contrastsensitivity_calc/#ndi_document-fields","text":"Accessed by ndi_document.field where field is one of the field names below field default_value data type description session_id - NDI ID string The globally unique identifier of any data session that produced this document id - NDI ID string The globally unique identifier of this document name character array (ASCII) A user-specified name, free for users/developers to use as they like type character array (ASCII) A user-specified type, free for users/developers to use as they like (deprecated, will be removed) datestamp (current time) ISO-8601 date string, time zone must be UTC leap seconds Time of document creation database_version - character array (ASCII) Version of this document in the database","title":"ndi_document fields"},{"location":"documents/calc/contrastsensitivity_calc/#ndi_document_app-fields","text":"Accessed by app.field where field is one of the field names below field default_value data type description name ndi.app character array (ASCII) The name of the application version - character array (ASCII) The version of the app according to the app's own version schedule; often this is a Git commit identifier url URL as a character array (ASCII) The home page of the application os character array (ASCII) The operating system that ran the application os_version character array (ASCII) The operating system version interpreter character array (ASCII) If applicable, the name of the interpreter (Matlab, python3, etc) interpreter_version character array (ASCII) If applicable, the version of the interpreter","title":"ndi_document_app fields"},{"location":"documents/calc/contrasttuning_calc/","text":"contrasttuning_calc (ndi.document class) \u00b6 Class definition \u00b6 Class name : contrasttuning_calc Short name : contrasttuning_calc Superclasses : contrast_tuning , ndi_document , ndi_document_app Definition : $NDICALCDOCUMENTPATH/calc/contrasttuning_calc.json Schema for validation : $NDICALCSCHEMAPATH/calc/contrasttuning_calc.json Property_list_name : contrasttuning_calc Class_version : 1 contrasttuning_calc fields \u00b6 Accessed by contrasttuning_calc.field where field is one of the field names below field default_value data type description input_parameters depends_on contrast_tuning fields \u00b6 Accessed by contrast_tuning.field where field is one of the field names below field default_value data type description properties tuning_curve significance fitless fit ndi_document fields \u00b6 Accessed by ndi_document.field where field is one of the field names below field default_value data type description session_id - NDI ID string The globally unique identifier of any data session that produced this document id - NDI ID string The globally unique identifier of this document name character array (ASCII) A user-specified name, free for users/developers to use as they like type character array (ASCII) A user-specified type, free for users/developers to use as they like (deprecated, will be removed) datestamp (current time) ISO-8601 date string, time zone must be UTC leap seconds Time of document creation database_version - character array (ASCII) Version of this document in the database ndi_document_app fields \u00b6 Accessed by app.field where field is one of the field names below field default_value data type description name ndi.app character array (ASCII) The name of the application version - character array (ASCII) The version of the app according to the app's own version schedule; often this is a Git commit identifier url URL as a character array (ASCII) The home page of the application os character array (ASCII) The operating system that ran the application os_version character array (ASCII) The operating system version interpreter character array (ASCII) If applicable, the name of the interpreter (Matlab, python3, etc) interpreter_version character array (ASCII) If applicable, the version of the interpreter","title":"contrasttuning_calc"},{"location":"documents/calc/contrasttuning_calc/#contrasttuning_calc-ndidocument-class","text":"","title":"contrasttuning_calc (ndi.document class)"},{"location":"documents/calc/contrasttuning_calc/#class-definition","text":"Class name : contrasttuning_calc Short name : contrasttuning_calc Superclasses : contrast_tuning , ndi_document , ndi_document_app Definition : $NDICALCDOCUMENTPATH/calc/contrasttuning_calc.json Schema for validation : $NDICALCSCHEMAPATH/calc/contrasttuning_calc.json Property_list_name : contrasttuning_calc Class_version : 1","title":"Class definition"},{"location":"documents/calc/contrasttuning_calc/#contrasttuning_calc-fields","text":"Accessed by contrasttuning_calc.field where field is one of the field names below field default_value data type description input_parameters depends_on","title":"contrasttuning_calc fields"},{"location":"documents/calc/contrasttuning_calc/#contrast_tuning-fields","text":"Accessed by contrast_tuning.field where field is one of the field names below field default_value data type description properties tuning_curve significance fitless fit","title":"contrast_tuning fields"},{"location":"documents/calc/contrasttuning_calc/#ndi_document-fields","text":"Accessed by ndi_document.field where field is one of the field names below field default_value data type description session_id - NDI ID string The globally unique identifier of any data session that produced this document id - NDI ID string The globally unique identifier of this document name character array (ASCII) A user-specified name, free for users/developers to use as they like type character array (ASCII) A user-specified type, free for users/developers to use as they like (deprecated, will be removed) datestamp (current time) ISO-8601 date string, time zone must be UTC leap seconds Time of document creation database_version - character array (ASCII) Version of this document in the database","title":"ndi_document fields"},{"location":"documents/calc/contrasttuning_calc/#ndi_document_app-fields","text":"Accessed by app.field where field is one of the field names below field default_value data type description name ndi.app character array (ASCII) The name of the application version - character array (ASCII) The version of the app according to the app's own version schedule; often this is a Git commit identifier url URL as a character array (ASCII) The home page of the application os character array (ASCII) The operating system that ran the application os_version character array (ASCII) The operating system version interpreter character array (ASCII) If applicable, the name of the interpreter (Matlab, python3, etc) interpreter_version character array (ASCII) If applicable, the version of the interpreter","title":"ndi_document_app fields"},{"location":"documents/calc/hartley_calc/","text":"hartley_calc (ndi.document class) \u00b6 Class definition \u00b6 Class name : hartley_calc Short name : hartley_calc Superclasses : hartley_reverse_correlation , reverse_correlation , ndi_document_ndgrid , ndi_document , ndi_document_app Definition : $NDICALCDOCUMENTPATH/calc/hartley_calc.json Schema for validation : $NDICALCSCHEMAPATH/calc/hartley_calc.json Property_list_name : hartley_calc Class_version : 1 hartley_calc fields \u00b6 Accessed by hartley_calc.field where field is one of the field names below field default_value data type description input_parameters depends_on hartley_reverse_correlation fields \u00b6 Accessed by hartley_reverse_correlation.field where field is one of the field names below field default_value data type description stimulus_properties reconstruction_properties reverse_correlation fields \u00b6 Accessed by reverse_correlation.field where field is one of the field names below field default_value data type description method dimension_labels ndi_document_ndgrid fields \u00b6 Accessed by ngrid.field where field is one of the field names below field default_value data type description data_size data_type data_dim coordinates ndi_document fields \u00b6 Accessed by ndi_document.field where field is one of the field names below field default_value data type description session_id - NDI ID string The globally unique identifier of any data session that produced this document id - NDI ID string The globally unique identifier of this document name character array (ASCII) A user-specified name, free for users/developers to use as they like type character array (ASCII) A user-specified type, free for users/developers to use as they like (deprecated, will be removed) datestamp (current time) ISO-8601 date string, time zone must be UTC leap seconds Time of document creation database_version - character array (ASCII) Version of this document in the database ndi_document_app fields \u00b6 Accessed by app.field where field is one of the field names below field default_value data type description name ndi.app character array (ASCII) The name of the application version - character array (ASCII) The version of the app according to the app's own version schedule; often this is a Git commit identifier url URL as a character array (ASCII) The home page of the application os character array (ASCII) The operating system that ran the application os_version character array (ASCII) The operating system version interpreter character array (ASCII) If applicable, the name of the interpreter (Matlab, python3, etc) interpreter_version character array (ASCII) If applicable, the version of the interpreter","title":"hartley_calc"},{"location":"documents/calc/hartley_calc/#hartley_calc-ndidocument-class","text":"","title":"hartley_calc (ndi.document class)"},{"location":"documents/calc/hartley_calc/#class-definition","text":"Class name : hartley_calc Short name : hartley_calc Superclasses : hartley_reverse_correlation , reverse_correlation , ndi_document_ndgrid , ndi_document , ndi_document_app Definition : $NDICALCDOCUMENTPATH/calc/hartley_calc.json Schema for validation : $NDICALCSCHEMAPATH/calc/hartley_calc.json Property_list_name : hartley_calc Class_version : 1","title":"Class definition"},{"location":"documents/calc/hartley_calc/#hartley_calc-fields","text":"Accessed by hartley_calc.field where field is one of the field names below field default_value data type description input_parameters depends_on","title":"hartley_calc fields"},{"location":"documents/calc/hartley_calc/#hartley_reverse_correlation-fields","text":"Accessed by hartley_reverse_correlation.field where field is one of the field names below field default_value data type description stimulus_properties reconstruction_properties","title":"hartley_reverse_correlation fields"},{"location":"documents/calc/hartley_calc/#reverse_correlation-fields","text":"Accessed by reverse_correlation.field where field is one of the field names below field default_value data type description method dimension_labels","title":"reverse_correlation fields"},{"location":"documents/calc/hartley_calc/#ndi_document_ndgrid-fields","text":"Accessed by ngrid.field where field is one of the field names below field default_value data type description data_size data_type data_dim coordinates","title":"ndi_document_ndgrid fields"},{"location":"documents/calc/hartley_calc/#ndi_document-fields","text":"Accessed by ndi_document.field where field is one of the field names below field default_value data type description session_id - NDI ID string The globally unique identifier of any data session that produced this document id - NDI ID string The globally unique identifier of this document name character array (ASCII) A user-specified name, free for users/developers to use as they like type character array (ASCII) A user-specified type, free for users/developers to use as they like (deprecated, will be removed) datestamp (current time) ISO-8601 date string, time zone must be UTC leap seconds Time of document creation database_version - character array (ASCII) Version of this document in the database","title":"ndi_document fields"},{"location":"documents/calc/hartley_calc/#ndi_document_app-fields","text":"Accessed by app.field where field is one of the field names below field default_value data type description name ndi.app character array (ASCII) The name of the application version - character array (ASCII) The version of the app according to the app's own version schedule; often this is a Git commit identifier url URL as a character array (ASCII) The home page of the application os character array (ASCII) The operating system that ran the application os_version character array (ASCII) The operating system version interpreter character array (ASCII) If applicable, the name of the interpreter (Matlab, python3, etc) interpreter_version character array (ASCII) If applicable, the version of the interpreter","title":"ndi_document_app fields"},{"location":"documents/calc/oridirtuning_calc/","text":"oridirtuning_calc (ndi.document class) \u00b6 Class definition \u00b6 Class name : oridirtuning_calc Short name : oridirtuning_calc Superclasses : ndi_document , ndi_document_app , orientation_direction_tuning Definition : $NDICALCDOCUMENTPATH/calc/oridirtuning_calc.json Schema for validation : $NDICALCSCHEMAPATH/calc/oridirtuning_calc.json Property_list_name : oridirtuning_calc Class_version : 1 oridirtuning_calc fields \u00b6 Accessed by oridirtuning_calc.field where field is one of the field names below field default_value data type description input_parameters depends_on ndi_document fields \u00b6 Accessed by ndi_document.field where field is one of the field names below field default_value data type description session_id - NDI ID string The globally unique identifier of any data session that produced this document id - NDI ID string The globally unique identifier of this document name character array (ASCII) A user-specified name, free for users/developers to use as they like type character array (ASCII) A user-specified type, free for users/developers to use as they like (deprecated, will be removed) datestamp (current time) ISO-8601 date string, time zone must be UTC leap seconds Time of document creation database_version - character array (ASCII) Version of this document in the database ndi_document_app fields \u00b6 Accessed by app.field where field is one of the field names below field default_value data type description name ndi.app character array (ASCII) The name of the application version - character array (ASCII) The version of the app according to the app's own version schedule; often this is a Git commit identifier url URL as a character array (ASCII) The home page of the application os character array (ASCII) The operating system that ran the application os_version character array (ASCII) The operating system version interpreter character array (ASCII) If applicable, the name of the interpreter (Matlab, python3, etc) interpreter_version character array (ASCII) If applicable, the version of the interpreter orientation_direction_tuning fields \u00b6 Accessed by orientation_direction_tuning.field where field is one of the field names below field default_value data type description depends_on - structure Each document that this document depends on is listed; its document ID is given by the value, and the name indicates the type of dependency that exists. Note that the index for each dependency in the list below is arbitrary and can change. Use ndi.document methods dependency , dependency_value , add_dependency_value_n , dependency_value_n , remove_dependency_value_n , and set_dependency_value to read and edit depends_on fields of an ndi.document . depends_on : element_id - NDI document ID of an ndi_document_element object The element from which the responses are derived depends_on : stimulus_tuningcurve_id - NDI document ID of an ndi_document_stimulus_stimulus_tuningcurve object The tuning curve from which the responses are derived properties properties .coordinates properties .response_units properties .response_type tuning_curve tuning_curve .direction tuning_curve .mean tuning_curve .stddev tuning_curve .stderr tuning_curve .individual tuning_curve .raw_individual tuning_curve .control_individual significance - structure Structure with information about the significance of response variation across stimuli significance .visual_response_anova_p - float P-value of ANOVA test across all stimuli and control stimuli; indicates if there is any evidence of a significant visual response significance .across_stimuli_anova_p - float P-value of ANOVA test across all stimuli but excluding the blank; indicates if there is any evidence of a significant response variation across the stimuli vector - structure Structure with information about vector analyses of orientation / direction data vector .circular_variance - float Circular variance: see pubmed 12097515 vector .direction_circular_variance - float Circular variance in direction space: see pubmed 25147504 vector .hotelling2test - float P-value of Hotelling T2 test of whether the cloud of points determined by the trial-by-trial orientation vectors differs significantly from the point 0,0 (a test of significant orientation selectivity): see pubmed 25147504 vector .orientation_preference - float The angle (in orientation space, [0,180)) of the mean response vector; this is a vector-based definition of orientation preference; see pubmed 25147504 vector .direction_preference - float The angle (in direction space, [0,360)) of the mean response vector; this is a vector-based definition of direction preference (which can be noisy); see pubmed 25147504 vector .direction_hotelling2test - float P-value of Hotelling T2 test of whether the cloud of points determined by the trial-by-trial orientation vectors differs significantly from the point 0,0 (a test of significant orientation selectivity): see pubmed 25147504 vector .dot_direction_significance - float P-value of test of whether trial-by-trial vectors have a statistically signifant tendency to point in one of the two opposite directions defined by the preferred orientation; defined in pubmed 25147504 fit - structure Structure with information about double gaussian fit analyses of orientation / direction data fit .double_gaussian_parameters - 1x5 float Fit parameters of double gaussian fit: [offset Rp Op sigm Rn]; the fit function is R(theta) = offset + Rp exp(-(angdiff(theta-OpP).^2))+Rn exp(-(angdiff(theta-Op+180).^2)). See pubmed 10627623 and pubmed 25147504 fit .double_gaussian_fit_angles - 1x360 float Angle values for plotting the double gaussian direction fit fit .double_gaussian_fit_values - 1x360 float Fit response values for plotting the double gaussian direction fit fit .orientation_preferred_orthogonal_ratio - float The preferred to orthogonal ratio fit .direction_preferred_null_ratio - float The preferred to opposite ratio fit .orientation_preferred_orthogonal_ratio_rectified - float The preferred to orthogonal ratio, where each response is rectified to be not less than 0 fit .direction_preferred_null_ratio_rectified - float The preferred to null ratio, where each response is rectified to be not less than 0 fit .orientation_angle_preference - float The preferred orientation as determined by the double gaussian fit, in [0,180) fit .direction_angle_preference - float The preferred direction as determined by the double gaussian fit, in [0,360) fit .hwhh - float The half width at half height from the double gaussian fit, calculated as ln(4) * sigm, see [pubmed 10627623](https://pubmed.ncbi.nlm.nih.gov/10627623/","title":"oridirtuning_calc"},{"location":"documents/calc/oridirtuning_calc/#oridirtuning_calc-ndidocument-class","text":"","title":"oridirtuning_calc (ndi.document class)"},{"location":"documents/calc/oridirtuning_calc/#class-definition","text":"Class name : oridirtuning_calc Short name : oridirtuning_calc Superclasses : ndi_document , ndi_document_app , orientation_direction_tuning Definition : $NDICALCDOCUMENTPATH/calc/oridirtuning_calc.json Schema for validation : $NDICALCSCHEMAPATH/calc/oridirtuning_calc.json Property_list_name : oridirtuning_calc Class_version : 1","title":"Class definition"},{"location":"documents/calc/oridirtuning_calc/#oridirtuning_calc-fields","text":"Accessed by oridirtuning_calc.field where field is one of the field names below field default_value data type description input_parameters depends_on","title":"oridirtuning_calc fields"},{"location":"documents/calc/oridirtuning_calc/#ndi_document-fields","text":"Accessed by ndi_document.field where field is one of the field names below field default_value data type description session_id - NDI ID string The globally unique identifier of any data session that produced this document id - NDI ID string The globally unique identifier of this document name character array (ASCII) A user-specified name, free for users/developers to use as they like type character array (ASCII) A user-specified type, free for users/developers to use as they like (deprecated, will be removed) datestamp (current time) ISO-8601 date string, time zone must be UTC leap seconds Time of document creation database_version - character array (ASCII) Version of this document in the database","title":"ndi_document fields"},{"location":"documents/calc/oridirtuning_calc/#ndi_document_app-fields","text":"Accessed by app.field where field is one of the field names below field default_value data type description name ndi.app character array (ASCII) The name of the application version - character array (ASCII) The version of the app according to the app's own version schedule; often this is a Git commit identifier url URL as a character array (ASCII) The home page of the application os character array (ASCII) The operating system that ran the application os_version character array (ASCII) The operating system version interpreter character array (ASCII) If applicable, the name of the interpreter (Matlab, python3, etc) interpreter_version character array (ASCII) If applicable, the version of the interpreter","title":"ndi_document_app fields"},{"location":"documents/calc/oridirtuning_calc/#orientation_direction_tuning-fields","text":"Accessed by orientation_direction_tuning.field where field is one of the field names below field default_value data type description depends_on - structure Each document that this document depends on is listed; its document ID is given by the value, and the name indicates the type of dependency that exists. Note that the index for each dependency in the list below is arbitrary and can change. Use ndi.document methods dependency , dependency_value , add_dependency_value_n , dependency_value_n , remove_dependency_value_n , and set_dependency_value to read and edit depends_on fields of an ndi.document . depends_on : element_id - NDI document ID of an ndi_document_element object The element from which the responses are derived depends_on : stimulus_tuningcurve_id - NDI document ID of an ndi_document_stimulus_stimulus_tuningcurve object The tuning curve from which the responses are derived properties properties .coordinates properties .response_units properties .response_type tuning_curve tuning_curve .direction tuning_curve .mean tuning_curve .stddev tuning_curve .stderr tuning_curve .individual tuning_curve .raw_individual tuning_curve .control_individual significance - structure Structure with information about the significance of response variation across stimuli significance .visual_response_anova_p - float P-value of ANOVA test across all stimuli and control stimuli; indicates if there is any evidence of a significant visual response significance .across_stimuli_anova_p - float P-value of ANOVA test across all stimuli but excluding the blank; indicates if there is any evidence of a significant response variation across the stimuli vector - structure Structure with information about vector analyses of orientation / direction data vector .circular_variance - float Circular variance: see pubmed 12097515 vector .direction_circular_variance - float Circular variance in direction space: see pubmed 25147504 vector .hotelling2test - float P-value of Hotelling T2 test of whether the cloud of points determined by the trial-by-trial orientation vectors differs significantly from the point 0,0 (a test of significant orientation selectivity): see pubmed 25147504 vector .orientation_preference - float The angle (in orientation space, [0,180)) of the mean response vector; this is a vector-based definition of orientation preference; see pubmed 25147504 vector .direction_preference - float The angle (in direction space, [0,360)) of the mean response vector; this is a vector-based definition of direction preference (which can be noisy); see pubmed 25147504 vector .direction_hotelling2test - float P-value of Hotelling T2 test of whether the cloud of points determined by the trial-by-trial orientation vectors differs significantly from the point 0,0 (a test of significant orientation selectivity): see pubmed 25147504 vector .dot_direction_significance - float P-value of test of whether trial-by-trial vectors have a statistically signifant tendency to point in one of the two opposite directions defined by the preferred orientation; defined in pubmed 25147504 fit - structure Structure with information about double gaussian fit analyses of orientation / direction data fit .double_gaussian_parameters - 1x5 float Fit parameters of double gaussian fit: [offset Rp Op sigm Rn]; the fit function is R(theta) = offset + Rp exp(-(angdiff(theta-OpP).^2))+Rn exp(-(angdiff(theta-Op+180).^2)). See pubmed 10627623 and pubmed 25147504 fit .double_gaussian_fit_angles - 1x360 float Angle values for plotting the double gaussian direction fit fit .double_gaussian_fit_values - 1x360 float Fit response values for plotting the double gaussian direction fit fit .orientation_preferred_orthogonal_ratio - float The preferred to orthogonal ratio fit .direction_preferred_null_ratio - float The preferred to opposite ratio fit .orientation_preferred_orthogonal_ratio_rectified - float The preferred to orthogonal ratio, where each response is rectified to be not less than 0 fit .direction_preferred_null_ratio_rectified - float The preferred to null ratio, where each response is rectified to be not less than 0 fit .orientation_angle_preference - float The preferred orientation as determined by the double gaussian fit, in [0,180) fit .direction_angle_preference - float The preferred direction as determined by the double gaussian fit, in [0,360) fit .hwhh - float The half width at half height from the double gaussian fit, calculated as ln(4) * sigm, see [pubmed 10627623](https://pubmed.ncbi.nlm.nih.gov/10627623/","title":"orientation_direction_tuning fields"},{"location":"documents/calc/speedtuning_calc/","text":"speedtuning_calc (ndi.document class) \u00b6 Class definition \u00b6 Class name : speedtuning_calc Short name : speedtuning_calc Superclasses : speed_tuning , ndi_document , ndi_document_app Definition : $NDICALCDOCUMENTPATH/calc/speedtuning_calc.json Schema for validation : $NDICALCSCHEMAPATH/calc/speedtuning_calc.json Property_list_name : speedtuning_calc Class_version : 1 speedtuning_calc fields \u00b6 Accessed by speedtuning_calc.field where field is one of the field names below field default_value data type description input_parameters depends_on speed_tuning fields \u00b6 Accessed by speed_tuning.field where field is one of the field names below field default_value data type description properties tuning_curve significance fit ndi_document fields \u00b6 Accessed by ndi_document.field where field is one of the field names below field default_value data type description session_id - NDI ID string The globally unique identifier of any data session that produced this document id - NDI ID string The globally unique identifier of this document name character array (ASCII) A user-specified name, free for users/developers to use as they like type character array (ASCII) A user-specified type, free for users/developers to use as they like (deprecated, will be removed) datestamp (current time) ISO-8601 date string, time zone must be UTC leap seconds Time of document creation database_version - character array (ASCII) Version of this document in the database ndi_document_app fields \u00b6 Accessed by app.field where field is one of the field names below field default_value data type description name ndi.app character array (ASCII) The name of the application version - character array (ASCII) The version of the app according to the app's own version schedule; often this is a Git commit identifier url URL as a character array (ASCII) The home page of the application os character array (ASCII) The operating system that ran the application os_version character array (ASCII) The operating system version interpreter character array (ASCII) If applicable, the name of the interpreter (Matlab, python3, etc) interpreter_version character array (ASCII) If applicable, the version of the interpreter","title":"speedtuning_calc"},{"location":"documents/calc/speedtuning_calc/#speedtuning_calc-ndidocument-class","text":"","title":"speedtuning_calc (ndi.document class)"},{"location":"documents/calc/speedtuning_calc/#class-definition","text":"Class name : speedtuning_calc Short name : speedtuning_calc Superclasses : speed_tuning , ndi_document , ndi_document_app Definition : $NDICALCDOCUMENTPATH/calc/speedtuning_calc.json Schema for validation : $NDICALCSCHEMAPATH/calc/speedtuning_calc.json Property_list_name : speedtuning_calc Class_version : 1","title":"Class definition"},{"location":"documents/calc/speedtuning_calc/#speedtuning_calc-fields","text":"Accessed by speedtuning_calc.field where field is one of the field names below field default_value data type description input_parameters depends_on","title":"speedtuning_calc fields"},{"location":"documents/calc/speedtuning_calc/#speed_tuning-fields","text":"Accessed by speed_tuning.field where field is one of the field names below field default_value data type description properties tuning_curve significance fit","title":"speed_tuning fields"},{"location":"documents/calc/speedtuning_calc/#ndi_document-fields","text":"Accessed by ndi_document.field where field is one of the field names below field default_value data type description session_id - NDI ID string The globally unique identifier of any data session that produced this document id - NDI ID string The globally unique identifier of this document name character array (ASCII) A user-specified name, free for users/developers to use as they like type character array (ASCII) A user-specified type, free for users/developers to use as they like (deprecated, will be removed) datestamp (current time) ISO-8601 date string, time zone must be UTC leap seconds Time of document creation database_version - character array (ASCII) Version of this document in the database","title":"ndi_document fields"},{"location":"documents/calc/speedtuning_calc/#ndi_document_app-fields","text":"Accessed by app.field where field is one of the field names below field default_value data type description name ndi.app character array (ASCII) The name of the application version - character array (ASCII) The version of the app according to the app's own version schedule; often this is a Git commit identifier url URL as a character array (ASCII) The home page of the application os character array (ASCII) The operating system that ran the application os_version character array (ASCII) The operating system version interpreter character array (ASCII) If applicable, the name of the interpreter (Matlab, python3, etc) interpreter_version character array (ASCII) If applicable, the version of the interpreter","title":"ndi_document_app fields"},{"location":"documents/neuro/hartley_reverse_correlation/","text":"hartley_reverse_correlation (ndi.document class) \u00b6 Class definition \u00b6 Class name : ndi_document_stimulus_neuro_hartley_reverse_correlation Short name : hartley_reverse_correlation Superclasses : ndi_document_ndgrid , ndi_document , reverse_correlation Definition : $NDIDOCUMENTPATH/stimulus/neuro/hartley_reverse_correlation.json Schema for validation : $NDISCHEMAPATH/stimulus/neuro/hartley_reverse_correlation.json Property_list_name : hartley_reverse_correlation Class_version : 1 hartley_reverse_correlation fields \u00b6 Accessed by hartley_reverse_correlation.field where field is one of the field names below field default_value data type description stimulus_properties reconstruction_properties ndi_document_ndgrid fields \u00b6 Accessed by ngrid.field where field is one of the field names below field default_value data type description data_size data_type data_dim coordinates ndi_document fields \u00b6 Accessed by ndi_document.field where field is one of the field names below field default_value data type description session_id - NDI ID string The globally unique identifier of any data session that produced this document id - NDI ID string The globally unique identifier of this document name character array (ASCII) A user-specified name, free for users/developers to use as they like type character array (ASCII) A user-specified type, free for users/developers to use as they like (deprecated, will be removed) datestamp (current time) ISO-8601 date string, time zone must be UTC leap seconds Time of document creation database_version - character array (ASCII) Version of this document in the database reverse_correlation fields \u00b6 Accessed by reverse_correlation.field where field is one of the field names below field default_value data type description method dimension_labels","title":"hartley_reverse_correlation"},{"location":"documents/neuro/hartley_reverse_correlation/#hartley_reverse_correlation-ndidocument-class","text":"","title":"hartley_reverse_correlation (ndi.document class)"},{"location":"documents/neuro/hartley_reverse_correlation/#class-definition","text":"Class name : ndi_document_stimulus_neuro_hartley_reverse_correlation Short name : hartley_reverse_correlation Superclasses : ndi_document_ndgrid , ndi_document , reverse_correlation Definition : $NDIDOCUMENTPATH/stimulus/neuro/hartley_reverse_correlation.json Schema for validation : $NDISCHEMAPATH/stimulus/neuro/hartley_reverse_correlation.json Property_list_name : hartley_reverse_correlation Class_version : 1","title":"Class definition"},{"location":"documents/neuro/hartley_reverse_correlation/#hartley_reverse_correlation-fields","text":"Accessed by hartley_reverse_correlation.field where field is one of the field names below field default_value data type description stimulus_properties reconstruction_properties","title":"hartley_reverse_correlation fields"},{"location":"documents/neuro/hartley_reverse_correlation/#ndi_document_ndgrid-fields","text":"Accessed by ngrid.field where field is one of the field names below field default_value data type description data_size data_type data_dim coordinates","title":"ndi_document_ndgrid fields"},{"location":"documents/neuro/hartley_reverse_correlation/#ndi_document-fields","text":"Accessed by ndi_document.field where field is one of the field names below field default_value data type description session_id - NDI ID string The globally unique identifier of any data session that produced this document id - NDI ID string The globally unique identifier of this document name character array (ASCII) A user-specified name, free for users/developers to use as they like type character array (ASCII) A user-specified type, free for users/developers to use as they like (deprecated, will be removed) datestamp (current time) ISO-8601 date string, time zone must be UTC leap seconds Time of document creation database_version - character array (ASCII) Version of this document in the database","title":"ndi_document fields"},{"location":"documents/neuro/hartley_reverse_correlation/#reverse_correlation-fields","text":"Accessed by reverse_correlation.field where field is one of the field names below field default_value data type description method dimension_labels","title":"reverse_correlation fields"},{"location":"documents/neuro/reverse_correlation/","text":"reverse_correlation (ndi.document class) \u00b6 Class definition \u00b6 Class name : ndi_document_stimulus_neuro_reverse_correlation Short name : reverse_correlation Superclasses : ndi_document_ndgrid , ndi_document Definition : $NDIDOCUMENTPATH/stimulus/neuro/reverse_correlation.json Schema for validation : $NDISCHEMAPATH/stimulus/neuro/reverse_correlation.json Property_list_name : reverse_correlation Class_version : 1 reverse_correlation fields \u00b6 Accessed by reverse_correlation.field where field is one of the field names below field default_value data type description method dimension_labels ndi_document_ndgrid fields \u00b6 Accessed by ngrid.field where field is one of the field names below field default_value data type description data_size data_type data_dim coordinates ndi_document fields \u00b6 Accessed by ndi_document.field where field is one of the field names below field default_value data type description session_id - NDI ID string The globally unique identifier of any data session that produced this document id - NDI ID string The globally unique identifier of this document name character array (ASCII) A user-specified name, free for users/developers to use as they like type character array (ASCII) A user-specified type, free for users/developers to use as they like (deprecated, will be removed) datestamp (current time) ISO-8601 date string, time zone must be UTC leap seconds Time of document creation database_version - character array (ASCII) Version of this document in the database","title":"reverse_correlation"},{"location":"documents/neuro/reverse_correlation/#reverse_correlation-ndidocument-class","text":"","title":"reverse_correlation (ndi.document class)"},{"location":"documents/neuro/reverse_correlation/#class-definition","text":"Class name : ndi_document_stimulus_neuro_reverse_correlation Short name : reverse_correlation Superclasses : ndi_document_ndgrid , ndi_document Definition : $NDIDOCUMENTPATH/stimulus/neuro/reverse_correlation.json Schema for validation : $NDISCHEMAPATH/stimulus/neuro/reverse_correlation.json Property_list_name : reverse_correlation Class_version : 1","title":"Class definition"},{"location":"documents/neuro/reverse_correlation/#reverse_correlation-fields","text":"Accessed by reverse_correlation.field where field is one of the field names below field default_value data type description method dimension_labels","title":"reverse_correlation fields"},{"location":"documents/neuro/reverse_correlation/#ndi_document_ndgrid-fields","text":"Accessed by ngrid.field where field is one of the field names below field default_value data type description data_size data_type data_dim coordinates","title":"ndi_document_ndgrid fields"},{"location":"documents/neuro/reverse_correlation/#ndi_document-fields","text":"Accessed by ndi_document.field where field is one of the field names below field default_value data type description session_id - NDI ID string The globally unique identifier of any data session that produced this document id - NDI ID string The globally unique identifier of this document name character array (ASCII) A user-specified name, free for users/developers to use as they like type character array (ASCII) A user-specified type, free for users/developers to use as they like (deprecated, will be removed) datestamp (current time) ISO-8601 date string, time zone must be UTC leap seconds Time of document creation database_version - character array (ASCII) Version of this document in the database","title":"ndi_document fields"},{"location":"documents/vision/contrast_tuning/","text":"contrast_tuning (ndi.document class) \u00b6 Class definition \u00b6 Class name : contrast_tuning Short name : contrast_tuning Superclasses : ndi_document Definition : $NDICALCDOCUMENTPATH/vision/contrast_tuning.json Schema for validation : $NDICALCSCHEMAPATH/vision/contrast_tuning_schema.json Property_list_name : contrast_tuning Class_version : 1 contrast_tuning fields \u00b6 Accessed by contrast_tuning.field where field is one of the field names below field default_value data type description properties tuning_curve significance fitless fit ndi_document fields \u00b6 Accessed by ndi_document.field where field is one of the field names below field default_value data type description session_id - NDI ID string The globally unique identifier of any data session that produced this document id - NDI ID string The globally unique identifier of this document name character array (ASCII) A user-specified name, free for users/developers to use as they like type character array (ASCII) A user-specified type, free for users/developers to use as they like (deprecated, will be removed) datestamp (current time) ISO-8601 date string, time zone must be UTC leap seconds Time of document creation database_version - character array (ASCII) Version of this document in the database","title":"contrast_tuning"},{"location":"documents/vision/contrast_tuning/#contrast_tuning-ndidocument-class","text":"","title":"contrast_tuning (ndi.document class)"},{"location":"documents/vision/contrast_tuning/#class-definition","text":"Class name : contrast_tuning Short name : contrast_tuning Superclasses : ndi_document Definition : $NDICALCDOCUMENTPATH/vision/contrast_tuning.json Schema for validation : $NDICALCSCHEMAPATH/vision/contrast_tuning_schema.json Property_list_name : contrast_tuning Class_version : 1","title":"Class definition"},{"location":"documents/vision/contrast_tuning/#contrast_tuning-fields","text":"Accessed by contrast_tuning.field where field is one of the field names below field default_value data type description properties tuning_curve significance fitless fit","title":"contrast_tuning fields"},{"location":"documents/vision/contrast_tuning/#ndi_document-fields","text":"Accessed by ndi_document.field where field is one of the field names below field default_value data type description session_id - NDI ID string The globally unique identifier of any data session that produced this document id - NDI ID string The globally unique identifier of this document name character array (ASCII) A user-specified name, free for users/developers to use as they like type character array (ASCII) A user-specified type, free for users/developers to use as they like (deprecated, will be removed) datestamp (current time) ISO-8601 date string, time zone must be UTC leap seconds Time of document creation database_version - character array (ASCII) Version of this document in the database","title":"ndi_document fields"},{"location":"documents/vision/speed_tuning/","text":"speed_tuning (ndi.document class) \u00b6 Class definition \u00b6 Class name : speed_tuning Short name : speed_tuning Superclasses : ndi_document Definition : $NDICALCDOCUMENTPATH/vision/speed_tuning.json Schema for validation : $NDICALCSCHEMAPATH/vision/speed_tuning_schema.json Property_list_name : speed_tuning Class_version : 1 speed_tuning fields \u00b6 Accessed by speed_tuning.field where field is one of the field names below field default_value data type description properties tuning_curve significance fit ndi_document fields \u00b6 Accessed by ndi_document.field where field is one of the field names below field default_value data type description session_id - NDI ID string The globally unique identifier of any data session that produced this document id - NDI ID string The globally unique identifier of this document name character array (ASCII) A user-specified name, free for users/developers to use as they like type character array (ASCII) A user-specified type, free for users/developers to use as they like (deprecated, will be removed) datestamp (current time) ISO-8601 date string, time zone must be UTC leap seconds Time of document creation database_version - character array (ASCII) Version of this document in the database","title":"speed_tuning"},{"location":"documents/vision/speed_tuning/#speed_tuning-ndidocument-class","text":"","title":"speed_tuning (ndi.document class)"},{"location":"documents/vision/speed_tuning/#class-definition","text":"Class name : speed_tuning Short name : speed_tuning Superclasses : ndi_document Definition : $NDICALCDOCUMENTPATH/vision/speed_tuning.json Schema for validation : $NDICALCSCHEMAPATH/vision/speed_tuning_schema.json Property_list_name : speed_tuning Class_version : 1","title":"Class definition"},{"location":"documents/vision/speed_tuning/#speed_tuning-fields","text":"Accessed by speed_tuning.field where field is one of the field names below field default_value data type description properties tuning_curve significance fit","title":"speed_tuning fields"},{"location":"documents/vision/speed_tuning/#ndi_document-fields","text":"Accessed by ndi_document.field where field is one of the field names below field default_value data type description session_id - NDI ID string The globally unique identifier of any data session that produced this document id - NDI ID string The globally unique identifier of this document name character array (ASCII) A user-specified name, free for users/developers to use as they like type character array (ASCII) A user-specified type, free for users/developers to use as they like (deprecated, will be removed) datestamp (current time) ISO-8601 date string, time zone must be UTC leap seconds Time of document creation database_version - character array (ASCII) Version of this document in the database","title":"ndi_document fields"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/contrast_sensitivity.m/","text":"CLASS ndi.calc.vis.contrast_sensitivity \u00b6 CONTRAST_TUNING - a contrast_sensitivity demonstration of an ndi.calculator object CONTRAST_TUNING_OBJ = CONTRAST_TUNING(SESSION) Creates a CONTRAST_TUNING ndi.calculator object Superclasses \u00b6 ndi.calculator , ndi.app , ndi.documentservice , ndi.app.appdoc Properties \u00b6 Property Description fast_start session name doc_types doc_document_types doc_session Methods \u00b6 Method Description add_appdoc Load data from an application document appdoc_description --------------------------------------------------------------------------------------------- calculate perform the calculator for ndi.calc.example.contrast_sensitivity clear_appdoc remove an ndi.app.appdoc document from a session database contrast_sensitivity a contrast_sensitivity demonstration of an ndi.calculator object default_parameters_query what queries should be used to search for input parameters if none are provided? default_search_for_input_parameters default parameters for searching for inputs defaultstruct_appdoc return a default appdoc structure for a given APPDOC type doc2struct create an ndi.document from an input structure and input parameters doc_about --------------------------------------------------------------------------------------------- find_appdoc find an ndi.app.appdoc document in the session database graphical_edit_calculator create and control a GUI to graphically edit an NDI calculator instance is_valid_dependency_input is a potential dependency input actually valid for this calculator? isequal_appdoc_struct are two APPDOC data structures the same (equal)? isvalid_appdoc_struct is an input structure a valid descriptor for an APPDOC? loaddata_appdoc Load data from an application document newdocument return a new database document of type ndi.document based on an app plot provide a diagnostic plot to show the results of the calculator plot_parameters provide a diagnostic plot to show the results of the calculator, if appropriate run run calculator on all possible inputs that match some parameters search_for_calculator_docs search for previous calculators search_for_input_parameters search for valid inputs to the calculator searchquery return a search query for an ndi.document related to this app struct2doc create an ndi.document from an input structure and input parameters varappname return the name of the application for use in variable creation version_url return the app version and url Methods help \u00b6 add_appdoc - Load data from an application document [...] = ADD_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , ... APPDOC_STRUCT , DOCEXISTSACTION , [ additional arguments ]) Creates a new ndi . document that is based on the type APPDOC_TYPE with creation data specified by APPDOC_STRUCT . [ additional inputs ] are used to find or specify the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . The DOC is returned as a cell array of NDI_DOCUMENTs ( should have 1 entry but could have more than 1 if the document already exists ). If APPDOC_STRUCT is empty , then default values are used . If it is a character array , then it is assumed to be a filename of a tab - separated - value text file . If it is an ndi . document , then it is assumed to be an ndi . document and it will be converted to the parameters using DOC2STRUCT . This function also takes a string DOCEXISTSACTION that describes what it should do in the event that the document fitting the [ additional inputs ] already exists : DOCEXISTACTION value | Description ---------------------------------------------------------------------------------- ' Error ' | An error is generating indicating the document exists . ' NoAction ' | The existing document is left alone . The existing ndi . document | is returned in DOC . ' Replace ' | Replace the document ; note that this deletes all NDI_DOCUMENTS | that depend on the original . ' ReplaceIfDifferent ' | Conditionally replace the document , but only if the | the data structures that define the document are not equal . Help for ndi . calc . vis . contrast_sensitivity / add_appdoc is inherited from superclass ndi . app . appdoc appdoc_description - --------------------------------------------------------------------------------------------- DOCUMENT INFO: ---------------------------------------------------------------------------------------------- --------- | ABOUT | --------- To see the ABOUT information for the document that is created by this calculator , see 'help ndi . calculator/doc_about' ------------ | CREATION | ------------ DOC = CALCULATE(NDI_CALCULATOR_OBJ , PARAMETERS) PARAMETERS should contain the following fields: Fieldname | Description ------------------------------------------------------------------------- input_parameters | field1 description depends_on | field2 description ----------- | FINDING | ----------- [ DOC ] = SEARCH_FOR_CALCULATOR_DOCS(NDI_CALCULATOR_OBJ , PARAMETERS) PARAMETERS should contain the following fields: Fieldname | Description ------------------------------------------------------------------------- input_parameters | field1 description depends_on | field2 description Help for ndi . calc . vis . contrast_sensitivity/appdoc_description is inherited from superclass ndi . calculator calculate - perform the calculator for ndi.calc.example.contrast_sensitivity DOC = CALCULATE(NDI_CALCULATOR_OBJ, PARAMETERS) Creates a contrast_sensitivity_calc document given input parameters. The document that is created contrast_sensitivity by the input parameters. check inputs clear_appdoc - remove an ndi.app.appdoc document from a session database B = CLEAR_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional inputs ]) Deletes the app document of style DOC_NAME from the database . [ additional inputs ] are used to find the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . B is 1 if the document is found , and 0 otherwise . Help for ndi . calc . vis . contrast_sensitivity / clear_appdoc is inherited from superclass ndi . app . appdoc contrast_sensitivity - a contrast_sensitivity demonstration of an ndi.calculator object CONTRAST_TUNING_OBJ = CONTRAST_TUNING ( SESSION ) Creates a CONTRAST_TUNING ndi . calculator object Documentation for ndi . calc . vis . contrast_sensitivity / contrast_sensitivity doc ndi . calc . vis . contrast_sensitivity default_parameters_query - what queries should be used to search for input parameters if none are provided? QUERY = DEFAULT_PARAMETERS_QUERY ( NDI_CALCULATOR_OBJ , PARAMETERS_SPECIFICATION ) When one calls SEARCH_FOR_INPUT_PARAMETERS , it is possible to specify a ' query ' structure to select particular documents to be placed into the parameters ' depends_on ' specification . If one does not provide any ' query ' structure , then the default values here are used . The function returns : |-----------------------|----------------------------------------------| | query | A structure with ' name ' and ' query ' fields | | | that describes a search to be performed to | | | identify inputs for the ' depends_on ' field | | | in the PARAMETERS output . | |-----------------------|----------------------------------------------- For the ndi . calc . stimulus . contrast_sensitivity_calc class , this looks for documents of type ' stimulus_response_scalar.json ' with ' response_type ' fields the contain ' mean ' or ' F1 ' . default_search_for_input_parameters - default parameters for searching for inputs PARAMETERS = DEFAULT_SEARCH_FOR_INPUT_PARAMETERS ( NDI_CALCULATOR_OBJ ) Returns a list of the default search parameters for finding appropriate inputs to the calculator . For contrast_sensitivity_calc , there is no appropriate default parameters so this search will yield empty . defaultstruct_appdoc - return a default appdoc structure for a given APPDOC type APPDOC_STRUCT = DEFAULTSTRUCT_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE ) Return the default data structure for a given APPDOC_TYPE of an ndi . app . appdoc object . In the base class , the blank version of the ndi . document is read in and the default structure is built from the ndi . document ' s class property list. Help for ndi . calc . vis . contrast_sensitivity / defaultstruct_appdoc is inherited from superclass ndi . app . appdoc doc2struct - create an ndi.document from an input structure and input parameters DOC = STRUCT2DOC ( NDI_APPDOC_OBJ , SESSION , APPDOC_TYPE , APPDOC_STRUCT , [ additional parameters ] Create an ndi . document from a data structure APPDOC_STRUCT . The ndi . document is created according to the APPDOC_TYPE of the NDI_APPDOC_OBJ . In the base class , this uses the property info in the ndi . document to load the data structure . Help for ndi . calc . vis . contrast_sensitivity / doc2struct is inherited from superclass ndi . app . appdoc doc_about - --------------------------------------------------------------------------------------------- NDI_CALCULATOR: CONTRAST_SENSITIVITY_CALC ---------------------------------------------------------------------------------------------- ------------------------ | CONTRAST_TUNING_CALC -- ABOUT | ------------------------ CONTRAST_TUNING_CALC is a demonstration document . It simply produces the 'answer' that is provided in the input parameters . Each CONTRAST_TUNING_CALC document 'depends_on' an NDI daq system . Definition: apps/contrast_sensitivity_calc . json find_appdoc - find an ndi.app.appdoc document in the session database DOC = FIND_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional inputs ]) Using search criteria that is supported by [ additional inputs ], FIND_APPDOC searches the database for the ndi . document object DOC that is described by APPDOC_TYPE . DOC is always a cell array of all matching NDI_DOCUMENTs . In this superclass , empty is always returned . Subclasses should override this function to search for each document type . The documentation for subclasses should be in the overriden function APPDOC_DESCRIPTION . Help for ndi . calc . vis . contrast_sensitivity / find_appdoc is inherited from superclass ndi . app . appdoc graphical_edit_calculator - create and control a GUI to graphically edit an NDI calculator instance GRAPHICAL_EDIT_CALCULATOR ( ... ) Creates and controls a graphical user interface for creating an instance of an ndi . calculator object . Usage by the user : GRAPHICAL_EDIT_CALCULATOR ( ' command ' , ' NEW ' , ' type ' , ' ndi.calc.TYPE ' , ' filename ' , filename , ' name ' , name ) or GRAPHICAL_EDIT_CALCULATOR ( ' command ' , ' EDIT ' , ' filename ' , filename ) Help for ndi . calc . vis . contrast_sensitivity . graphical_edit_calculator is inherited from superclass ndi . calculator is_valid_dependency_input - is a potential dependency input actually valid for this calculator? B = IS_VALID_DEPENDENCY_INPUT ( NDI_CALCULATOR_OBJ , NAME , VALUE ) Tests whether a potential input to a calculator is valid . The potential dependency name is provided in NAME and its ndi_document id is provided in VALUE . The base class behavior of this function is simply to return true , but it can be overriden if additional criteria beyond an ndi . query are needed to assess if a document is an appropriate input for the calculator . Help for ndi . calc . vis . contrast_sensitivity / is_valid_dependency_input is inherited from superclass ndi . calculator isequal_appdoc_struct - are two APPDOC data structures the same (equal)? B = ISEQUAL_APPDOC_STRUCT ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT1 , APPDOC_STRUCT2 ) Returns 1 if the structures APPDOC_STRUCT1 and APPDOC_STRUCT2 are valid and equal . This is true if APPDOC_STRUCT2 true if APPDOC_STRUCT1 and APPDOC_STRUCT2 have the same field names and same values and same sizes . That is , B is vlt . data . eqlen ( APPDOC_STRUCT1 , APPDOC_STRUCT2 ) . Help for ndi . calc . vis . contrast_sensitivity / isequal_appdoc_struct is inherited from superclass ndi . calculator isvalid_appdoc_struct - is an input structure a valid descriptor for an APPDOC? [ B , ERRORMSG ] = ISVALID_APPDOC_STRUCT ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT ) Examines APPDOC_STRUCT and determines whether it is a valid input for creating an ndi . document described by APPDOC_TYPE . B is 1 if it is valid and 0 otherwise . In the base class , B is always 0 with ERRORMSG ' Base class always returns invalid. ' Help for ndi . calc . vis . contrast_sensitivity / isvalid_appdoc_struct is inherited from superclass ndi . app . appdoc loaddata_appdoc - Load data from an application document [...] = LOADDATA_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional arguments ]) Loads the data from app document of style DOC_NAME from the database . [ additional inputs ] are used to find the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . In the base class , this always returns empty . This function should be overridden by each subclass . The documentation for subclasses should be in the overridden function APPDOC_DESCRIPTION . Help for ndi . calc . vis . contrast_sensitivity / loaddata_appdoc is inherited from superclass ndi . app . appdoc newdocument - return a new database document of type ndi.document based on an app NDI_DOCUMENT_OBJ = NEWDOCUMENT ( NDI_APP_OBJ ) Creates a blank ndi . document object of type ' ndi_document_app ' . The ' app.name ' field is filled out with the name of NDI_APP_OBJ . VARAPPNAME () . Help for ndi . calc . vis . contrast_sensitivity / newdocument is inherited from superclass ndi . app plot - provide a diagnostic plot to show the results of the calculator H = PLOT ( NDI_CALCULATOR_OBJ , DOC_OR_PARAMETERS , ... ) Produce a plot of the tuning curve . Handles to the figure , the axes , and any objects created are returned in H . This function takes additional input arguments as name / value pairs . See ndi . calculator . plot_parameters for a description of those parameters . plot_parameters - provide a diagnostic plot to show the results of the calculator, if appropriate PLOT ( NDI_CALCULATOR_OBJ , DOC_OR_PARAMETERS , ... ) Produce a diagnostic plot that can indicate to a reader whether or not the calculator has been performed in a manner that makes sense with its input data . Useful for debugging / validating a calculator . By default , this plot is made in the current axes . This function takes additional input arguments as name / value pairs : |---------------------------|--------------------------------------| | Parameter ( default ) | Description | |---------------------------|--------------------------------------| | newfigure ( 0 ) | 0 / 1 Should we make a new figure ? | | holdstate ( 0 ) | 0 / 1 Should we preserve the ' hold ' | | | state of the current axes ? | | suppress_x_label ( 0 ) | 0 / 1 Should we suppress the x label ? | | suppress_y_label ( 0 ) | 0 / 1 Should we suppress the y label ? | | suppress_z_label ( 0 ) | 0 / 1 Should we suppress the z label ? | | suppress_title ( 0 ) | 0 / 1 Should we suppress the title ? | |---------------------------|--------------------------------------| Help for ndi . calc . vis . contrast_sensitivity . plot_parameters is inherited from superclass ndi . calculator run - run calculator on all possible inputs that match some parameters DOCS = RUN ( NDI_CALCULATOR_OBJ , DOCEXISTSACTION , PARAMETERS ) DOCEXISTSACTION can be 'Error' , 'NoAction' , 'Replace' , or 'ReplaceIfDifferent' For calculators , 'ReplaceIfDifferent' is equivalent to 'NoAction' because the input parameters define the calculator . Step 1 : set up input parameters ; they can either be completely specified by the caller , or defaults can be used Help for ndi . calc . vis . contrast_sensitivity / run is inherited from superclass ndi . calculator search_for_calculator_docs - search for previous calculators [ DOCS ] = SEARCH_FOR_CALCULATOR ( NDI_CALCULATOR_OBJ , PARAMETERS ) Performs a search to find all previously - created calculator documents that this mini - app creates . PARAMETERS is a structure with the following fields |------------------------|----------------------------------| | Fieldname | Description | |-----------------------------------------------------------| | input_parameters | A structure of input parameters | | | needed by the calculator . | | depends_on | A structure with fields 'name' | | | and 'value' that indicates any | | | exact matches that should be | | | satisfied . | |------------------------|----------------------------------| in the abstract class , this returns empty Help for ndi . calc . vis . contrast_sensitivity / search_for_calculator_docs is inherited from superclass ndi . calculator search_for_input_parameters - search for valid inputs to the calculator PARAMETERS = SEARCH_FOR_INPUT_PARAMETERS ( NDI_CALCULATOR_OBJ , PARAMETERS_SPECIFICATION ) Identifies all possible sets of specific input PARAMETERS that can be used as inputs to the calculator . PARAMETERS is a cell array of parameter structures with fields ' input_parameters ' and ' depends_on ' . PARAMETERS_SPECIFICATION is a structure with the following fields : |----------------------------------------------------------------------| | input_parameters | A structure of fixed input parameters needed | | | by the calculator . Should not depend on | | | values in other documents . | | depends_on | A structure with ' name ' and ' value ' fields | | | that lists specific inputs that should be | | | used for the ' depends_on ' field in the | | | PARAMETERS output . | | query | A structure with ' name ' and ' query ' fields | | | that describes a search to be performed to | | | identify inputs for the ' depends_on ' field | | | in the PARAMETERS output . | |-----------------------|----------------------------------------------- Help for ndi . calc . vis . contrast_sensitivity / search_for_input_parameters is inherited from superclass ndi . calculator searchquery - return a search query for an ndi.document related to this app C = SEARCHQUERY ( NDI_APP_OBJ ) Returns a cell array of strings that allow the creation or searching of an ndi . database document for this app with field ' app ' that has subfield ' name ' equal to the app ' s VARAPPNAME. Help for ndi . calc . vis . contrast_sensitivity / searchquery is inherited from superclass ndi . app struct2doc - create an ndi.document from an input structure and input parameters DOC = STRUCT2DOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT , [ additional parameters ] Create an ndi . document from a data structure APPDOC_STRUCT . The ndi . document is created according to the APPDOC_TYPE of the NDI_APPDOC_OBJ . In the base class , this always returns empty . It must be overridden in subclasses . The documentation for overriden functions should be in the function APPDOC_DESCRIPTION . Help for ndi . calc . vis . contrast_sensitivity / struct2doc is inherited from superclass ndi . app . appdoc varappname - return the name of the application for use in variable creation AN = VARAPPNAME ( NDI_APP_OBJ ) Returns the name of the app modified for use as a variable name , either as a Matlab variable or a name in a document . Help for ndi . calc . vis . contrast_sensitivity / varappname is inherited from superclass ndi . app version_url - return the app version and url [ V , URL ] = VERSION_URL ( NDI_APP_OBJ ) Return the version and url for the current app . In the base class , it is assumed that GIT is used and is available from the command line and the version and url are read from the git directory . Developers should override this method in their own class if they use a different version control system . Help for ndi . calc . vis . contrast_sensitivity / version_url is inherited from superclass ndi . app","title":"ndi.calc.vis.contrast_sensitivity"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/contrast_sensitivity.m/#class-ndicalcviscontrast_sensitivity","text":"CONTRAST_TUNING - a contrast_sensitivity demonstration of an ndi.calculator object CONTRAST_TUNING_OBJ = CONTRAST_TUNING(SESSION) Creates a CONTRAST_TUNING ndi.calculator object","title":"CLASS ndi.calc.vis.contrast_sensitivity"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/contrast_sensitivity.m/#superclasses","text":"ndi.calculator , ndi.app , ndi.documentservice , ndi.app.appdoc","title":"Superclasses"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/contrast_sensitivity.m/#properties","text":"Property Description fast_start session name doc_types doc_document_types doc_session","title":"Properties"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/contrast_sensitivity.m/#methods","text":"Method Description add_appdoc Load data from an application document appdoc_description --------------------------------------------------------------------------------------------- calculate perform the calculator for ndi.calc.example.contrast_sensitivity clear_appdoc remove an ndi.app.appdoc document from a session database contrast_sensitivity a contrast_sensitivity demonstration of an ndi.calculator object default_parameters_query what queries should be used to search for input parameters if none are provided? default_search_for_input_parameters default parameters for searching for inputs defaultstruct_appdoc return a default appdoc structure for a given APPDOC type doc2struct create an ndi.document from an input structure and input parameters doc_about --------------------------------------------------------------------------------------------- find_appdoc find an ndi.app.appdoc document in the session database graphical_edit_calculator create and control a GUI to graphically edit an NDI calculator instance is_valid_dependency_input is a potential dependency input actually valid for this calculator? isequal_appdoc_struct are two APPDOC data structures the same (equal)? isvalid_appdoc_struct is an input structure a valid descriptor for an APPDOC? loaddata_appdoc Load data from an application document newdocument return a new database document of type ndi.document based on an app plot provide a diagnostic plot to show the results of the calculator plot_parameters provide a diagnostic plot to show the results of the calculator, if appropriate run run calculator on all possible inputs that match some parameters search_for_calculator_docs search for previous calculators search_for_input_parameters search for valid inputs to the calculator searchquery return a search query for an ndi.document related to this app struct2doc create an ndi.document from an input structure and input parameters varappname return the name of the application for use in variable creation version_url return the app version and url","title":"Methods"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/contrast_sensitivity.m/#methods-help","text":"add_appdoc - Load data from an application document [...] = ADD_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , ... APPDOC_STRUCT , DOCEXISTSACTION , [ additional arguments ]) Creates a new ndi . document that is based on the type APPDOC_TYPE with creation data specified by APPDOC_STRUCT . [ additional inputs ] are used to find or specify the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . The DOC is returned as a cell array of NDI_DOCUMENTs ( should have 1 entry but could have more than 1 if the document already exists ). If APPDOC_STRUCT is empty , then default values are used . If it is a character array , then it is assumed to be a filename of a tab - separated - value text file . If it is an ndi . document , then it is assumed to be an ndi . document and it will be converted to the parameters using DOC2STRUCT . This function also takes a string DOCEXISTSACTION that describes what it should do in the event that the document fitting the [ additional inputs ] already exists : DOCEXISTACTION value | Description ---------------------------------------------------------------------------------- ' Error ' | An error is generating indicating the document exists . ' NoAction ' | The existing document is left alone . The existing ndi . document | is returned in DOC . ' Replace ' | Replace the document ; note that this deletes all NDI_DOCUMENTS | that depend on the original . ' ReplaceIfDifferent ' | Conditionally replace the document , but only if the | the data structures that define the document are not equal . Help for ndi . calc . vis . contrast_sensitivity / add_appdoc is inherited from superclass ndi . app . appdoc appdoc_description - --------------------------------------------------------------------------------------------- DOCUMENT INFO: ---------------------------------------------------------------------------------------------- --------- | ABOUT | --------- To see the ABOUT information for the document that is created by this calculator , see 'help ndi . calculator/doc_about' ------------ | CREATION | ------------ DOC = CALCULATE(NDI_CALCULATOR_OBJ , PARAMETERS) PARAMETERS should contain the following fields: Fieldname | Description ------------------------------------------------------------------------- input_parameters | field1 description depends_on | field2 description ----------- | FINDING | ----------- [ DOC ] = SEARCH_FOR_CALCULATOR_DOCS(NDI_CALCULATOR_OBJ , PARAMETERS) PARAMETERS should contain the following fields: Fieldname | Description ------------------------------------------------------------------------- input_parameters | field1 description depends_on | field2 description Help for ndi . calc . vis . contrast_sensitivity/appdoc_description is inherited from superclass ndi . calculator calculate - perform the calculator for ndi.calc.example.contrast_sensitivity DOC = CALCULATE(NDI_CALCULATOR_OBJ, PARAMETERS) Creates a contrast_sensitivity_calc document given input parameters. The document that is created contrast_sensitivity by the input parameters. check inputs clear_appdoc - remove an ndi.app.appdoc document from a session database B = CLEAR_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional inputs ]) Deletes the app document of style DOC_NAME from the database . [ additional inputs ] are used to find the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . B is 1 if the document is found , and 0 otherwise . Help for ndi . calc . vis . contrast_sensitivity / clear_appdoc is inherited from superclass ndi . app . appdoc contrast_sensitivity - a contrast_sensitivity demonstration of an ndi.calculator object CONTRAST_TUNING_OBJ = CONTRAST_TUNING ( SESSION ) Creates a CONTRAST_TUNING ndi . calculator object Documentation for ndi . calc . vis . contrast_sensitivity / contrast_sensitivity doc ndi . calc . vis . contrast_sensitivity default_parameters_query - what queries should be used to search for input parameters if none are provided? QUERY = DEFAULT_PARAMETERS_QUERY ( NDI_CALCULATOR_OBJ , PARAMETERS_SPECIFICATION ) When one calls SEARCH_FOR_INPUT_PARAMETERS , it is possible to specify a ' query ' structure to select particular documents to be placed into the parameters ' depends_on ' specification . If one does not provide any ' query ' structure , then the default values here are used . The function returns : |-----------------------|----------------------------------------------| | query | A structure with ' name ' and ' query ' fields | | | that describes a search to be performed to | | | identify inputs for the ' depends_on ' field | | | in the PARAMETERS output . | |-----------------------|----------------------------------------------- For the ndi . calc . stimulus . contrast_sensitivity_calc class , this looks for documents of type ' stimulus_response_scalar.json ' with ' response_type ' fields the contain ' mean ' or ' F1 ' . default_search_for_input_parameters - default parameters for searching for inputs PARAMETERS = DEFAULT_SEARCH_FOR_INPUT_PARAMETERS ( NDI_CALCULATOR_OBJ ) Returns a list of the default search parameters for finding appropriate inputs to the calculator . For contrast_sensitivity_calc , there is no appropriate default parameters so this search will yield empty . defaultstruct_appdoc - return a default appdoc structure for a given APPDOC type APPDOC_STRUCT = DEFAULTSTRUCT_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE ) Return the default data structure for a given APPDOC_TYPE of an ndi . app . appdoc object . In the base class , the blank version of the ndi . document is read in and the default structure is built from the ndi . document ' s class property list. Help for ndi . calc . vis . contrast_sensitivity / defaultstruct_appdoc is inherited from superclass ndi . app . appdoc doc2struct - create an ndi.document from an input structure and input parameters DOC = STRUCT2DOC ( NDI_APPDOC_OBJ , SESSION , APPDOC_TYPE , APPDOC_STRUCT , [ additional parameters ] Create an ndi . document from a data structure APPDOC_STRUCT . The ndi . document is created according to the APPDOC_TYPE of the NDI_APPDOC_OBJ . In the base class , this uses the property info in the ndi . document to load the data structure . Help for ndi . calc . vis . contrast_sensitivity / doc2struct is inherited from superclass ndi . app . appdoc doc_about - --------------------------------------------------------------------------------------------- NDI_CALCULATOR: CONTRAST_SENSITIVITY_CALC ---------------------------------------------------------------------------------------------- ------------------------ | CONTRAST_TUNING_CALC -- ABOUT | ------------------------ CONTRAST_TUNING_CALC is a demonstration document . It simply produces the 'answer' that is provided in the input parameters . Each CONTRAST_TUNING_CALC document 'depends_on' an NDI daq system . Definition: apps/contrast_sensitivity_calc . json find_appdoc - find an ndi.app.appdoc document in the session database DOC = FIND_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional inputs ]) Using search criteria that is supported by [ additional inputs ], FIND_APPDOC searches the database for the ndi . document object DOC that is described by APPDOC_TYPE . DOC is always a cell array of all matching NDI_DOCUMENTs . In this superclass , empty is always returned . Subclasses should override this function to search for each document type . The documentation for subclasses should be in the overriden function APPDOC_DESCRIPTION . Help for ndi . calc . vis . contrast_sensitivity / find_appdoc is inherited from superclass ndi . app . appdoc graphical_edit_calculator - create and control a GUI to graphically edit an NDI calculator instance GRAPHICAL_EDIT_CALCULATOR ( ... ) Creates and controls a graphical user interface for creating an instance of an ndi . calculator object . Usage by the user : GRAPHICAL_EDIT_CALCULATOR ( ' command ' , ' NEW ' , ' type ' , ' ndi.calc.TYPE ' , ' filename ' , filename , ' name ' , name ) or GRAPHICAL_EDIT_CALCULATOR ( ' command ' , ' EDIT ' , ' filename ' , filename ) Help for ndi . calc . vis . contrast_sensitivity . graphical_edit_calculator is inherited from superclass ndi . calculator is_valid_dependency_input - is a potential dependency input actually valid for this calculator? B = IS_VALID_DEPENDENCY_INPUT ( NDI_CALCULATOR_OBJ , NAME , VALUE ) Tests whether a potential input to a calculator is valid . The potential dependency name is provided in NAME and its ndi_document id is provided in VALUE . The base class behavior of this function is simply to return true , but it can be overriden if additional criteria beyond an ndi . query are needed to assess if a document is an appropriate input for the calculator . Help for ndi . calc . vis . contrast_sensitivity / is_valid_dependency_input is inherited from superclass ndi . calculator isequal_appdoc_struct - are two APPDOC data structures the same (equal)? B = ISEQUAL_APPDOC_STRUCT ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT1 , APPDOC_STRUCT2 ) Returns 1 if the structures APPDOC_STRUCT1 and APPDOC_STRUCT2 are valid and equal . This is true if APPDOC_STRUCT2 true if APPDOC_STRUCT1 and APPDOC_STRUCT2 have the same field names and same values and same sizes . That is , B is vlt . data . eqlen ( APPDOC_STRUCT1 , APPDOC_STRUCT2 ) . Help for ndi . calc . vis . contrast_sensitivity / isequal_appdoc_struct is inherited from superclass ndi . calculator isvalid_appdoc_struct - is an input structure a valid descriptor for an APPDOC? [ B , ERRORMSG ] = ISVALID_APPDOC_STRUCT ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT ) Examines APPDOC_STRUCT and determines whether it is a valid input for creating an ndi . document described by APPDOC_TYPE . B is 1 if it is valid and 0 otherwise . In the base class , B is always 0 with ERRORMSG ' Base class always returns invalid. ' Help for ndi . calc . vis . contrast_sensitivity / isvalid_appdoc_struct is inherited from superclass ndi . app . appdoc loaddata_appdoc - Load data from an application document [...] = LOADDATA_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional arguments ]) Loads the data from app document of style DOC_NAME from the database . [ additional inputs ] are used to find the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . In the base class , this always returns empty . This function should be overridden by each subclass . The documentation for subclasses should be in the overridden function APPDOC_DESCRIPTION . Help for ndi . calc . vis . contrast_sensitivity / loaddata_appdoc is inherited from superclass ndi . app . appdoc newdocument - return a new database document of type ndi.document based on an app NDI_DOCUMENT_OBJ = NEWDOCUMENT ( NDI_APP_OBJ ) Creates a blank ndi . document object of type ' ndi_document_app ' . The ' app.name ' field is filled out with the name of NDI_APP_OBJ . VARAPPNAME () . Help for ndi . calc . vis . contrast_sensitivity / newdocument is inherited from superclass ndi . app plot - provide a diagnostic plot to show the results of the calculator H = PLOT ( NDI_CALCULATOR_OBJ , DOC_OR_PARAMETERS , ... ) Produce a plot of the tuning curve . Handles to the figure , the axes , and any objects created are returned in H . This function takes additional input arguments as name / value pairs . See ndi . calculator . plot_parameters for a description of those parameters . plot_parameters - provide a diagnostic plot to show the results of the calculator, if appropriate PLOT ( NDI_CALCULATOR_OBJ , DOC_OR_PARAMETERS , ... ) Produce a diagnostic plot that can indicate to a reader whether or not the calculator has been performed in a manner that makes sense with its input data . Useful for debugging / validating a calculator . By default , this plot is made in the current axes . This function takes additional input arguments as name / value pairs : |---------------------------|--------------------------------------| | Parameter ( default ) | Description | |---------------------------|--------------------------------------| | newfigure ( 0 ) | 0 / 1 Should we make a new figure ? | | holdstate ( 0 ) | 0 / 1 Should we preserve the ' hold ' | | | state of the current axes ? | | suppress_x_label ( 0 ) | 0 / 1 Should we suppress the x label ? | | suppress_y_label ( 0 ) | 0 / 1 Should we suppress the y label ? | | suppress_z_label ( 0 ) | 0 / 1 Should we suppress the z label ? | | suppress_title ( 0 ) | 0 / 1 Should we suppress the title ? | |---------------------------|--------------------------------------| Help for ndi . calc . vis . contrast_sensitivity . plot_parameters is inherited from superclass ndi . calculator run - run calculator on all possible inputs that match some parameters DOCS = RUN ( NDI_CALCULATOR_OBJ , DOCEXISTSACTION , PARAMETERS ) DOCEXISTSACTION can be 'Error' , 'NoAction' , 'Replace' , or 'ReplaceIfDifferent' For calculators , 'ReplaceIfDifferent' is equivalent to 'NoAction' because the input parameters define the calculator . Step 1 : set up input parameters ; they can either be completely specified by the caller , or defaults can be used Help for ndi . calc . vis . contrast_sensitivity / run is inherited from superclass ndi . calculator search_for_calculator_docs - search for previous calculators [ DOCS ] = SEARCH_FOR_CALCULATOR ( NDI_CALCULATOR_OBJ , PARAMETERS ) Performs a search to find all previously - created calculator documents that this mini - app creates . PARAMETERS is a structure with the following fields |------------------------|----------------------------------| | Fieldname | Description | |-----------------------------------------------------------| | input_parameters | A structure of input parameters | | | needed by the calculator . | | depends_on | A structure with fields 'name' | | | and 'value' that indicates any | | | exact matches that should be | | | satisfied . | |------------------------|----------------------------------| in the abstract class , this returns empty Help for ndi . calc . vis . contrast_sensitivity / search_for_calculator_docs is inherited from superclass ndi . calculator search_for_input_parameters - search for valid inputs to the calculator PARAMETERS = SEARCH_FOR_INPUT_PARAMETERS ( NDI_CALCULATOR_OBJ , PARAMETERS_SPECIFICATION ) Identifies all possible sets of specific input PARAMETERS that can be used as inputs to the calculator . PARAMETERS is a cell array of parameter structures with fields ' input_parameters ' and ' depends_on ' . PARAMETERS_SPECIFICATION is a structure with the following fields : |----------------------------------------------------------------------| | input_parameters | A structure of fixed input parameters needed | | | by the calculator . Should not depend on | | | values in other documents . | | depends_on | A structure with ' name ' and ' value ' fields | | | that lists specific inputs that should be | | | used for the ' depends_on ' field in the | | | PARAMETERS output . | | query | A structure with ' name ' and ' query ' fields | | | that describes a search to be performed to | | | identify inputs for the ' depends_on ' field | | | in the PARAMETERS output . | |-----------------------|----------------------------------------------- Help for ndi . calc . vis . contrast_sensitivity / search_for_input_parameters is inherited from superclass ndi . calculator searchquery - return a search query for an ndi.document related to this app C = SEARCHQUERY ( NDI_APP_OBJ ) Returns a cell array of strings that allow the creation or searching of an ndi . database document for this app with field ' app ' that has subfield ' name ' equal to the app ' s VARAPPNAME. Help for ndi . calc . vis . contrast_sensitivity / searchquery is inherited from superclass ndi . app struct2doc - create an ndi.document from an input structure and input parameters DOC = STRUCT2DOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT , [ additional parameters ] Create an ndi . document from a data structure APPDOC_STRUCT . The ndi . document is created according to the APPDOC_TYPE of the NDI_APPDOC_OBJ . In the base class , this always returns empty . It must be overridden in subclasses . The documentation for overriden functions should be in the function APPDOC_DESCRIPTION . Help for ndi . calc . vis . contrast_sensitivity / struct2doc is inherited from superclass ndi . app . appdoc varappname - return the name of the application for use in variable creation AN = VARAPPNAME ( NDI_APP_OBJ ) Returns the name of the app modified for use as a variable name , either as a Matlab variable or a name in a document . Help for ndi . calc . vis . contrast_sensitivity / varappname is inherited from superclass ndi . app version_url - return the app version and url [ V , URL ] = VERSION_URL ( NDI_APP_OBJ ) Return the version and url for the current app . In the base class , it is assumed that GIT is used and is available from the command line and the version and url are read from the git directory . Developers should override this method in their own class if they use a different version control system . Help for ndi . calc . vis . contrast_sensitivity / version_url is inherited from superclass ndi . app","title":"Methods help"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/contrast_tuning.m/","text":"CLASS ndi.calc.vis.contrast_tuning \u00b6 CONTRAST_TUNING - a contrast_tuning demonstration of an ndi.calculator object CONTRAST_TUNING_OBJ = CONTRAST_TUNING(SESSION) Creates a CONTRAST_TUNING ndi.calculator object Superclasses \u00b6 ndi.calculator , ndi.app , ndi.documentservice , ndi.app.appdoc Properties \u00b6 Property Description fast_start session name doc_types doc_document_types doc_session Methods \u00b6 Method Description add_appdoc Load data from an application document appdoc_description --------------------------------------------------------------------------------------------- calculate perform the calculator for ndi.calc.example.contrast_tuning calculate_contrast_indexes calculate contrast index values from a tuning curve clear_appdoc remove an ndi.app.appdoc document from a session database contrast_tuning a contrast_tuning demonstration of an ndi.calculator object default_parameters_query what queries should be used to search for input parameters if none are provided? default_search_for_input_parameters default parameters for searching for inputs defaultstruct_appdoc return a default appdoc structure for a given APPDOC type doc2struct create an ndi.document from an input structure and input parameters doc_about --------------------------------------------------------------------------------------------- find_appdoc find an ndi.app.appdoc document in the session database graphical_edit_calculator create and control a GUI to graphically edit an NDI calculator instance is_valid_dependency_input is a potential dependency input actually valid for this calculator? isequal_appdoc_struct are two APPDOC data structures the same (equal)? isvalid_appdoc_struct is an input structure a valid descriptor for an APPDOC? loaddata_appdoc Load data from an application document newdocument return a new database document of type ndi.document based on an app plot provide a diagnostic plot to show the results of the calculator plot_parameters provide a diagnostic plot to show the results of the calculator, if appropriate run run calculator on all possible inputs that match some parameters search_for_calculator_docs search for previous calculators search_for_input_parameters search for valid inputs to the calculator searchquery return a search query for an ndi.document related to this app struct2doc create an ndi.document from an input structure and input parameters varappname return the name of the application for use in variable creation version_url return the app version and url Methods help \u00b6 add_appdoc - Load data from an application document [...] = ADD_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , ... APPDOC_STRUCT , DOCEXISTSACTION , [ additional arguments ]) Creates a new ndi . document that is based on the type APPDOC_TYPE with creation data specified by APPDOC_STRUCT . [ additional inputs ] are used to find or specify the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . The DOC is returned as a cell array of NDI_DOCUMENTs ( should have 1 entry but could have more than 1 if the document already exists ). If APPDOC_STRUCT is empty , then default values are used . If it is a character array , then it is assumed to be a filename of a tab - separated - value text file . If it is an ndi . document , then it is assumed to be an ndi . document and it will be converted to the parameters using DOC2STRUCT . This function also takes a string DOCEXISTSACTION that describes what it should do in the event that the document fitting the [ additional inputs ] already exists : DOCEXISTACTION value | Description ---------------------------------------------------------------------------------- ' Error ' | An error is generating indicating the document exists . ' NoAction ' | The existing document is left alone . The existing ndi . document | is returned in DOC . ' Replace ' | Replace the document ; note that this deletes all NDI_DOCUMENTS | that depend on the original . ' ReplaceIfDifferent ' | Conditionally replace the document , but only if the | the data structures that define the document are not equal . Help for ndi . calc . vis . contrast_tuning / add_appdoc is inherited from superclass ndi . app . appdoc appdoc_description - --------------------------------------------------------------------------------------------- DOCUMENT INFO: ---------------------------------------------------------------------------------------------- --------- | ABOUT | --------- To see the ABOUT information for the document that is created by this calculator , see 'help ndi . calculator/doc_about' ------------ | CREATION | ------------ DOC = CALCULATE(NDI_CALCULATOR_OBJ , PARAMETERS) PARAMETERS should contain the following fields: Fieldname | Description ------------------------------------------------------------------------- input_parameters | field1 description depends_on | field2 description ----------- | FINDING | ----------- [ DOC ] = SEARCH_FOR_CALCULATOR_DOCS(NDI_CALCULATOR_OBJ , PARAMETERS) PARAMETERS should contain the following fields: Fieldname | Description ------------------------------------------------------------------------- input_parameters | field1 description depends_on | field2 description Help for ndi . calc . vis . contrast_tuning/appdoc_description is inherited from superclass ndi . calculator calculate - perform the calculator for ndi.calc.example.contrast_tuning DOC = CALCULATE(NDI_CALCULATOR_OBJ, PARAMETERS) Creates a contrast_tuning_calc document given input parameters. The document that is created contrast_tuning by the input parameters. check inputs calculate_contrast_indexes - calculate contrast index values from a tuning curve CONTRAST_PROPS_DOC = CALCULATE_CONTRAST_INDEXES(NDI_CONTRAST_TUNING_CALC_OBJ, TUNING_DOC) Given a 1-dimensional tuning curve document, this function calculates contrast response parameters and stores them in CONTRAST_TUNING document CONTRAST_PROPS_DOC. clear_appdoc - remove an ndi.app.appdoc document from a session database B = CLEAR_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional inputs ]) Deletes the app document of style DOC_NAME from the database . [ additional inputs ] are used to find the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . B is 1 if the document is found , and 0 otherwise . Help for ndi . calc . vis . contrast_tuning / clear_appdoc is inherited from superclass ndi . app . appdoc contrast_tuning - a contrast_tuning demonstration of an ndi.calculator object CONTRAST_TUNING_OBJ = CONTRAST_TUNING ( SESSION ) Creates a CONTRAST_TUNING ndi . calculator object Documentation for ndi . calc . vis . contrast_tuning / contrast_tuning doc ndi . calc . vis . contrast_tuning default_parameters_query - what queries should be used to search for input parameters if none are provided? QUERY = DEFAULT_PARAMETERS_QUERY ( NDI_CALCULATOR_OBJ , PARAMETERS_SPECIFICATION ) When one calls SEARCH_FOR_INPUT_PARAMETERS , it is possible to specify a ' query ' structure to select particular documents to be placed into the parameters ' depends_on ' specification . If one does not provide any ' query ' structure , then the default values here are used . The function returns : |-----------------------|----------------------------------------------| | query | A structure with ' name ' and ' query ' fields | | | that describes a search to be performed to | | | identify inputs for the ' depends_on ' field | | | in the PARAMETERS output . | |-----------------------|----------------------------------------------- For the ndi . calc . stimulus . contrast_tuning_calc class , this looks for documents of type ' stimulus_response_scalar.json ' with ' response_type ' fields the contain ' mean ' or ' F1 ' . default_search_for_input_parameters - default parameters for searching for inputs PARAMETERS = DEFAULT_SEARCH_FOR_INPUT_PARAMETERS ( NDI_CALCULATOR_OBJ ) Returns a list of the default search parameters for finding appropriate inputs to the calculator . For contrast_tuning_calc , there is no appropriate default parameters so this search will yield empty . defaultstruct_appdoc - return a default appdoc structure for a given APPDOC type APPDOC_STRUCT = DEFAULTSTRUCT_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE ) Return the default data structure for a given APPDOC_TYPE of an ndi . app . appdoc object . In the base class , the blank version of the ndi . document is read in and the default structure is built from the ndi . document ' s class property list. Help for ndi . calc . vis . contrast_tuning / defaultstruct_appdoc is inherited from superclass ndi . app . appdoc doc2struct - create an ndi.document from an input structure and input parameters DOC = STRUCT2DOC ( NDI_APPDOC_OBJ , SESSION , APPDOC_TYPE , APPDOC_STRUCT , [ additional parameters ] Create an ndi . document from a data structure APPDOC_STRUCT . The ndi . document is created according to the APPDOC_TYPE of the NDI_APPDOC_OBJ . In the base class , this uses the property info in the ndi . document to load the data structure . Help for ndi . calc . vis . contrast_tuning / doc2struct is inherited from superclass ndi . app . appdoc doc_about - --------------------------------------------------------------------------------------------- NDI_CALCULATOR: CONTRAST_TUNING_CALC ---------------------------------------------------------------------------------------------- ------------------------ | CONTRAST_TUNING_CALC -- ABOUT | ------------------------ CONTRAST_TUNING_CALC is a demonstration document . It simply produces the 'answer' that is provided in the input parameters . Each CONTRAST_TUNING_CALC document 'depends_on' an NDI daq system . Definition: apps/contrast_tuning_calc . json find_appdoc - find an ndi.app.appdoc document in the session database DOC = FIND_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional inputs ]) Using search criteria that is supported by [ additional inputs ], FIND_APPDOC searches the database for the ndi . document object DOC that is described by APPDOC_TYPE . DOC is always a cell array of all matching NDI_DOCUMENTs . In this superclass , empty is always returned . Subclasses should override this function to search for each document type . The documentation for subclasses should be in the overriden function APPDOC_DESCRIPTION . Help for ndi . calc . vis . contrast_tuning / find_appdoc is inherited from superclass ndi . app . appdoc graphical_edit_calculator - create and control a GUI to graphically edit an NDI calculator instance GRAPHICAL_EDIT_CALCULATOR ( ... ) Creates and controls a graphical user interface for creating an instance of an ndi . calculator object . Usage by the user : GRAPHICAL_EDIT_CALCULATOR ( ' command ' , ' NEW ' , ' type ' , ' ndi.calc.TYPE ' , ' filename ' , filename , ' name ' , name ) or GRAPHICAL_EDIT_CALCULATOR ( ' command ' , ' EDIT ' , ' filename ' , filename ) Help for ndi . calc . vis . contrast_tuning . graphical_edit_calculator is inherited from superclass ndi . calculator is_valid_dependency_input - is a potential dependency input actually valid for this calculator? B = IS_VALID_DEPENDENCY_INPUT ( NDI_CALCULATOR_OBJ , NAME , VALUE ) Tests whether a potential input to a calculator is valid . The potential dependency name is provided in NAME and its ndi_document id is provided in VALUE . The base class behavior of this function is simply to return true , but it can be overriden if additional criteria beyond an ndi . query are needed to assess if a document is an appropriate input for the calculator . isequal_appdoc_struct - are two APPDOC data structures the same (equal)? B = ISEQUAL_APPDOC_STRUCT ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT1 , APPDOC_STRUCT2 ) Returns 1 if the structures APPDOC_STRUCT1 and APPDOC_STRUCT2 are valid and equal . This is true if APPDOC_STRUCT2 true if APPDOC_STRUCT1 and APPDOC_STRUCT2 have the same field names and same values and same sizes . That is , B is vlt . data . eqlen ( APPDOC_STRUCT1 , APPDOC_STRUCT2 ) . Help for ndi . calc . vis . contrast_tuning / isequal_appdoc_struct is inherited from superclass ndi . calculator isvalid_appdoc_struct - is an input structure a valid descriptor for an APPDOC? [ B , ERRORMSG ] = ISVALID_APPDOC_STRUCT ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT ) Examines APPDOC_STRUCT and determines whether it is a valid input for creating an ndi . document described by APPDOC_TYPE . B is 1 if it is valid and 0 otherwise . In the base class , B is always 0 with ERRORMSG ' Base class always returns invalid. ' Help for ndi . calc . vis . contrast_tuning / isvalid_appdoc_struct is inherited from superclass ndi . app . appdoc loaddata_appdoc - Load data from an application document [...] = LOADDATA_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional arguments ]) Loads the data from app document of style DOC_NAME from the database . [ additional inputs ] are used to find the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . In the base class , this always returns empty . This function should be overridden by each subclass . The documentation for subclasses should be in the overridden function APPDOC_DESCRIPTION . Help for ndi . calc . vis . contrast_tuning / loaddata_appdoc is inherited from superclass ndi . app . appdoc newdocument - return a new database document of type ndi.document based on an app NDI_DOCUMENT_OBJ = NEWDOCUMENT ( NDI_APP_OBJ ) Creates a blank ndi . document object of type ' ndi_document_app ' . The ' app.name ' field is filled out with the name of NDI_APP_OBJ . VARAPPNAME () . Help for ndi . calc . vis . contrast_tuning / newdocument is inherited from superclass ndi . app plot - provide a diagnostic plot to show the results of the calculator H = PLOT ( NDI_CALCULATOR_OBJ , DOC_OR_PARAMETERS , ... ) Produce a plot of the tuning curve . Handles to the figure , the axes , and any objects created are returned in H . This function takes additional input arguments as name / value pairs . See ndi . calculator . plot_parameters for a description of those parameters . plot_parameters - provide a diagnostic plot to show the results of the calculator, if appropriate PLOT ( NDI_CALCULATOR_OBJ , DOC_OR_PARAMETERS , ... ) Produce a diagnostic plot that can indicate to a reader whether or not the calculator has been performed in a manner that makes sense with its input data . Useful for debugging / validating a calculator . By default , this plot is made in the current axes . This function takes additional input arguments as name / value pairs : |---------------------------|--------------------------------------| | Parameter ( default ) | Description | |---------------------------|--------------------------------------| | newfigure ( 0 ) | 0 / 1 Should we make a new figure ? | | holdstate ( 0 ) | 0 / 1 Should we preserve the ' hold ' | | | state of the current axes ? | | suppress_x_label ( 0 ) | 0 / 1 Should we suppress the x label ? | | suppress_y_label ( 0 ) | 0 / 1 Should we suppress the y label ? | | suppress_z_label ( 0 ) | 0 / 1 Should we suppress the z label ? | | suppress_title ( 0 ) | 0 / 1 Should we suppress the title ? | |---------------------------|--------------------------------------| Help for ndi . calc . vis . contrast_tuning . plot_parameters is inherited from superclass ndi . calculator run - run calculator on all possible inputs that match some parameters DOCS = RUN ( NDI_CALCULATOR_OBJ , DOCEXISTSACTION , PARAMETERS ) DOCEXISTSACTION can be 'Error' , 'NoAction' , 'Replace' , or 'ReplaceIfDifferent' For calculators , 'ReplaceIfDifferent' is equivalent to 'NoAction' because the input parameters define the calculator . Step 1 : set up input parameters ; they can either be completely specified by the caller , or defaults can be used Help for ndi . calc . vis . contrast_tuning / run is inherited from superclass ndi . calculator search_for_calculator_docs - search for previous calculators [ DOCS ] = SEARCH_FOR_CALCULATOR ( NDI_CALCULATOR_OBJ , PARAMETERS ) Performs a search to find all previously - created calculator documents that this mini - app creates . PARAMETERS is a structure with the following fields |------------------------|----------------------------------| | Fieldname | Description | |-----------------------------------------------------------| | input_parameters | A structure of input parameters | | | needed by the calculator . | | depends_on | A structure with fields 'name' | | | and 'value' that indicates any | | | exact matches that should be | | | satisfied . | |------------------------|----------------------------------| in the abstract class , this returns empty Help for ndi . calc . vis . contrast_tuning / search_for_calculator_docs is inherited from superclass ndi . calculator search_for_input_parameters - search for valid inputs to the calculator PARAMETERS = SEARCH_FOR_INPUT_PARAMETERS ( NDI_CALCULATOR_OBJ , PARAMETERS_SPECIFICATION ) Identifies all possible sets of specific input PARAMETERS that can be used as inputs to the calculator . PARAMETERS is a cell array of parameter structures with fields ' input_parameters ' and ' depends_on ' . PARAMETERS_SPECIFICATION is a structure with the following fields : |----------------------------------------------------------------------| | input_parameters | A structure of fixed input parameters needed | | | by the calculator . Should not depend on | | | values in other documents . | | depends_on | A structure with ' name ' and ' value ' fields | | | that lists specific inputs that should be | | | used for the ' depends_on ' field in the | | | PARAMETERS output . | | query | A structure with ' name ' and ' query ' fields | | | that describes a search to be performed to | | | identify inputs for the ' depends_on ' field | | | in the PARAMETERS output . | |-----------------------|----------------------------------------------- Help for ndi . calc . vis . contrast_tuning / search_for_input_parameters is inherited from superclass ndi . calculator searchquery - return a search query for an ndi.document related to this app C = SEARCHQUERY ( NDI_APP_OBJ ) Returns a cell array of strings that allow the creation or searching of an ndi . database document for this app with field ' app ' that has subfield ' name ' equal to the app ' s VARAPPNAME. Help for ndi . calc . vis . contrast_tuning / searchquery is inherited from superclass ndi . app struct2doc - create an ndi.document from an input structure and input parameters DOC = STRUCT2DOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT , [ additional parameters ] Create an ndi . document from a data structure APPDOC_STRUCT . The ndi . document is created according to the APPDOC_TYPE of the NDI_APPDOC_OBJ . In the base class , this always returns empty . It must be overridden in subclasses . The documentation for overriden functions should be in the function APPDOC_DESCRIPTION . Help for ndi . calc . vis . contrast_tuning / struct2doc is inherited from superclass ndi . app . appdoc varappname - return the name of the application for use in variable creation AN = VARAPPNAME ( NDI_APP_OBJ ) Returns the name of the app modified for use as a variable name , either as a Matlab variable or a name in a document . Help for ndi . calc . vis . contrast_tuning / varappname is inherited from superclass ndi . app version_url - return the app version and url [ V , URL ] = VERSION_URL ( NDI_APP_OBJ ) Return the version and url for the current app . In the base class , it is assumed that GIT is used and is available from the command line and the version and url are read from the git directory . Developers should override this method in their own class if they use a different version control system . Help for ndi . calc . vis . contrast_tuning / version_url is inherited from superclass ndi . app","title":"ndi.calc.vis.contrast_tuning"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/contrast_tuning.m/#class-ndicalcviscontrast_tuning","text":"CONTRAST_TUNING - a contrast_tuning demonstration of an ndi.calculator object CONTRAST_TUNING_OBJ = CONTRAST_TUNING(SESSION) Creates a CONTRAST_TUNING ndi.calculator object","title":"CLASS ndi.calc.vis.contrast_tuning"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/contrast_tuning.m/#superclasses","text":"ndi.calculator , ndi.app , ndi.documentservice , ndi.app.appdoc","title":"Superclasses"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/contrast_tuning.m/#properties","text":"Property Description fast_start session name doc_types doc_document_types doc_session","title":"Properties"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/contrast_tuning.m/#methods","text":"Method Description add_appdoc Load data from an application document appdoc_description --------------------------------------------------------------------------------------------- calculate perform the calculator for ndi.calc.example.contrast_tuning calculate_contrast_indexes calculate contrast index values from a tuning curve clear_appdoc remove an ndi.app.appdoc document from a session database contrast_tuning a contrast_tuning demonstration of an ndi.calculator object default_parameters_query what queries should be used to search for input parameters if none are provided? default_search_for_input_parameters default parameters for searching for inputs defaultstruct_appdoc return a default appdoc structure for a given APPDOC type doc2struct create an ndi.document from an input structure and input parameters doc_about --------------------------------------------------------------------------------------------- find_appdoc find an ndi.app.appdoc document in the session database graphical_edit_calculator create and control a GUI to graphically edit an NDI calculator instance is_valid_dependency_input is a potential dependency input actually valid for this calculator? isequal_appdoc_struct are two APPDOC data structures the same (equal)? isvalid_appdoc_struct is an input structure a valid descriptor for an APPDOC? loaddata_appdoc Load data from an application document newdocument return a new database document of type ndi.document based on an app plot provide a diagnostic plot to show the results of the calculator plot_parameters provide a diagnostic plot to show the results of the calculator, if appropriate run run calculator on all possible inputs that match some parameters search_for_calculator_docs search for previous calculators search_for_input_parameters search for valid inputs to the calculator searchquery return a search query for an ndi.document related to this app struct2doc create an ndi.document from an input structure and input parameters varappname return the name of the application for use in variable creation version_url return the app version and url","title":"Methods"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/contrast_tuning.m/#methods-help","text":"add_appdoc - Load data from an application document [...] = ADD_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , ... APPDOC_STRUCT , DOCEXISTSACTION , [ additional arguments ]) Creates a new ndi . document that is based on the type APPDOC_TYPE with creation data specified by APPDOC_STRUCT . [ additional inputs ] are used to find or specify the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . The DOC is returned as a cell array of NDI_DOCUMENTs ( should have 1 entry but could have more than 1 if the document already exists ). If APPDOC_STRUCT is empty , then default values are used . If it is a character array , then it is assumed to be a filename of a tab - separated - value text file . If it is an ndi . document , then it is assumed to be an ndi . document and it will be converted to the parameters using DOC2STRUCT . This function also takes a string DOCEXISTSACTION that describes what it should do in the event that the document fitting the [ additional inputs ] already exists : DOCEXISTACTION value | Description ---------------------------------------------------------------------------------- ' Error ' | An error is generating indicating the document exists . ' NoAction ' | The existing document is left alone . The existing ndi . document | is returned in DOC . ' Replace ' | Replace the document ; note that this deletes all NDI_DOCUMENTS | that depend on the original . ' ReplaceIfDifferent ' | Conditionally replace the document , but only if the | the data structures that define the document are not equal . Help for ndi . calc . vis . contrast_tuning / add_appdoc is inherited from superclass ndi . app . appdoc appdoc_description - --------------------------------------------------------------------------------------------- DOCUMENT INFO: ---------------------------------------------------------------------------------------------- --------- | ABOUT | --------- To see the ABOUT information for the document that is created by this calculator , see 'help ndi . calculator/doc_about' ------------ | CREATION | ------------ DOC = CALCULATE(NDI_CALCULATOR_OBJ , PARAMETERS) PARAMETERS should contain the following fields: Fieldname | Description ------------------------------------------------------------------------- input_parameters | field1 description depends_on | field2 description ----------- | FINDING | ----------- [ DOC ] = SEARCH_FOR_CALCULATOR_DOCS(NDI_CALCULATOR_OBJ , PARAMETERS) PARAMETERS should contain the following fields: Fieldname | Description ------------------------------------------------------------------------- input_parameters | field1 description depends_on | field2 description Help for ndi . calc . vis . contrast_tuning/appdoc_description is inherited from superclass ndi . calculator calculate - perform the calculator for ndi.calc.example.contrast_tuning DOC = CALCULATE(NDI_CALCULATOR_OBJ, PARAMETERS) Creates a contrast_tuning_calc document given input parameters. The document that is created contrast_tuning by the input parameters. check inputs calculate_contrast_indexes - calculate contrast index values from a tuning curve CONTRAST_PROPS_DOC = CALCULATE_CONTRAST_INDEXES(NDI_CONTRAST_TUNING_CALC_OBJ, TUNING_DOC) Given a 1-dimensional tuning curve document, this function calculates contrast response parameters and stores them in CONTRAST_TUNING document CONTRAST_PROPS_DOC. clear_appdoc - remove an ndi.app.appdoc document from a session database B = CLEAR_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional inputs ]) Deletes the app document of style DOC_NAME from the database . [ additional inputs ] are used to find the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . B is 1 if the document is found , and 0 otherwise . Help for ndi . calc . vis . contrast_tuning / clear_appdoc is inherited from superclass ndi . app . appdoc contrast_tuning - a contrast_tuning demonstration of an ndi.calculator object CONTRAST_TUNING_OBJ = CONTRAST_TUNING ( SESSION ) Creates a CONTRAST_TUNING ndi . calculator object Documentation for ndi . calc . vis . contrast_tuning / contrast_tuning doc ndi . calc . vis . contrast_tuning default_parameters_query - what queries should be used to search for input parameters if none are provided? QUERY = DEFAULT_PARAMETERS_QUERY ( NDI_CALCULATOR_OBJ , PARAMETERS_SPECIFICATION ) When one calls SEARCH_FOR_INPUT_PARAMETERS , it is possible to specify a ' query ' structure to select particular documents to be placed into the parameters ' depends_on ' specification . If one does not provide any ' query ' structure , then the default values here are used . The function returns : |-----------------------|----------------------------------------------| | query | A structure with ' name ' and ' query ' fields | | | that describes a search to be performed to | | | identify inputs for the ' depends_on ' field | | | in the PARAMETERS output . | |-----------------------|----------------------------------------------- For the ndi . calc . stimulus . contrast_tuning_calc class , this looks for documents of type ' stimulus_response_scalar.json ' with ' response_type ' fields the contain ' mean ' or ' F1 ' . default_search_for_input_parameters - default parameters for searching for inputs PARAMETERS = DEFAULT_SEARCH_FOR_INPUT_PARAMETERS ( NDI_CALCULATOR_OBJ ) Returns a list of the default search parameters for finding appropriate inputs to the calculator . For contrast_tuning_calc , there is no appropriate default parameters so this search will yield empty . defaultstruct_appdoc - return a default appdoc structure for a given APPDOC type APPDOC_STRUCT = DEFAULTSTRUCT_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE ) Return the default data structure for a given APPDOC_TYPE of an ndi . app . appdoc object . In the base class , the blank version of the ndi . document is read in and the default structure is built from the ndi . document ' s class property list. Help for ndi . calc . vis . contrast_tuning / defaultstruct_appdoc is inherited from superclass ndi . app . appdoc doc2struct - create an ndi.document from an input structure and input parameters DOC = STRUCT2DOC ( NDI_APPDOC_OBJ , SESSION , APPDOC_TYPE , APPDOC_STRUCT , [ additional parameters ] Create an ndi . document from a data structure APPDOC_STRUCT . The ndi . document is created according to the APPDOC_TYPE of the NDI_APPDOC_OBJ . In the base class , this uses the property info in the ndi . document to load the data structure . Help for ndi . calc . vis . contrast_tuning / doc2struct is inherited from superclass ndi . app . appdoc doc_about - --------------------------------------------------------------------------------------------- NDI_CALCULATOR: CONTRAST_TUNING_CALC ---------------------------------------------------------------------------------------------- ------------------------ | CONTRAST_TUNING_CALC -- ABOUT | ------------------------ CONTRAST_TUNING_CALC is a demonstration document . It simply produces the 'answer' that is provided in the input parameters . Each CONTRAST_TUNING_CALC document 'depends_on' an NDI daq system . Definition: apps/contrast_tuning_calc . json find_appdoc - find an ndi.app.appdoc document in the session database DOC = FIND_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional inputs ]) Using search criteria that is supported by [ additional inputs ], FIND_APPDOC searches the database for the ndi . document object DOC that is described by APPDOC_TYPE . DOC is always a cell array of all matching NDI_DOCUMENTs . In this superclass , empty is always returned . Subclasses should override this function to search for each document type . The documentation for subclasses should be in the overriden function APPDOC_DESCRIPTION . Help for ndi . calc . vis . contrast_tuning / find_appdoc is inherited from superclass ndi . app . appdoc graphical_edit_calculator - create and control a GUI to graphically edit an NDI calculator instance GRAPHICAL_EDIT_CALCULATOR ( ... ) Creates and controls a graphical user interface for creating an instance of an ndi . calculator object . Usage by the user : GRAPHICAL_EDIT_CALCULATOR ( ' command ' , ' NEW ' , ' type ' , ' ndi.calc.TYPE ' , ' filename ' , filename , ' name ' , name ) or GRAPHICAL_EDIT_CALCULATOR ( ' command ' , ' EDIT ' , ' filename ' , filename ) Help for ndi . calc . vis . contrast_tuning . graphical_edit_calculator is inherited from superclass ndi . calculator is_valid_dependency_input - is a potential dependency input actually valid for this calculator? B = IS_VALID_DEPENDENCY_INPUT ( NDI_CALCULATOR_OBJ , NAME , VALUE ) Tests whether a potential input to a calculator is valid . The potential dependency name is provided in NAME and its ndi_document id is provided in VALUE . The base class behavior of this function is simply to return true , but it can be overriden if additional criteria beyond an ndi . query are needed to assess if a document is an appropriate input for the calculator . isequal_appdoc_struct - are two APPDOC data structures the same (equal)? B = ISEQUAL_APPDOC_STRUCT ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT1 , APPDOC_STRUCT2 ) Returns 1 if the structures APPDOC_STRUCT1 and APPDOC_STRUCT2 are valid and equal . This is true if APPDOC_STRUCT2 true if APPDOC_STRUCT1 and APPDOC_STRUCT2 have the same field names and same values and same sizes . That is , B is vlt . data . eqlen ( APPDOC_STRUCT1 , APPDOC_STRUCT2 ) . Help for ndi . calc . vis . contrast_tuning / isequal_appdoc_struct is inherited from superclass ndi . calculator isvalid_appdoc_struct - is an input structure a valid descriptor for an APPDOC? [ B , ERRORMSG ] = ISVALID_APPDOC_STRUCT ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT ) Examines APPDOC_STRUCT and determines whether it is a valid input for creating an ndi . document described by APPDOC_TYPE . B is 1 if it is valid and 0 otherwise . In the base class , B is always 0 with ERRORMSG ' Base class always returns invalid. ' Help for ndi . calc . vis . contrast_tuning / isvalid_appdoc_struct is inherited from superclass ndi . app . appdoc loaddata_appdoc - Load data from an application document [...] = LOADDATA_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional arguments ]) Loads the data from app document of style DOC_NAME from the database . [ additional inputs ] are used to find the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . In the base class , this always returns empty . This function should be overridden by each subclass . The documentation for subclasses should be in the overridden function APPDOC_DESCRIPTION . Help for ndi . calc . vis . contrast_tuning / loaddata_appdoc is inherited from superclass ndi . app . appdoc newdocument - return a new database document of type ndi.document based on an app NDI_DOCUMENT_OBJ = NEWDOCUMENT ( NDI_APP_OBJ ) Creates a blank ndi . document object of type ' ndi_document_app ' . The ' app.name ' field is filled out with the name of NDI_APP_OBJ . VARAPPNAME () . Help for ndi . calc . vis . contrast_tuning / newdocument is inherited from superclass ndi . app plot - provide a diagnostic plot to show the results of the calculator H = PLOT ( NDI_CALCULATOR_OBJ , DOC_OR_PARAMETERS , ... ) Produce a plot of the tuning curve . Handles to the figure , the axes , and any objects created are returned in H . This function takes additional input arguments as name / value pairs . See ndi . calculator . plot_parameters for a description of those parameters . plot_parameters - provide a diagnostic plot to show the results of the calculator, if appropriate PLOT ( NDI_CALCULATOR_OBJ , DOC_OR_PARAMETERS , ... ) Produce a diagnostic plot that can indicate to a reader whether or not the calculator has been performed in a manner that makes sense with its input data . Useful for debugging / validating a calculator . By default , this plot is made in the current axes . This function takes additional input arguments as name / value pairs : |---------------------------|--------------------------------------| | Parameter ( default ) | Description | |---------------------------|--------------------------------------| | newfigure ( 0 ) | 0 / 1 Should we make a new figure ? | | holdstate ( 0 ) | 0 / 1 Should we preserve the ' hold ' | | | state of the current axes ? | | suppress_x_label ( 0 ) | 0 / 1 Should we suppress the x label ? | | suppress_y_label ( 0 ) | 0 / 1 Should we suppress the y label ? | | suppress_z_label ( 0 ) | 0 / 1 Should we suppress the z label ? | | suppress_title ( 0 ) | 0 / 1 Should we suppress the title ? | |---------------------------|--------------------------------------| Help for ndi . calc . vis . contrast_tuning . plot_parameters is inherited from superclass ndi . calculator run - run calculator on all possible inputs that match some parameters DOCS = RUN ( NDI_CALCULATOR_OBJ , DOCEXISTSACTION , PARAMETERS ) DOCEXISTSACTION can be 'Error' , 'NoAction' , 'Replace' , or 'ReplaceIfDifferent' For calculators , 'ReplaceIfDifferent' is equivalent to 'NoAction' because the input parameters define the calculator . Step 1 : set up input parameters ; they can either be completely specified by the caller , or defaults can be used Help for ndi . calc . vis . contrast_tuning / run is inherited from superclass ndi . calculator search_for_calculator_docs - search for previous calculators [ DOCS ] = SEARCH_FOR_CALCULATOR ( NDI_CALCULATOR_OBJ , PARAMETERS ) Performs a search to find all previously - created calculator documents that this mini - app creates . PARAMETERS is a structure with the following fields |------------------------|----------------------------------| | Fieldname | Description | |-----------------------------------------------------------| | input_parameters | A structure of input parameters | | | needed by the calculator . | | depends_on | A structure with fields 'name' | | | and 'value' that indicates any | | | exact matches that should be | | | satisfied . | |------------------------|----------------------------------| in the abstract class , this returns empty Help for ndi . calc . vis . contrast_tuning / search_for_calculator_docs is inherited from superclass ndi . calculator search_for_input_parameters - search for valid inputs to the calculator PARAMETERS = SEARCH_FOR_INPUT_PARAMETERS ( NDI_CALCULATOR_OBJ , PARAMETERS_SPECIFICATION ) Identifies all possible sets of specific input PARAMETERS that can be used as inputs to the calculator . PARAMETERS is a cell array of parameter structures with fields ' input_parameters ' and ' depends_on ' . PARAMETERS_SPECIFICATION is a structure with the following fields : |----------------------------------------------------------------------| | input_parameters | A structure of fixed input parameters needed | | | by the calculator . Should not depend on | | | values in other documents . | | depends_on | A structure with ' name ' and ' value ' fields | | | that lists specific inputs that should be | | | used for the ' depends_on ' field in the | | | PARAMETERS output . | | query | A structure with ' name ' and ' query ' fields | | | that describes a search to be performed to | | | identify inputs for the ' depends_on ' field | | | in the PARAMETERS output . | |-----------------------|----------------------------------------------- Help for ndi . calc . vis . contrast_tuning / search_for_input_parameters is inherited from superclass ndi . calculator searchquery - return a search query for an ndi.document related to this app C = SEARCHQUERY ( NDI_APP_OBJ ) Returns a cell array of strings that allow the creation or searching of an ndi . database document for this app with field ' app ' that has subfield ' name ' equal to the app ' s VARAPPNAME. Help for ndi . calc . vis . contrast_tuning / searchquery is inherited from superclass ndi . app struct2doc - create an ndi.document from an input structure and input parameters DOC = STRUCT2DOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT , [ additional parameters ] Create an ndi . document from a data structure APPDOC_STRUCT . The ndi . document is created according to the APPDOC_TYPE of the NDI_APPDOC_OBJ . In the base class , this always returns empty . It must be overridden in subclasses . The documentation for overriden functions should be in the function APPDOC_DESCRIPTION . Help for ndi . calc . vis . contrast_tuning / struct2doc is inherited from superclass ndi . app . appdoc varappname - return the name of the application for use in variable creation AN = VARAPPNAME ( NDI_APP_OBJ ) Returns the name of the app modified for use as a variable name , either as a Matlab variable or a name in a document . Help for ndi . calc . vis . contrast_tuning / varappname is inherited from superclass ndi . app version_url - return the app version and url [ V , URL ] = VERSION_URL ( NDI_APP_OBJ ) Return the version and url for the current app . In the base class , it is assumed that GIT is used and is available from the command line and the version and url are read from the git directory . Developers should override this method in their own class if they use a different version control system . Help for ndi . calc . vis . contrast_tuning / version_url is inherited from superclass ndi . app","title":"Methods help"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/hartley_calc.m/","text":"CLASS ndi.calc.vis.hartley_calc \u00b6 HARTLEY_CALC - a hartley_calc demonstration of an ndi.calculator object HARTLEY_CALC_OBJ = HARTLEY_CALC(SESSION) Creates a HARTLEY_CALC ndi.calculator object Superclasses \u00b6 ndi.calculator , ndi.app , ndi.documentservice , ndi.app.appdoc Properties \u00b6 Property Description fast_start session name doc_types doc_document_types doc_session Methods \u00b6 Method Description add_appdoc Load data from an application document appdoc_description --------------------------------------------------------------------------------------------- calculate perform the calculator for ndi.calc.example.hartley_calc clear_appdoc remove an ndi.app.appdoc document from a session database default_parameters_query what queries should be used to search for input parameters if none are provided? default_search_for_input_parameters default parameters for searching for inputs defaultstruct_appdoc return a default appdoc structure for a given APPDOC type doc2struct create an ndi.document from an input structure and input parameters doc_about --------------------------------------------------------------------------------------------- find_appdoc find an ndi.app.appdoc document in the session database graphical_edit_calculator create and control a GUI to graphically edit an NDI calculator instance hartley_calc a hartley_calc demonstration of an ndi.calculator object hartleystimdocstruct return the fields of the Hartley stimulus necessary for the hartley_reverse_correlation document is_valid_dependency_input is a potential dependency input actually valid for this calculator? isequal_appdoc_struct are two APPDOC data structures the same (equal)? ishartleystim does a stimulus presentation doc contain a Hartley stimulus? isvalid_appdoc_struct is an input structure a valid descriptor for an APPDOC? loaddata_appdoc Load data from an application document newdocument return a new database document of type ndi.document based on an app plot provide a diagnostic plot to show the results of the calculator plot_parameters provide a diagnostic plot to show the results of the calculator, if appropriate run run calculator on all possible inputs that match some parameters search_for_calculator_docs search for previous calculators search_for_input_parameters search for valid inputs to the calculator searchquery return a search query for an ndi.document related to this app struct2doc create an ndi.document from an input structure and input parameters varappname return the name of the application for use in variable creation version_url return the app version and url Methods help \u00b6 add_appdoc - Load data from an application document [...] = ADD_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , ... APPDOC_STRUCT , DOCEXISTSACTION , [ additional arguments ]) Creates a new ndi . document that is based on the type APPDOC_TYPE with creation data specified by APPDOC_STRUCT . [ additional inputs ] are used to find or specify the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . The DOC is returned as a cell array of NDI_DOCUMENTs ( should have 1 entry but could have more than 1 if the document already exists ). If APPDOC_STRUCT is empty , then default values are used . If it is a character array , then it is assumed to be a filename of a tab - separated - value text file . If it is an ndi . document , then it is assumed to be an ndi . document and it will be converted to the parameters using DOC2STRUCT . This function also takes a string DOCEXISTSACTION that describes what it should do in the event that the document fitting the [ additional inputs ] already exists : DOCEXISTACTION value | Description ---------------------------------------------------------------------------------- ' Error ' | An error is generating indicating the document exists . ' NoAction ' | The existing document is left alone . The existing ndi . document | is returned in DOC . ' Replace ' | Replace the document ; note that this deletes all NDI_DOCUMENTS | that depend on the original . ' ReplaceIfDifferent ' | Conditionally replace the document , but only if the | the data structures that define the document are not equal . Help for ndi . calc . vis . hartley_calc / add_appdoc is inherited from superclass ndi . app . appdoc appdoc_description - --------------------------------------------------------------------------------------------- DOCUMENT INFO: ---------------------------------------------------------------------------------------------- --------- | ABOUT | --------- To see the ABOUT information for the document that is created by this calculator , see 'help ndi . calculator/doc_about' ------------ | CREATION | ------------ DOC = CALCULATE(NDI_CALCULATOR_OBJ , PARAMETERS) PARAMETERS should contain the following fields: Fieldname | Description ------------------------------------------------------------------------- input_parameters | field1 description depends_on | field2 description ----------- | FINDING | ----------- [ DOC ] = SEARCH_FOR_CALCULATOR_DOCS(NDI_CALCULATOR_OBJ , PARAMETERS) PARAMETERS should contain the following fields: Fieldname | Description ------------------------------------------------------------------------- input_parameters | field1 description depends_on | field2 description Help for ndi . calc . vis . hartley_calc/appdoc_description is inherited from superclass ndi . calculator calculate - perform the calculator for ndi.calc.example.hartley_calc DOC = CALCULATE(NDI_CALCULATOR_OBJ, PARAMETERS) Creates a hartley_calc_calc document given input parameters. The document that is created hartley_calc by the input parameters. clear_appdoc - remove an ndi.app.appdoc document from a session database B = CLEAR_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional inputs ]) Deletes the app document of style DOC_NAME from the database . [ additional inputs ] are used to find the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . B is 1 if the document is found , and 0 otherwise . Help for ndi . calc . vis . hartley_calc / clear_appdoc is inherited from superclass ndi . app . appdoc default_parameters_query - what queries should be used to search for input parameters if none are provided? QUERY = DEFAULT_PARAMETERS_QUERY ( NDI_CALCULATOR_OBJ , PARAMETERS_SPECIFICATION ) When one calls SEARCH_FOR_INPUT_PARAMETERS , it is possible to specify a ' query ' structure to select particular documents to be placed into the parameters ' depends_on ' specification . If one does not provide any ' query ' structure , then the default values here are used . The function returns : |-----------------------|----------------------------------------------| | query | A structure with ' name ' and ' query ' fields | | | that describes a search to be performed to | | | identify inputs for the ' depends_on ' field | | | in the PARAMETERS output . | |-----------------------|----------------------------------------------- For the ndi . calc . stimulus . hartley_calc_calc class , this looks for documents of type ' stimulus_response_scalar.json ' with ' response_type ' fields the contain ' mean ' or ' F1 ' . default_search_for_input_parameters - default parameters for searching for inputs PARAMETERS = DEFAULT_SEARCH_FOR_INPUT_PARAMETERS ( NDI_CALCULATOR_OBJ ) Returns a list of the default search parameters for finding appropriate inputs to the calculator . For hartley_calc_calc , there is no appropriate default parameters so this search will yield empty . defaultstruct_appdoc - return a default appdoc structure for a given APPDOC type APPDOC_STRUCT = DEFAULTSTRUCT_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE ) Return the default data structure for a given APPDOC_TYPE of an ndi . app . appdoc object . In the base class , the blank version of the ndi . document is read in and the default structure is built from the ndi . document ' s class property list. Help for ndi . calc . vis . hartley_calc / defaultstruct_appdoc is inherited from superclass ndi . app . appdoc doc2struct - create an ndi.document from an input structure and input parameters DOC = STRUCT2DOC ( NDI_APPDOC_OBJ , SESSION , APPDOC_TYPE , APPDOC_STRUCT , [ additional parameters ] Create an ndi . document from a data structure APPDOC_STRUCT . The ndi . document is created according to the APPDOC_TYPE of the NDI_APPDOC_OBJ . In the base class , this uses the property info in the ndi . document to load the data structure . Help for ndi . calc . vis . hartley_calc / doc2struct is inherited from superclass ndi . app . appdoc doc_about - --------------------------------------------------------------------------------------------- NDI_CALCULATOR: HARTLEY_CALC ---------------------------------------------------------------------------------------------- ------------------------ | HARTLEY_CALC -- ABOUT | ------------------------ HARTLEY_CALC is a demonstration document . It simply produces the 'answer' that is provided in the input parameters . Each HARTLEY_CALC document 'depends_on' an NDI daq system . Definition: apps/hartley_calc_calc . json find_appdoc - find an ndi.app.appdoc document in the session database DOC = FIND_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional inputs ]) Using search criteria that is supported by [ additional inputs ], FIND_APPDOC searches the database for the ndi . document object DOC that is described by APPDOC_TYPE . DOC is always a cell array of all matching NDI_DOCUMENTs . In this superclass , empty is always returned . Subclasses should override this function to search for each document type . The documentation for subclasses should be in the overriden function APPDOC_DESCRIPTION . Help for ndi . calc . vis . hartley_calc / find_appdoc is inherited from superclass ndi . app . appdoc graphical_edit_calculator - create and control a GUI to graphically edit an NDI calculator instance GRAPHICAL_EDIT_CALCULATOR ( ... ) Creates and controls a graphical user interface for creating an instance of an ndi . calculator object . Usage by the user : GRAPHICAL_EDIT_CALCULATOR ( ' command ' , ' NEW ' , ' type ' , ' ndi.calc.TYPE ' , ' filename ' , filename , ' name ' , name ) or GRAPHICAL_EDIT_CALCULATOR ( ' command ' , ' EDIT ' , ' filename ' , filename ) Help for ndi . calc . vis . hartley_calc . graphical_edit_calculator is inherited from superclass ndi . calculator hartley_calc - a hartley_calc demonstration of an ndi.calculator object HARTLEY_CALC_OBJ = HARTLEY_CALC ( SESSION ) Creates a HARTLEY_CALC ndi . calculator object Documentation for ndi . calc . vis . hartley_calc / hartley_calc doc ndi . calc . vis . hartley_calc hartleystimdocstruct - return the fields of the Hartley stimulus necessary for the hartley_reverse_correlation document HARTLEYDOCINFO = HARTLEYSTIMDOCSTRUCT ( STIMSTRUCT ) Returns the fields of the Hartley stim that are needed for the NDI hartley_reverse_correlation document : Fields : M , L_max , K_max , sf_max , fps , color_high , color_low , rect is_valid_dependency_input - is a potential dependency input actually valid for this calculator? B = IS_VALID_DEPENDENCY_INPUT ( NDI_CALCULATOR_OBJ , NAME , VALUE ) Tests whether a potential input to a calculator is valid . The potential dependency name is provided in NAME and its ndi_document id is provided in VALUE . The base class behavior of this function is simply to return true , but it can be overriden if additional criteria beyond an ndi . query are needed to assess if a document is an appropriate input for the calculator . Help for ndi . calc . vis . hartley_calc / is_valid_dependency_input is inherited from superclass ndi . calculator isequal_appdoc_struct - are two APPDOC data structures the same (equal)? B = ISEQUAL_APPDOC_STRUCT ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT1 , APPDOC_STRUCT2 ) Returns 1 if the structures APPDOC_STRUCT1 and APPDOC_STRUCT2 are valid and equal . This is true if APPDOC_STRUCT2 true if APPDOC_STRUCT1 and APPDOC_STRUCT2 have the same field names and same values and same sizes . That is , B is vlt . data . eqlen ( APPDOC_STRUCT1 , APPDOC_STRUCT2 ) . Help for ndi . calc . vis . hartley_calc / isequal_appdoc_struct is inherited from superclass ndi . calculator ishartleystim - does a stimulus presentation doc contain a Hartley stimulus? [B,STIMIDS] = ndi.calc.hartley_calc.ishartleystim(STIM_PRESENTATION_DOC) Returns 1 iff STIM_PRESENTATION_DOC contains Hartley stimuli. Returns the STIMIDS of any Hartley stimuli. isvalid_appdoc_struct - is an input structure a valid descriptor for an APPDOC? [ B , ERRORMSG ] = ISVALID_APPDOC_STRUCT ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT ) Examines APPDOC_STRUCT and determines whether it is a valid input for creating an ndi . document described by APPDOC_TYPE . B is 1 if it is valid and 0 otherwise . In the base class , B is always 0 with ERRORMSG ' Base class always returns invalid. ' Help for ndi . calc . vis . hartley_calc / isvalid_appdoc_struct is inherited from superclass ndi . app . appdoc loaddata_appdoc - Load data from an application document [...] = LOADDATA_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional arguments ]) Loads the data from app document of style DOC_NAME from the database . [ additional inputs ] are used to find the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . In the base class , this always returns empty . This function should be overridden by each subclass . The documentation for subclasses should be in the overridden function APPDOC_DESCRIPTION . Help for ndi . calc . vis . hartley_calc / loaddata_appdoc is inherited from superclass ndi . app . appdoc newdocument - return a new database document of type ndi.document based on an app NDI_DOCUMENT_OBJ = NEWDOCUMENT ( NDI_APP_OBJ ) Creates a blank ndi . document object of type ' ndi_document_app ' . The ' app.name ' field is filled out with the name of NDI_APP_OBJ . VARAPPNAME () . Help for ndi . calc . vis . hartley_calc / newdocument is inherited from superclass ndi . app plot - provide a diagnostic plot to show the results of the calculator H = PLOT ( NDI_CALCULATOR_OBJ , DOC_OR_PARAMETERS , ... ) Produce a plot of the tuning curve . Handles to the figure , the axes , and any objects created are returned in H . This function takes additional input arguments as name / value pairs . See ndi . calculator . plot_parameters for a description of those parameters . plot_parameters - provide a diagnostic plot to show the results of the calculator, if appropriate PLOT ( NDI_CALCULATOR_OBJ , DOC_OR_PARAMETERS , ... ) Produce a diagnostic plot that can indicate to a reader whether or not the calculator has been performed in a manner that makes sense with its input data . Useful for debugging / validating a calculator . By default , this plot is made in the current axes . This function takes additional input arguments as name / value pairs : |---------------------------|--------------------------------------| | Parameter ( default ) | Description | |---------------------------|--------------------------------------| | newfigure ( 0 ) | 0 / 1 Should we make a new figure ? | | holdstate ( 0 ) | 0 / 1 Should we preserve the ' hold ' | | | state of the current axes ? | | suppress_x_label ( 0 ) | 0 / 1 Should we suppress the x label ? | | suppress_y_label ( 0 ) | 0 / 1 Should we suppress the y label ? | | suppress_z_label ( 0 ) | 0 / 1 Should we suppress the z label ? | | suppress_title ( 0 ) | 0 / 1 Should we suppress the title ? | |---------------------------|--------------------------------------| Help for ndi . calc . vis . hartley_calc . plot_parameters is inherited from superclass ndi . calculator run - run calculator on all possible inputs that match some parameters DOCS = RUN ( NDI_CALCULATOR_OBJ , DOCEXISTSACTION , PARAMETERS ) DOCEXISTSACTION can be 'Error' , 'NoAction' , 'Replace' , or 'ReplaceIfDifferent' For calculators , 'ReplaceIfDifferent' is equivalent to 'NoAction' because the input parameters define the calculator . Step 1 : set up input parameters ; they can either be completely specified by the caller , or defaults can be used Help for ndi . calc . vis . hartley_calc / run is inherited from superclass ndi . calculator search_for_calculator_docs - search for previous calculators [ DOCS ] = SEARCH_FOR_CALCULATOR ( NDI_CALCULATOR_OBJ , PARAMETERS ) Performs a search to find all previously - created calculator documents that this mini - app creates . PARAMETERS is a structure with the following fields |------------------------|----------------------------------| | Fieldname | Description | |-----------------------------------------------------------| | input_parameters | A structure of input parameters | | | needed by the calculator . | | depends_on | A structure with fields 'name' | | | and 'value' that indicates any | | | exact matches that should be | | | satisfied . | |------------------------|----------------------------------| in the abstract class , this returns empty Help for ndi . calc . vis . hartley_calc / search_for_calculator_docs is inherited from superclass ndi . calculator search_for_input_parameters - search for valid inputs to the calculator PARAMETERS = SEARCH_FOR_INPUT_PARAMETERS ( NDI_CALCULATOR_OBJ , PARAMETERS_SPECIFICATION ) Identifies all possible sets of specific input PARAMETERS that can be used as inputs to the calculator . PARAMETERS is a cell array of parameter structures with fields ' input_parameters ' and ' depends_on ' . PARAMETERS_SPECIFICATION is a structure with the following fields : |----------------------------------------------------------------------| | input_parameters | A structure of fixed input parameters needed | | | by the calculator . Should not depend on | | | values in other documents . | | depends_on | A structure with ' name ' and ' value ' fields | | | that lists specific inputs that should be | | | used for the ' depends_on ' field in the | | | PARAMETERS output . | | query | A structure with ' name ' and ' query ' fields | | | that describes a search to be performed to | | | identify inputs for the ' depends_on ' field | | | in the PARAMETERS output . | |-----------------------|----------------------------------------------- Help for ndi . calc . vis . hartley_calc / search_for_input_parameters is inherited from superclass ndi . calculator searchquery - return a search query for an ndi.document related to this app C = SEARCHQUERY ( NDI_APP_OBJ ) Returns a cell array of strings that allow the creation or searching of an ndi . database document for this app with field ' app ' that has subfield ' name ' equal to the app ' s VARAPPNAME. Help for ndi . calc . vis . hartley_calc / searchquery is inherited from superclass ndi . app struct2doc - create an ndi.document from an input structure and input parameters DOC = STRUCT2DOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT , [ additional parameters ] Create an ndi . document from a data structure APPDOC_STRUCT . The ndi . document is created according to the APPDOC_TYPE of the NDI_APPDOC_OBJ . In the base class , this always returns empty . It must be overridden in subclasses . The documentation for overriden functions should be in the function APPDOC_DESCRIPTION . Help for ndi . calc . vis . hartley_calc / struct2doc is inherited from superclass ndi . app . appdoc varappname - return the name of the application for use in variable creation AN = VARAPPNAME ( NDI_APP_OBJ ) Returns the name of the app modified for use as a variable name , either as a Matlab variable or a name in a document . Help for ndi . calc . vis . hartley_calc / varappname is inherited from superclass ndi . app version_url - return the app version and url [ V , URL ] = VERSION_URL ( NDI_APP_OBJ ) Return the version and url for the current app . In the base class , it is assumed that GIT is used and is available from the command line and the version and url are read from the git directory . Developers should override this method in their own class if they use a different version control system . Help for ndi . calc . vis . hartley_calc / version_url is inherited from superclass ndi . app","title":"ndi.calc.vis.hartley_calc"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/hartley_calc.m/#class-ndicalcvishartley_calc","text":"HARTLEY_CALC - a hartley_calc demonstration of an ndi.calculator object HARTLEY_CALC_OBJ = HARTLEY_CALC(SESSION) Creates a HARTLEY_CALC ndi.calculator object","title":"CLASS ndi.calc.vis.hartley_calc"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/hartley_calc.m/#superclasses","text":"ndi.calculator , ndi.app , ndi.documentservice , ndi.app.appdoc","title":"Superclasses"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/hartley_calc.m/#properties","text":"Property Description fast_start session name doc_types doc_document_types doc_session","title":"Properties"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/hartley_calc.m/#methods","text":"Method Description add_appdoc Load data from an application document appdoc_description --------------------------------------------------------------------------------------------- calculate perform the calculator for ndi.calc.example.hartley_calc clear_appdoc remove an ndi.app.appdoc document from a session database default_parameters_query what queries should be used to search for input parameters if none are provided? default_search_for_input_parameters default parameters for searching for inputs defaultstruct_appdoc return a default appdoc structure for a given APPDOC type doc2struct create an ndi.document from an input structure and input parameters doc_about --------------------------------------------------------------------------------------------- find_appdoc find an ndi.app.appdoc document in the session database graphical_edit_calculator create and control a GUI to graphically edit an NDI calculator instance hartley_calc a hartley_calc demonstration of an ndi.calculator object hartleystimdocstruct return the fields of the Hartley stimulus necessary for the hartley_reverse_correlation document is_valid_dependency_input is a potential dependency input actually valid for this calculator? isequal_appdoc_struct are two APPDOC data structures the same (equal)? ishartleystim does a stimulus presentation doc contain a Hartley stimulus? isvalid_appdoc_struct is an input structure a valid descriptor for an APPDOC? loaddata_appdoc Load data from an application document newdocument return a new database document of type ndi.document based on an app plot provide a diagnostic plot to show the results of the calculator plot_parameters provide a diagnostic plot to show the results of the calculator, if appropriate run run calculator on all possible inputs that match some parameters search_for_calculator_docs search for previous calculators search_for_input_parameters search for valid inputs to the calculator searchquery return a search query for an ndi.document related to this app struct2doc create an ndi.document from an input structure and input parameters varappname return the name of the application for use in variable creation version_url return the app version and url","title":"Methods"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/hartley_calc.m/#methods-help","text":"add_appdoc - Load data from an application document [...] = ADD_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , ... APPDOC_STRUCT , DOCEXISTSACTION , [ additional arguments ]) Creates a new ndi . document that is based on the type APPDOC_TYPE with creation data specified by APPDOC_STRUCT . [ additional inputs ] are used to find or specify the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . The DOC is returned as a cell array of NDI_DOCUMENTs ( should have 1 entry but could have more than 1 if the document already exists ). If APPDOC_STRUCT is empty , then default values are used . If it is a character array , then it is assumed to be a filename of a tab - separated - value text file . If it is an ndi . document , then it is assumed to be an ndi . document and it will be converted to the parameters using DOC2STRUCT . This function also takes a string DOCEXISTSACTION that describes what it should do in the event that the document fitting the [ additional inputs ] already exists : DOCEXISTACTION value | Description ---------------------------------------------------------------------------------- ' Error ' | An error is generating indicating the document exists . ' NoAction ' | The existing document is left alone . The existing ndi . document | is returned in DOC . ' Replace ' | Replace the document ; note that this deletes all NDI_DOCUMENTS | that depend on the original . ' ReplaceIfDifferent ' | Conditionally replace the document , but only if the | the data structures that define the document are not equal . Help for ndi . calc . vis . hartley_calc / add_appdoc is inherited from superclass ndi . app . appdoc appdoc_description - --------------------------------------------------------------------------------------------- DOCUMENT INFO: ---------------------------------------------------------------------------------------------- --------- | ABOUT | --------- To see the ABOUT information for the document that is created by this calculator , see 'help ndi . calculator/doc_about' ------------ | CREATION | ------------ DOC = CALCULATE(NDI_CALCULATOR_OBJ , PARAMETERS) PARAMETERS should contain the following fields: Fieldname | Description ------------------------------------------------------------------------- input_parameters | field1 description depends_on | field2 description ----------- | FINDING | ----------- [ DOC ] = SEARCH_FOR_CALCULATOR_DOCS(NDI_CALCULATOR_OBJ , PARAMETERS) PARAMETERS should contain the following fields: Fieldname | Description ------------------------------------------------------------------------- input_parameters | field1 description depends_on | field2 description Help for ndi . calc . vis . hartley_calc/appdoc_description is inherited from superclass ndi . calculator calculate - perform the calculator for ndi.calc.example.hartley_calc DOC = CALCULATE(NDI_CALCULATOR_OBJ, PARAMETERS) Creates a hartley_calc_calc document given input parameters. The document that is created hartley_calc by the input parameters. clear_appdoc - remove an ndi.app.appdoc document from a session database B = CLEAR_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional inputs ]) Deletes the app document of style DOC_NAME from the database . [ additional inputs ] are used to find the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . B is 1 if the document is found , and 0 otherwise . Help for ndi . calc . vis . hartley_calc / clear_appdoc is inherited from superclass ndi . app . appdoc default_parameters_query - what queries should be used to search for input parameters if none are provided? QUERY = DEFAULT_PARAMETERS_QUERY ( NDI_CALCULATOR_OBJ , PARAMETERS_SPECIFICATION ) When one calls SEARCH_FOR_INPUT_PARAMETERS , it is possible to specify a ' query ' structure to select particular documents to be placed into the parameters ' depends_on ' specification . If one does not provide any ' query ' structure , then the default values here are used . The function returns : |-----------------------|----------------------------------------------| | query | A structure with ' name ' and ' query ' fields | | | that describes a search to be performed to | | | identify inputs for the ' depends_on ' field | | | in the PARAMETERS output . | |-----------------------|----------------------------------------------- For the ndi . calc . stimulus . hartley_calc_calc class , this looks for documents of type ' stimulus_response_scalar.json ' with ' response_type ' fields the contain ' mean ' or ' F1 ' . default_search_for_input_parameters - default parameters for searching for inputs PARAMETERS = DEFAULT_SEARCH_FOR_INPUT_PARAMETERS ( NDI_CALCULATOR_OBJ ) Returns a list of the default search parameters for finding appropriate inputs to the calculator . For hartley_calc_calc , there is no appropriate default parameters so this search will yield empty . defaultstruct_appdoc - return a default appdoc structure for a given APPDOC type APPDOC_STRUCT = DEFAULTSTRUCT_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE ) Return the default data structure for a given APPDOC_TYPE of an ndi . app . appdoc object . In the base class , the blank version of the ndi . document is read in and the default structure is built from the ndi . document ' s class property list. Help for ndi . calc . vis . hartley_calc / defaultstruct_appdoc is inherited from superclass ndi . app . appdoc doc2struct - create an ndi.document from an input structure and input parameters DOC = STRUCT2DOC ( NDI_APPDOC_OBJ , SESSION , APPDOC_TYPE , APPDOC_STRUCT , [ additional parameters ] Create an ndi . document from a data structure APPDOC_STRUCT . The ndi . document is created according to the APPDOC_TYPE of the NDI_APPDOC_OBJ . In the base class , this uses the property info in the ndi . document to load the data structure . Help for ndi . calc . vis . hartley_calc / doc2struct is inherited from superclass ndi . app . appdoc doc_about - --------------------------------------------------------------------------------------------- NDI_CALCULATOR: HARTLEY_CALC ---------------------------------------------------------------------------------------------- ------------------------ | HARTLEY_CALC -- ABOUT | ------------------------ HARTLEY_CALC is a demonstration document . It simply produces the 'answer' that is provided in the input parameters . Each HARTLEY_CALC document 'depends_on' an NDI daq system . Definition: apps/hartley_calc_calc . json find_appdoc - find an ndi.app.appdoc document in the session database DOC = FIND_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional inputs ]) Using search criteria that is supported by [ additional inputs ], FIND_APPDOC searches the database for the ndi . document object DOC that is described by APPDOC_TYPE . DOC is always a cell array of all matching NDI_DOCUMENTs . In this superclass , empty is always returned . Subclasses should override this function to search for each document type . The documentation for subclasses should be in the overriden function APPDOC_DESCRIPTION . Help for ndi . calc . vis . hartley_calc / find_appdoc is inherited from superclass ndi . app . appdoc graphical_edit_calculator - create and control a GUI to graphically edit an NDI calculator instance GRAPHICAL_EDIT_CALCULATOR ( ... ) Creates and controls a graphical user interface for creating an instance of an ndi . calculator object . Usage by the user : GRAPHICAL_EDIT_CALCULATOR ( ' command ' , ' NEW ' , ' type ' , ' ndi.calc.TYPE ' , ' filename ' , filename , ' name ' , name ) or GRAPHICAL_EDIT_CALCULATOR ( ' command ' , ' EDIT ' , ' filename ' , filename ) Help for ndi . calc . vis . hartley_calc . graphical_edit_calculator is inherited from superclass ndi . calculator hartley_calc - a hartley_calc demonstration of an ndi.calculator object HARTLEY_CALC_OBJ = HARTLEY_CALC ( SESSION ) Creates a HARTLEY_CALC ndi . calculator object Documentation for ndi . calc . vis . hartley_calc / hartley_calc doc ndi . calc . vis . hartley_calc hartleystimdocstruct - return the fields of the Hartley stimulus necessary for the hartley_reverse_correlation document HARTLEYDOCINFO = HARTLEYSTIMDOCSTRUCT ( STIMSTRUCT ) Returns the fields of the Hartley stim that are needed for the NDI hartley_reverse_correlation document : Fields : M , L_max , K_max , sf_max , fps , color_high , color_low , rect is_valid_dependency_input - is a potential dependency input actually valid for this calculator? B = IS_VALID_DEPENDENCY_INPUT ( NDI_CALCULATOR_OBJ , NAME , VALUE ) Tests whether a potential input to a calculator is valid . The potential dependency name is provided in NAME and its ndi_document id is provided in VALUE . The base class behavior of this function is simply to return true , but it can be overriden if additional criteria beyond an ndi . query are needed to assess if a document is an appropriate input for the calculator . Help for ndi . calc . vis . hartley_calc / is_valid_dependency_input is inherited from superclass ndi . calculator isequal_appdoc_struct - are two APPDOC data structures the same (equal)? B = ISEQUAL_APPDOC_STRUCT ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT1 , APPDOC_STRUCT2 ) Returns 1 if the structures APPDOC_STRUCT1 and APPDOC_STRUCT2 are valid and equal . This is true if APPDOC_STRUCT2 true if APPDOC_STRUCT1 and APPDOC_STRUCT2 have the same field names and same values and same sizes . That is , B is vlt . data . eqlen ( APPDOC_STRUCT1 , APPDOC_STRUCT2 ) . Help for ndi . calc . vis . hartley_calc / isequal_appdoc_struct is inherited from superclass ndi . calculator ishartleystim - does a stimulus presentation doc contain a Hartley stimulus? [B,STIMIDS] = ndi.calc.hartley_calc.ishartleystim(STIM_PRESENTATION_DOC) Returns 1 iff STIM_PRESENTATION_DOC contains Hartley stimuli. Returns the STIMIDS of any Hartley stimuli. isvalid_appdoc_struct - is an input structure a valid descriptor for an APPDOC? [ B , ERRORMSG ] = ISVALID_APPDOC_STRUCT ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT ) Examines APPDOC_STRUCT and determines whether it is a valid input for creating an ndi . document described by APPDOC_TYPE . B is 1 if it is valid and 0 otherwise . In the base class , B is always 0 with ERRORMSG ' Base class always returns invalid. ' Help for ndi . calc . vis . hartley_calc / isvalid_appdoc_struct is inherited from superclass ndi . app . appdoc loaddata_appdoc - Load data from an application document [...] = LOADDATA_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional arguments ]) Loads the data from app document of style DOC_NAME from the database . [ additional inputs ] are used to find the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . In the base class , this always returns empty . This function should be overridden by each subclass . The documentation for subclasses should be in the overridden function APPDOC_DESCRIPTION . Help for ndi . calc . vis . hartley_calc / loaddata_appdoc is inherited from superclass ndi . app . appdoc newdocument - return a new database document of type ndi.document based on an app NDI_DOCUMENT_OBJ = NEWDOCUMENT ( NDI_APP_OBJ ) Creates a blank ndi . document object of type ' ndi_document_app ' . The ' app.name ' field is filled out with the name of NDI_APP_OBJ . VARAPPNAME () . Help for ndi . calc . vis . hartley_calc / newdocument is inherited from superclass ndi . app plot - provide a diagnostic plot to show the results of the calculator H = PLOT ( NDI_CALCULATOR_OBJ , DOC_OR_PARAMETERS , ... ) Produce a plot of the tuning curve . Handles to the figure , the axes , and any objects created are returned in H . This function takes additional input arguments as name / value pairs . See ndi . calculator . plot_parameters for a description of those parameters . plot_parameters - provide a diagnostic plot to show the results of the calculator, if appropriate PLOT ( NDI_CALCULATOR_OBJ , DOC_OR_PARAMETERS , ... ) Produce a diagnostic plot that can indicate to a reader whether or not the calculator has been performed in a manner that makes sense with its input data . Useful for debugging / validating a calculator . By default , this plot is made in the current axes . This function takes additional input arguments as name / value pairs : |---------------------------|--------------------------------------| | Parameter ( default ) | Description | |---------------------------|--------------------------------------| | newfigure ( 0 ) | 0 / 1 Should we make a new figure ? | | holdstate ( 0 ) | 0 / 1 Should we preserve the ' hold ' | | | state of the current axes ? | | suppress_x_label ( 0 ) | 0 / 1 Should we suppress the x label ? | | suppress_y_label ( 0 ) | 0 / 1 Should we suppress the y label ? | | suppress_z_label ( 0 ) | 0 / 1 Should we suppress the z label ? | | suppress_title ( 0 ) | 0 / 1 Should we suppress the title ? | |---------------------------|--------------------------------------| Help for ndi . calc . vis . hartley_calc . plot_parameters is inherited from superclass ndi . calculator run - run calculator on all possible inputs that match some parameters DOCS = RUN ( NDI_CALCULATOR_OBJ , DOCEXISTSACTION , PARAMETERS ) DOCEXISTSACTION can be 'Error' , 'NoAction' , 'Replace' , or 'ReplaceIfDifferent' For calculators , 'ReplaceIfDifferent' is equivalent to 'NoAction' because the input parameters define the calculator . Step 1 : set up input parameters ; they can either be completely specified by the caller , or defaults can be used Help for ndi . calc . vis . hartley_calc / run is inherited from superclass ndi . calculator search_for_calculator_docs - search for previous calculators [ DOCS ] = SEARCH_FOR_CALCULATOR ( NDI_CALCULATOR_OBJ , PARAMETERS ) Performs a search to find all previously - created calculator documents that this mini - app creates . PARAMETERS is a structure with the following fields |------------------------|----------------------------------| | Fieldname | Description | |-----------------------------------------------------------| | input_parameters | A structure of input parameters | | | needed by the calculator . | | depends_on | A structure with fields 'name' | | | and 'value' that indicates any | | | exact matches that should be | | | satisfied . | |------------------------|----------------------------------| in the abstract class , this returns empty Help for ndi . calc . vis . hartley_calc / search_for_calculator_docs is inherited from superclass ndi . calculator search_for_input_parameters - search for valid inputs to the calculator PARAMETERS = SEARCH_FOR_INPUT_PARAMETERS ( NDI_CALCULATOR_OBJ , PARAMETERS_SPECIFICATION ) Identifies all possible sets of specific input PARAMETERS that can be used as inputs to the calculator . PARAMETERS is a cell array of parameter structures with fields ' input_parameters ' and ' depends_on ' . PARAMETERS_SPECIFICATION is a structure with the following fields : |----------------------------------------------------------------------| | input_parameters | A structure of fixed input parameters needed | | | by the calculator . Should not depend on | | | values in other documents . | | depends_on | A structure with ' name ' and ' value ' fields | | | that lists specific inputs that should be | | | used for the ' depends_on ' field in the | | | PARAMETERS output . | | query | A structure with ' name ' and ' query ' fields | | | that describes a search to be performed to | | | identify inputs for the ' depends_on ' field | | | in the PARAMETERS output . | |-----------------------|----------------------------------------------- Help for ndi . calc . vis . hartley_calc / search_for_input_parameters is inherited from superclass ndi . calculator searchquery - return a search query for an ndi.document related to this app C = SEARCHQUERY ( NDI_APP_OBJ ) Returns a cell array of strings that allow the creation or searching of an ndi . database document for this app with field ' app ' that has subfield ' name ' equal to the app ' s VARAPPNAME. Help for ndi . calc . vis . hartley_calc / searchquery is inherited from superclass ndi . app struct2doc - create an ndi.document from an input structure and input parameters DOC = STRUCT2DOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT , [ additional parameters ] Create an ndi . document from a data structure APPDOC_STRUCT . The ndi . document is created according to the APPDOC_TYPE of the NDI_APPDOC_OBJ . In the base class , this always returns empty . It must be overridden in subclasses . The documentation for overriden functions should be in the function APPDOC_DESCRIPTION . Help for ndi . calc . vis . hartley_calc / struct2doc is inherited from superclass ndi . app . appdoc varappname - return the name of the application for use in variable creation AN = VARAPPNAME ( NDI_APP_OBJ ) Returns the name of the app modified for use as a variable name , either as a Matlab variable or a name in a document . Help for ndi . calc . vis . hartley_calc / varappname is inherited from superclass ndi . app version_url - return the app version and url [ V , URL ] = VERSION_URL ( NDI_APP_OBJ ) Return the version and url for the current app . In the base class , it is assumed that GIT is used and is available from the command line and the version and url are read from the git directory . Developers should override this method in their own class if they use a different version control system . Help for ndi . calc . vis . hartley_calc / version_url is inherited from superclass ndi . app","title":"Methods help"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/oridir_tuning.m/","text":"CLASS ndi.calc.vis.oridir_tuning \u00b6 oridir_tuning - ndi.calculator object that calculates orientation and direction tuning curves from spike elements ORIDIRTUNING_OBJ = ORIDIRTUNING(SESSION) Creates a oridir_tuning ndi.calculator object Superclasses \u00b6 ndi.calculator , ndi.app , ndi.documentservice , ndi.app.appdoc Properties \u00b6 Property Description fast_start session name doc_types doc_document_types doc_session Methods \u00b6 Method Description add_appdoc Load data from an application document appdoc_description --------------------------------------------------------------------------------------------- calculate perform the calculator for calculate_oridir_indexes calculate orientation and direction index values from a tuning curve clear_appdoc remove an ndi.app.appdoc document from a session database default_parameters_query what queries should be used to default_search_for_input_parameters default parameters for searching for inputs defaultstruct_appdoc return a default appdoc structure for a given APPDOC type doc2struct create an ndi.document from an input structure and input parameters doc_about --------------------------------------------------------------------------------------------- find_appdoc find an ndi.app.appdoc document in the session database graphical_edit_calculator create and control a GUI to graphically edit an NDI calculator instance is_valid_dependency_input checks if a potential dependency input isequal_appdoc_struct are two APPDOC data structures the same (equal)? isvalid_appdoc_struct is an input structure a valid descriptor for an APPDOC? loaddata_appdoc Load data from an application document newdocument return a new database document of type ndi.document based on an app oridir_tuning ndi.calculator object that plot provide a diagnostic plot to show the results of the calculator plot_parameters provide a diagnostic plot to show the results of the calculator, if appropriate run run calculator on all possible inputs that match some parameters search_for_calculator_docs search for previous calculators search_for_input_parameters search for valid inputs to the calculator searchquery return a search query for an ndi.document related to this app struct2doc create an ndi.document from an input structure and input parameters varappname return the name of the application for use in variable creation version_url return the app version and url Methods help \u00b6 add_appdoc - Load data from an application document [...] = ADD_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , ... APPDOC_STRUCT , DOCEXISTSACTION , [ additional arguments ]) Creates a new ndi . document that is based on the type APPDOC_TYPE with creation data specified by APPDOC_STRUCT . [ additional inputs ] are used to find or specify the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . The DOC is returned as a cell array of NDI_DOCUMENTs ( should have 1 entry but could have more than 1 if the document already exists ). If APPDOC_STRUCT is empty , then default values are used . If it is a character array , then it is assumed to be a filename of a tab - separated - value text file . If it is an ndi . document , then it is assumed to be an ndi . document and it will be converted to the parameters using DOC2STRUCT . This function also takes a string DOCEXISTSACTION that describes what it should do in the event that the document fitting the [ additional inputs ] already exists : DOCEXISTACTION value | Description ---------------------------------------------------------------------------------- ' Error ' | An error is generating indicating the document exists . ' NoAction ' | The existing document is left alone . The existing ndi . document | is returned in DOC . ' Replace ' | Replace the document ; note that this deletes all NDI_DOCUMENTS | that depend on the original . ' ReplaceIfDifferent ' | Conditionally replace the document , but only if the | the data structures that define the document are not equal . Help for ndi . calc . vis . oridir_tuning / add_appdoc is inherited from superclass ndi . app . appdoc appdoc_description - --------------------------------------------------------------------------------------------- DOCUMENT INFO: ---------------------------------------------------------------------------------------------- --------- | ABOUT | --------- To see the ABOUT information for the document that is created by this calculator , see 'help ndi . calculator/doc_about' ------------ | CREATION | ------------ DOC = CALCULATE(NDI_CALCULATOR_OBJ , PARAMETERS) PARAMETERS should contain the following fields: Fieldname | Description ------------------------------------------------------------------------- input_parameters | field1 description depends_on | field2 description ----------- | FINDING | ----------- [ DOC ] = SEARCH_FOR_CALCULATOR_DOCS(NDI_CALCULATOR_OBJ , PARAMETERS) PARAMETERS should contain the following fields: Fieldname | Description ------------------------------------------------------------------------- input_parameters | field1 description depends_on | field2 description Help for ndi . calc . vis . oridir_tuning/appdoc_description is inherited from superclass ndi . calculator calculate - perform the calculator for ndi.calc.oridir_tuning DOC = CALCULATE(NDI_CALCULATION_OBJ, PARAMETERS) Creates a oridir_tuning_direction_tuning_calc document given input parameters. calculate_oridir_indexes - calculate orientation and direction index values from a tuning curve ORIDIR_DOC = CALCULATE_ORIDIR_INDEXES(NDI_ORIDIRTUNING_CALC_OBJ, TUNING_DOC) Given a 2-dimensional tuning curve document with measurements at orientation and direction frequencies, this function calculates oridir_tuning parameters and stores them in ORIDIRTUNING document ORIDIR_DOC. clear_appdoc - remove an ndi.app.appdoc document from a session database B = CLEAR_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional inputs ]) Deletes the app document of style DOC_NAME from the database . [ additional inputs ] are used to find the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . B is 1 if the document is found , and 0 otherwise . Help for ndi . calc . vis . oridir_tuning / clear_appdoc is inherited from superclass ndi . app . appdoc default_parameters_query - what queries should be used to search for input parameters QUERY = DEFAULT_PARAMETERS_QUERY ( NDI_CALCULATION_OBJ , PARAMETERS_SPECIFICATION ) Calling SEARCH_FOR_INPUT_PARAMETERS allows for users to specify a ' query ' structure to select particular documents to be placed into the ' depends_on ' parameter specification . If a ' query ' structure is not provided , the default will be used . The function returns : |-----------|--------------------------------------------| | query | A structure with ' name ' and ' query ' fields | | | that describes a search to be performed to | | | identify inputs for the ' depends_on ' field | | | in the PARAMETERS output . | |-----------|--------------------------------------------| For the ndi . calc . vision . tuning_curve class , this looks for documents of type ' stimulus_tuningcurve.json ' with ' response_type ' fields that contain ' mean ' or ' F1 ' . default_search_for_input_parameters - default parameters for searching for inputs PARAMETERS = DEFAULT_SEARCH_FOR_INPUT_PARAMETERS ( NDI_CALCULATION_OBJ ) Returns a list of the default search parameters for finding appropriate inputs to the calculator . search for stimulus_tuningcurve_id defaultstruct_appdoc - return a default appdoc structure for a given APPDOC type APPDOC_STRUCT = DEFAULTSTRUCT_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE ) Return the default data structure for a given APPDOC_TYPE of an ndi . app . appdoc object . In the base class , the blank version of the ndi . document is read in and the default structure is built from the ndi . document ' s class property list. Help for ndi . calc . vis . oridir_tuning / defaultstruct_appdoc is inherited from superclass ndi . app . appdoc doc2struct - create an ndi.document from an input structure and input parameters DOC = STRUCT2DOC ( NDI_APPDOC_OBJ , SESSION , APPDOC_TYPE , APPDOC_STRUCT , [ additional parameters ] Create an ndi . document from a data structure APPDOC_STRUCT . The ndi . document is created according to the APPDOC_TYPE of the NDI_APPDOC_OBJ . In the base class , this uses the property info in the ndi . document to load the data structure . Help for ndi . calc . vis . oridir_tuning / doc2struct is inherited from superclass ndi . app . appdoc doc_about - --------------------------------------------------------------------------------------------- NDI_CALCULATION: ORIDIRTUNING ---------------------------------------------------------------------------------------------- ------------------------ | ORIDIRTUNING -- ABOUT | ------------------------ ORIDIRTUNING is an ndi . calculator object that calculates the oridir_tuning and direction tuning curves from spike elements . Each document 'depends_on' an NDI daq system . Definition: apps/calc/oridir_tuning . json find_appdoc - find an ndi.app.appdoc document in the session database DOC = FIND_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional inputs ]) Using search criteria that is supported by [ additional inputs ], FIND_APPDOC searches the database for the ndi . document object DOC that is described by APPDOC_TYPE . DOC is always a cell array of all matching NDI_DOCUMENTs . In this superclass , empty is always returned . Subclasses should override this function to search for each document type . The documentation for subclasses should be in the overriden function APPDOC_DESCRIPTION . Help for ndi . calc . vis . oridir_tuning / find_appdoc is inherited from superclass ndi . app . appdoc graphical_edit_calculator - create and control a GUI to graphically edit an NDI calculator instance GRAPHICAL_EDIT_CALCULATOR ( ... ) Creates and controls a graphical user interface for creating an instance of an ndi . calculator object . Usage by the user : GRAPHICAL_EDIT_CALCULATOR ( ' command ' , ' NEW ' , ' type ' , ' ndi.calc.TYPE ' , ' filename ' , filename , ' name ' , name ) or GRAPHICAL_EDIT_CALCULATOR ( ' command ' , ' EDIT ' , ' filename ' , filename ) Help for ndi . calc . vis . oridir_tuning . graphical_edit_calculator is inherited from superclass ndi . calculator is_valid_dependency_input - checks if a potential dependency input actually valid for this calculator B = IS_VALID_DEPENDENCY_INPUT ( NDI_CALCULATION_OBJ , NAME , VALUE ) Tests whether a potential input to a calculator is valid . NAME - potential dependency name VALUE - ndi_document id of the potential dependency name The base class behavior of this function will return true . This is overridden if additional criteria beyond an ndi . query are needed to assess if a document is an appropriate input for the calculator . isequal_appdoc_struct - are two APPDOC data structures the same (equal)? B = ISEQUAL_APPDOC_STRUCT ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT1 , APPDOC_STRUCT2 ) Returns 1 if the structures APPDOC_STRUCT1 and APPDOC_STRUCT2 are valid and equal . This is true if APPDOC_STRUCT2 true if APPDOC_STRUCT1 and APPDOC_STRUCT2 have the same field names and same values and same sizes . That is , B is vlt . data . eqlen ( APPDOC_STRUCT1 , APPDOC_STRUCT2 ) . Help for ndi . calc . vis . oridir_tuning / isequal_appdoc_struct is inherited from superclass ndi . calculator isvalid_appdoc_struct - is an input structure a valid descriptor for an APPDOC? [ B , ERRORMSG ] = ISVALID_APPDOC_STRUCT ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT ) Examines APPDOC_STRUCT and determines whether it is a valid input for creating an ndi . document described by APPDOC_TYPE . B is 1 if it is valid and 0 otherwise . In the base class , B is always 0 with ERRORMSG ' Base class always returns invalid. ' Help for ndi . calc . vis . oridir_tuning / isvalid_appdoc_struct is inherited from superclass ndi . app . appdoc loaddata_appdoc - Load data from an application document [...] = LOADDATA_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional arguments ]) Loads the data from app document of style DOC_NAME from the database . [ additional inputs ] are used to find the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . In the base class , this always returns empty . This function should be overridden by each subclass . The documentation for subclasses should be in the overridden function APPDOC_DESCRIPTION . Help for ndi . calc . vis . oridir_tuning / loaddata_appdoc is inherited from superclass ndi . app . appdoc newdocument - return a new database document of type ndi.document based on an app NDI_DOCUMENT_OBJ = NEWDOCUMENT ( NDI_APP_OBJ ) Creates a blank ndi . document object of type ' ndi_document_app ' . The ' app.name ' field is filled out with the name of NDI_APP_OBJ . VARAPPNAME () . Help for ndi . calc . vis . oridir_tuning / newdocument is inherited from superclass ndi . app oridir_tuning - ndi.calculator object that calculates orientation and direction tuning curves from spike elements ORIDIRTUNING_OBJ = ORIDIRTUNING ( SESSION ) Creates a oridir_tuning ndi . calculator object Documentation for ndi . calc . vis . oridir_tuning / oridir_tuning doc ndi . calc . vis . oridir_tuning plot - provide a diagnostic plot to show the results of the calculator H = PLOT ( NDI_CALCULATION_OBJ , DOC_OR_PARAMETERS , ... ) Produce a plot of the tuning curve . Handles to the figure , the axes , and any objects created are returned in H . This function takes additional input arguments as name / value pairs . See ndi . calculator . plot_parameters for a description of those parameters . plot_parameters - provide a diagnostic plot to show the results of the calculator, if appropriate PLOT ( NDI_CALCULATOR_OBJ , DOC_OR_PARAMETERS , ... ) Produce a diagnostic plot that can indicate to a reader whether or not the calculator has been performed in a manner that makes sense with its input data . Useful for debugging / validating a calculator . By default , this plot is made in the current axes . This function takes additional input arguments as name / value pairs : |---------------------------|--------------------------------------| | Parameter ( default ) | Description | |---------------------------|--------------------------------------| | newfigure ( 0 ) | 0 / 1 Should we make a new figure ? | | holdstate ( 0 ) | 0 / 1 Should we preserve the ' hold ' | | | state of the current axes ? | | suppress_x_label ( 0 ) | 0 / 1 Should we suppress the x label ? | | suppress_y_label ( 0 ) | 0 / 1 Should we suppress the y label ? | | suppress_z_label ( 0 ) | 0 / 1 Should we suppress the z label ? | | suppress_title ( 0 ) | 0 / 1 Should we suppress the title ? | |---------------------------|--------------------------------------| Help for ndi . calc . vis . oridir_tuning . plot_parameters is inherited from superclass ndi . calculator run - run calculator on all possible inputs that match some parameters DOCS = RUN ( NDI_CALCULATOR_OBJ , DOCEXISTSACTION , PARAMETERS ) DOCEXISTSACTION can be 'Error' , 'NoAction' , 'Replace' , or 'ReplaceIfDifferent' For calculators , 'ReplaceIfDifferent' is equivalent to 'NoAction' because the input parameters define the calculator . Step 1 : set up input parameters ; they can either be completely specified by the caller , or defaults can be used Help for ndi . calc . vis . oridir_tuning / run is inherited from superclass ndi . calculator search_for_calculator_docs - search for previous calculators [ DOCS ] = SEARCH_FOR_CALCULATOR ( NDI_CALCULATOR_OBJ , PARAMETERS ) Performs a search to find all previously - created calculator documents that this mini - app creates . PARAMETERS is a structure with the following fields |------------------------|----------------------------------| | Fieldname | Description | |-----------------------------------------------------------| | input_parameters | A structure of input parameters | | | needed by the calculator . | | depends_on | A structure with fields 'name' | | | and 'value' that indicates any | | | exact matches that should be | | | satisfied . | |------------------------|----------------------------------| in the abstract class , this returns empty Help for ndi . calc . vis . oridir_tuning / search_for_calculator_docs is inherited from superclass ndi . calculator search_for_input_parameters - search for valid inputs to the calculator PARAMETERS = SEARCH_FOR_INPUT_PARAMETERS ( NDI_CALCULATOR_OBJ , PARAMETERS_SPECIFICATION ) Identifies all possible sets of specific input PARAMETERS that can be used as inputs to the calculator . PARAMETERS is a cell array of parameter structures with fields ' input_parameters ' and ' depends_on ' . PARAMETERS_SPECIFICATION is a structure with the following fields : |----------------------------------------------------------------------| | input_parameters | A structure of fixed input parameters needed | | | by the calculator . Should not depend on | | | values in other documents . | | depends_on | A structure with ' name ' and ' value ' fields | | | that lists specific inputs that should be | | | used for the ' depends_on ' field in the | | | PARAMETERS output . | | query | A structure with ' name ' and ' query ' fields | | | that describes a search to be performed to | | | identify inputs for the ' depends_on ' field | | | in the PARAMETERS output . | |-----------------------|----------------------------------------------- Help for ndi . calc . vis . oridir_tuning / search_for_input_parameters is inherited from superclass ndi . calculator searchquery - return a search query for an ndi.document related to this app C = SEARCHQUERY ( NDI_APP_OBJ ) Returns a cell array of strings that allow the creation or searching of an ndi . database document for this app with field ' app ' that has subfield ' name ' equal to the app ' s VARAPPNAME. Help for ndi . calc . vis . oridir_tuning / searchquery is inherited from superclass ndi . app struct2doc - create an ndi.document from an input structure and input parameters DOC = STRUCT2DOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT , [ additional parameters ] Create an ndi . document from a data structure APPDOC_STRUCT . The ndi . document is created according to the APPDOC_TYPE of the NDI_APPDOC_OBJ . In the base class , this always returns empty . It must be overridden in subclasses . The documentation for overriden functions should be in the function APPDOC_DESCRIPTION . Help for ndi . calc . vis . oridir_tuning / struct2doc is inherited from superclass ndi . app . appdoc varappname - return the name of the application for use in variable creation AN = VARAPPNAME ( NDI_APP_OBJ ) Returns the name of the app modified for use as a variable name , either as a Matlab variable or a name in a document . Help for ndi . calc . vis . oridir_tuning / varappname is inherited from superclass ndi . app version_url - return the app version and url [ V , URL ] = VERSION_URL ( NDI_APP_OBJ ) Return the version and url for the current app . In the base class , it is assumed that GIT is used and is available from the command line and the version and url are read from the git directory . Developers should override this method in their own class if they use a different version control system . Help for ndi . calc . vis . oridir_tuning / version_url is inherited from superclass ndi . app","title":"ndi.calc.vis.oridir_tuning"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/oridir_tuning.m/#class-ndicalcvisoridir_tuning","text":"oridir_tuning - ndi.calculator object that calculates orientation and direction tuning curves from spike elements ORIDIRTUNING_OBJ = ORIDIRTUNING(SESSION) Creates a oridir_tuning ndi.calculator object","title":"CLASS ndi.calc.vis.oridir_tuning"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/oridir_tuning.m/#superclasses","text":"ndi.calculator , ndi.app , ndi.documentservice , ndi.app.appdoc","title":"Superclasses"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/oridir_tuning.m/#properties","text":"Property Description fast_start session name doc_types doc_document_types doc_session","title":"Properties"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/oridir_tuning.m/#methods","text":"Method Description add_appdoc Load data from an application document appdoc_description --------------------------------------------------------------------------------------------- calculate perform the calculator for calculate_oridir_indexes calculate orientation and direction index values from a tuning curve clear_appdoc remove an ndi.app.appdoc document from a session database default_parameters_query what queries should be used to default_search_for_input_parameters default parameters for searching for inputs defaultstruct_appdoc return a default appdoc structure for a given APPDOC type doc2struct create an ndi.document from an input structure and input parameters doc_about --------------------------------------------------------------------------------------------- find_appdoc find an ndi.app.appdoc document in the session database graphical_edit_calculator create and control a GUI to graphically edit an NDI calculator instance is_valid_dependency_input checks if a potential dependency input isequal_appdoc_struct are two APPDOC data structures the same (equal)? isvalid_appdoc_struct is an input structure a valid descriptor for an APPDOC? loaddata_appdoc Load data from an application document newdocument return a new database document of type ndi.document based on an app oridir_tuning ndi.calculator object that plot provide a diagnostic plot to show the results of the calculator plot_parameters provide a diagnostic plot to show the results of the calculator, if appropriate run run calculator on all possible inputs that match some parameters search_for_calculator_docs search for previous calculators search_for_input_parameters search for valid inputs to the calculator searchquery return a search query for an ndi.document related to this app struct2doc create an ndi.document from an input structure and input parameters varappname return the name of the application for use in variable creation version_url return the app version and url","title":"Methods"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/oridir_tuning.m/#methods-help","text":"add_appdoc - Load data from an application document [...] = ADD_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , ... APPDOC_STRUCT , DOCEXISTSACTION , [ additional arguments ]) Creates a new ndi . document that is based on the type APPDOC_TYPE with creation data specified by APPDOC_STRUCT . [ additional inputs ] are used to find or specify the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . The DOC is returned as a cell array of NDI_DOCUMENTs ( should have 1 entry but could have more than 1 if the document already exists ). If APPDOC_STRUCT is empty , then default values are used . If it is a character array , then it is assumed to be a filename of a tab - separated - value text file . If it is an ndi . document , then it is assumed to be an ndi . document and it will be converted to the parameters using DOC2STRUCT . This function also takes a string DOCEXISTSACTION that describes what it should do in the event that the document fitting the [ additional inputs ] already exists : DOCEXISTACTION value | Description ---------------------------------------------------------------------------------- ' Error ' | An error is generating indicating the document exists . ' NoAction ' | The existing document is left alone . The existing ndi . document | is returned in DOC . ' Replace ' | Replace the document ; note that this deletes all NDI_DOCUMENTS | that depend on the original . ' ReplaceIfDifferent ' | Conditionally replace the document , but only if the | the data structures that define the document are not equal . Help for ndi . calc . vis . oridir_tuning / add_appdoc is inherited from superclass ndi . app . appdoc appdoc_description - --------------------------------------------------------------------------------------------- DOCUMENT INFO: ---------------------------------------------------------------------------------------------- --------- | ABOUT | --------- To see the ABOUT information for the document that is created by this calculator , see 'help ndi . calculator/doc_about' ------------ | CREATION | ------------ DOC = CALCULATE(NDI_CALCULATOR_OBJ , PARAMETERS) PARAMETERS should contain the following fields: Fieldname | Description ------------------------------------------------------------------------- input_parameters | field1 description depends_on | field2 description ----------- | FINDING | ----------- [ DOC ] = SEARCH_FOR_CALCULATOR_DOCS(NDI_CALCULATOR_OBJ , PARAMETERS) PARAMETERS should contain the following fields: Fieldname | Description ------------------------------------------------------------------------- input_parameters | field1 description depends_on | field2 description Help for ndi . calc . vis . oridir_tuning/appdoc_description is inherited from superclass ndi . calculator calculate - perform the calculator for ndi.calc.oridir_tuning DOC = CALCULATE(NDI_CALCULATION_OBJ, PARAMETERS) Creates a oridir_tuning_direction_tuning_calc document given input parameters. calculate_oridir_indexes - calculate orientation and direction index values from a tuning curve ORIDIR_DOC = CALCULATE_ORIDIR_INDEXES(NDI_ORIDIRTUNING_CALC_OBJ, TUNING_DOC) Given a 2-dimensional tuning curve document with measurements at orientation and direction frequencies, this function calculates oridir_tuning parameters and stores them in ORIDIRTUNING document ORIDIR_DOC. clear_appdoc - remove an ndi.app.appdoc document from a session database B = CLEAR_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional inputs ]) Deletes the app document of style DOC_NAME from the database . [ additional inputs ] are used to find the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . B is 1 if the document is found , and 0 otherwise . Help for ndi . calc . vis . oridir_tuning / clear_appdoc is inherited from superclass ndi . app . appdoc default_parameters_query - what queries should be used to search for input parameters QUERY = DEFAULT_PARAMETERS_QUERY ( NDI_CALCULATION_OBJ , PARAMETERS_SPECIFICATION ) Calling SEARCH_FOR_INPUT_PARAMETERS allows for users to specify a ' query ' structure to select particular documents to be placed into the ' depends_on ' parameter specification . If a ' query ' structure is not provided , the default will be used . The function returns : |-----------|--------------------------------------------| | query | A structure with ' name ' and ' query ' fields | | | that describes a search to be performed to | | | identify inputs for the ' depends_on ' field | | | in the PARAMETERS output . | |-----------|--------------------------------------------| For the ndi . calc . vision . tuning_curve class , this looks for documents of type ' stimulus_tuningcurve.json ' with ' response_type ' fields that contain ' mean ' or ' F1 ' . default_search_for_input_parameters - default parameters for searching for inputs PARAMETERS = DEFAULT_SEARCH_FOR_INPUT_PARAMETERS ( NDI_CALCULATION_OBJ ) Returns a list of the default search parameters for finding appropriate inputs to the calculator . search for stimulus_tuningcurve_id defaultstruct_appdoc - return a default appdoc structure for a given APPDOC type APPDOC_STRUCT = DEFAULTSTRUCT_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE ) Return the default data structure for a given APPDOC_TYPE of an ndi . app . appdoc object . In the base class , the blank version of the ndi . document is read in and the default structure is built from the ndi . document ' s class property list. Help for ndi . calc . vis . oridir_tuning / defaultstruct_appdoc is inherited from superclass ndi . app . appdoc doc2struct - create an ndi.document from an input structure and input parameters DOC = STRUCT2DOC ( NDI_APPDOC_OBJ , SESSION , APPDOC_TYPE , APPDOC_STRUCT , [ additional parameters ] Create an ndi . document from a data structure APPDOC_STRUCT . The ndi . document is created according to the APPDOC_TYPE of the NDI_APPDOC_OBJ . In the base class , this uses the property info in the ndi . document to load the data structure . Help for ndi . calc . vis . oridir_tuning / doc2struct is inherited from superclass ndi . app . appdoc doc_about - --------------------------------------------------------------------------------------------- NDI_CALCULATION: ORIDIRTUNING ---------------------------------------------------------------------------------------------- ------------------------ | ORIDIRTUNING -- ABOUT | ------------------------ ORIDIRTUNING is an ndi . calculator object that calculates the oridir_tuning and direction tuning curves from spike elements . Each document 'depends_on' an NDI daq system . Definition: apps/calc/oridir_tuning . json find_appdoc - find an ndi.app.appdoc document in the session database DOC = FIND_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional inputs ]) Using search criteria that is supported by [ additional inputs ], FIND_APPDOC searches the database for the ndi . document object DOC that is described by APPDOC_TYPE . DOC is always a cell array of all matching NDI_DOCUMENTs . In this superclass , empty is always returned . Subclasses should override this function to search for each document type . The documentation for subclasses should be in the overriden function APPDOC_DESCRIPTION . Help for ndi . calc . vis . oridir_tuning / find_appdoc is inherited from superclass ndi . app . appdoc graphical_edit_calculator - create and control a GUI to graphically edit an NDI calculator instance GRAPHICAL_EDIT_CALCULATOR ( ... ) Creates and controls a graphical user interface for creating an instance of an ndi . calculator object . Usage by the user : GRAPHICAL_EDIT_CALCULATOR ( ' command ' , ' NEW ' , ' type ' , ' ndi.calc.TYPE ' , ' filename ' , filename , ' name ' , name ) or GRAPHICAL_EDIT_CALCULATOR ( ' command ' , ' EDIT ' , ' filename ' , filename ) Help for ndi . calc . vis . oridir_tuning . graphical_edit_calculator is inherited from superclass ndi . calculator is_valid_dependency_input - checks if a potential dependency input actually valid for this calculator B = IS_VALID_DEPENDENCY_INPUT ( NDI_CALCULATION_OBJ , NAME , VALUE ) Tests whether a potential input to a calculator is valid . NAME - potential dependency name VALUE - ndi_document id of the potential dependency name The base class behavior of this function will return true . This is overridden if additional criteria beyond an ndi . query are needed to assess if a document is an appropriate input for the calculator . isequal_appdoc_struct - are two APPDOC data structures the same (equal)? B = ISEQUAL_APPDOC_STRUCT ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT1 , APPDOC_STRUCT2 ) Returns 1 if the structures APPDOC_STRUCT1 and APPDOC_STRUCT2 are valid and equal . This is true if APPDOC_STRUCT2 true if APPDOC_STRUCT1 and APPDOC_STRUCT2 have the same field names and same values and same sizes . That is , B is vlt . data . eqlen ( APPDOC_STRUCT1 , APPDOC_STRUCT2 ) . Help for ndi . calc . vis . oridir_tuning / isequal_appdoc_struct is inherited from superclass ndi . calculator isvalid_appdoc_struct - is an input structure a valid descriptor for an APPDOC? [ B , ERRORMSG ] = ISVALID_APPDOC_STRUCT ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT ) Examines APPDOC_STRUCT and determines whether it is a valid input for creating an ndi . document described by APPDOC_TYPE . B is 1 if it is valid and 0 otherwise . In the base class , B is always 0 with ERRORMSG ' Base class always returns invalid. ' Help for ndi . calc . vis . oridir_tuning / isvalid_appdoc_struct is inherited from superclass ndi . app . appdoc loaddata_appdoc - Load data from an application document [...] = LOADDATA_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional arguments ]) Loads the data from app document of style DOC_NAME from the database . [ additional inputs ] are used to find the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . In the base class , this always returns empty . This function should be overridden by each subclass . The documentation for subclasses should be in the overridden function APPDOC_DESCRIPTION . Help for ndi . calc . vis . oridir_tuning / loaddata_appdoc is inherited from superclass ndi . app . appdoc newdocument - return a new database document of type ndi.document based on an app NDI_DOCUMENT_OBJ = NEWDOCUMENT ( NDI_APP_OBJ ) Creates a blank ndi . document object of type ' ndi_document_app ' . The ' app.name ' field is filled out with the name of NDI_APP_OBJ . VARAPPNAME () . Help for ndi . calc . vis . oridir_tuning / newdocument is inherited from superclass ndi . app oridir_tuning - ndi.calculator object that calculates orientation and direction tuning curves from spike elements ORIDIRTUNING_OBJ = ORIDIRTUNING ( SESSION ) Creates a oridir_tuning ndi . calculator object Documentation for ndi . calc . vis . oridir_tuning / oridir_tuning doc ndi . calc . vis . oridir_tuning plot - provide a diagnostic plot to show the results of the calculator H = PLOT ( NDI_CALCULATION_OBJ , DOC_OR_PARAMETERS , ... ) Produce a plot of the tuning curve . Handles to the figure , the axes , and any objects created are returned in H . This function takes additional input arguments as name / value pairs . See ndi . calculator . plot_parameters for a description of those parameters . plot_parameters - provide a diagnostic plot to show the results of the calculator, if appropriate PLOT ( NDI_CALCULATOR_OBJ , DOC_OR_PARAMETERS , ... ) Produce a diagnostic plot that can indicate to a reader whether or not the calculator has been performed in a manner that makes sense with its input data . Useful for debugging / validating a calculator . By default , this plot is made in the current axes . This function takes additional input arguments as name / value pairs : |---------------------------|--------------------------------------| | Parameter ( default ) | Description | |---------------------------|--------------------------------------| | newfigure ( 0 ) | 0 / 1 Should we make a new figure ? | | holdstate ( 0 ) | 0 / 1 Should we preserve the ' hold ' | | | state of the current axes ? | | suppress_x_label ( 0 ) | 0 / 1 Should we suppress the x label ? | | suppress_y_label ( 0 ) | 0 / 1 Should we suppress the y label ? | | suppress_z_label ( 0 ) | 0 / 1 Should we suppress the z label ? | | suppress_title ( 0 ) | 0 / 1 Should we suppress the title ? | |---------------------------|--------------------------------------| Help for ndi . calc . vis . oridir_tuning . plot_parameters is inherited from superclass ndi . calculator run - run calculator on all possible inputs that match some parameters DOCS = RUN ( NDI_CALCULATOR_OBJ , DOCEXISTSACTION , PARAMETERS ) DOCEXISTSACTION can be 'Error' , 'NoAction' , 'Replace' , or 'ReplaceIfDifferent' For calculators , 'ReplaceIfDifferent' is equivalent to 'NoAction' because the input parameters define the calculator . Step 1 : set up input parameters ; they can either be completely specified by the caller , or defaults can be used Help for ndi . calc . vis . oridir_tuning / run is inherited from superclass ndi . calculator search_for_calculator_docs - search for previous calculators [ DOCS ] = SEARCH_FOR_CALCULATOR ( NDI_CALCULATOR_OBJ , PARAMETERS ) Performs a search to find all previously - created calculator documents that this mini - app creates . PARAMETERS is a structure with the following fields |------------------------|----------------------------------| | Fieldname | Description | |-----------------------------------------------------------| | input_parameters | A structure of input parameters | | | needed by the calculator . | | depends_on | A structure with fields 'name' | | | and 'value' that indicates any | | | exact matches that should be | | | satisfied . | |------------------------|----------------------------------| in the abstract class , this returns empty Help for ndi . calc . vis . oridir_tuning / search_for_calculator_docs is inherited from superclass ndi . calculator search_for_input_parameters - search for valid inputs to the calculator PARAMETERS = SEARCH_FOR_INPUT_PARAMETERS ( NDI_CALCULATOR_OBJ , PARAMETERS_SPECIFICATION ) Identifies all possible sets of specific input PARAMETERS that can be used as inputs to the calculator . PARAMETERS is a cell array of parameter structures with fields ' input_parameters ' and ' depends_on ' . PARAMETERS_SPECIFICATION is a structure with the following fields : |----------------------------------------------------------------------| | input_parameters | A structure of fixed input parameters needed | | | by the calculator . Should not depend on | | | values in other documents . | | depends_on | A structure with ' name ' and ' value ' fields | | | that lists specific inputs that should be | | | used for the ' depends_on ' field in the | | | PARAMETERS output . | | query | A structure with ' name ' and ' query ' fields | | | that describes a search to be performed to | | | identify inputs for the ' depends_on ' field | | | in the PARAMETERS output . | |-----------------------|----------------------------------------------- Help for ndi . calc . vis . oridir_tuning / search_for_input_parameters is inherited from superclass ndi . calculator searchquery - return a search query for an ndi.document related to this app C = SEARCHQUERY ( NDI_APP_OBJ ) Returns a cell array of strings that allow the creation or searching of an ndi . database document for this app with field ' app ' that has subfield ' name ' equal to the app ' s VARAPPNAME. Help for ndi . calc . vis . oridir_tuning / searchquery is inherited from superclass ndi . app struct2doc - create an ndi.document from an input structure and input parameters DOC = STRUCT2DOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT , [ additional parameters ] Create an ndi . document from a data structure APPDOC_STRUCT . The ndi . document is created according to the APPDOC_TYPE of the NDI_APPDOC_OBJ . In the base class , this always returns empty . It must be overridden in subclasses . The documentation for overriden functions should be in the function APPDOC_DESCRIPTION . Help for ndi . calc . vis . oridir_tuning / struct2doc is inherited from superclass ndi . app . appdoc varappname - return the name of the application for use in variable creation AN = VARAPPNAME ( NDI_APP_OBJ ) Returns the name of the app modified for use as a variable name , either as a Matlab variable or a name in a document . Help for ndi . calc . vis . oridir_tuning / varappname is inherited from superclass ndi . app version_url - return the app version and url [ V , URL ] = VERSION_URL ( NDI_APP_OBJ ) Return the version and url for the current app . In the base class , it is assumed that GIT is used and is available from the command line and the version and url are read from the git directory . Developers should override this method in their own class if they use a different version control system . Help for ndi . calc . vis . oridir_tuning / version_url is inherited from superclass ndi . app","title":"Methods help"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/speed_tuning.m/","text":"CLASS ndi.calc.vis.speed_tuning \u00b6 SPEED_TUNING - a speed_tuning demonstration of an ndi.calculator object SPEED_TUNING_OBJ = SPEED_TUNING(SESSION) Creates a SPEED_TUNING ndi.calculator object Superclasses \u00b6 ndi.calculator , ndi.app , ndi.documentservice , ndi.app.appdoc Properties \u00b6 Property Description fast_start session name doc_types doc_document_types doc_session Methods \u00b6 Method Description add_appdoc Load data from an application document appdoc_description --------------------------------------------------------------------------------------------- calculate perform the calculator for ndi.calc.example.speed_tuning calculate_speed_indexes calculate speed index values from a tuning curve clear_appdoc remove an ndi.app.appdoc document from a session database default_parameters_query what queries should be used to search for input parameters if none are provided? default_search_for_input_parameters default parameters for searching for inputs defaultstruct_appdoc return a default appdoc structure for a given APPDOC type doc2struct create an ndi.document from an input structure and input parameters doc_about --------------------------------------------------------------------------------------------- find_appdoc find an ndi.app.appdoc document in the session database graphical_edit_calculator create and control a GUI to graphically edit an NDI calculator instance is_valid_dependency_input is a potential dependency input actually valid for this calculator? isequal_appdoc_struct are two APPDOC data structures the same (equal)? isvalid_appdoc_struct is an input structure a valid descriptor for an APPDOC? loaddata_appdoc Load data from an application document newdocument return a new database document of type ndi.document based on an app plot provide a diagnostic plot to show the results of the calculator plot_parameters provide a diagnostic plot to show the results of the calculator, if appropriate run run calculator on all possible inputs that match some parameters search_for_calculator_docs search for previous calculators search_for_input_parameters search for valid inputs to the calculator searchquery return a search query for an ndi.document related to this app speed_tuning a speed_tuning demonstration of an ndi.calculator object struct2doc create an ndi.document from an input structure and input parameters varappname return the name of the application for use in variable creation version_url return the app version and url Methods help \u00b6 add_appdoc - Load data from an application document [...] = ADD_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , ... APPDOC_STRUCT , DOCEXISTSACTION , [ additional arguments ]) Creates a new ndi . document that is based on the type APPDOC_TYPE with creation data specified by APPDOC_STRUCT . [ additional inputs ] are used to find or specify the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . The DOC is returned as a cell array of NDI_DOCUMENTs ( should have 1 entry but could have more than 1 if the document already exists ). If APPDOC_STRUCT is empty , then default values are used . If it is a character array , then it is assumed to be a filename of a tab - separated - value text file . If it is an ndi . document , then it is assumed to be an ndi . document and it will be converted to the parameters using DOC2STRUCT . This function also takes a string DOCEXISTSACTION that describes what it should do in the event that the document fitting the [ additional inputs ] already exists : DOCEXISTACTION value | Description ---------------------------------------------------------------------------------- ' Error ' | An error is generating indicating the document exists . ' NoAction ' | The existing document is left alone . The existing ndi . document | is returned in DOC . ' Replace ' | Replace the document ; note that this deletes all NDI_DOCUMENTS | that depend on the original . ' ReplaceIfDifferent ' | Conditionally replace the document , but only if the | the data structures that define the document are not equal . Help for ndi . calc . vis . speed_tuning / add_appdoc is inherited from superclass ndi . app . appdoc appdoc_description - --------------------------------------------------------------------------------------------- DOCUMENT INFO: ---------------------------------------------------------------------------------------------- --------- | ABOUT | --------- To see the ABOUT information for the document that is created by this calculator , see 'help ndi . calculator/doc_about' ------------ | CREATION | ------------ DOC = CALCULATE(NDI_CALCULATOR_OBJ , PARAMETERS) PARAMETERS should contain the following fields: Fieldname | Description ------------------------------------------------------------------------- input_parameters | field1 description depends_on | field2 description ----------- | FINDING | ----------- [ DOC ] = SEARCH_FOR_CALCULATOR_DOCS(NDI_CALCULATOR_OBJ , PARAMETERS) PARAMETERS should contain the following fields: Fieldname | Description ------------------------------------------------------------------------- input_parameters | field1 description depends_on | field2 description Help for ndi . calc . vis . speed_tuning/appdoc_description is inherited from superclass ndi . calculator calculate - perform the calculator for ndi.calc.example.speed_tuning DOC = CALCULATE(NDI_CALCULATOR_OBJ, PARAMETERS) Creates a speed_tuning_calc document given input parameters. The document that is created speed_tuning by the input parameters. check inputs calculate_speed_indexes - calculate speed index values from a tuning curve SPEED_PROPS_DOC = CALCULATE_SPEED_INDEXES(NDI_SPEED_TUNING_CALC_OBJ, TUNING_DOC) Given a 2-dimensional tuning curve document with measurements at many spatial and and temporal frequencies, this function calculates speed response parameters and stores them in SPEED_TUNING document SPEED_PROPS_DOC. clear_appdoc - remove an ndi.app.appdoc document from a session database B = CLEAR_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional inputs ]) Deletes the app document of style DOC_NAME from the database . [ additional inputs ] are used to find the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . B is 1 if the document is found , and 0 otherwise . Help for ndi . calc . vis . speed_tuning / clear_appdoc is inherited from superclass ndi . app . appdoc default_parameters_query - what queries should be used to search for input parameters if none are provided? QUERY = DEFAULT_PARAMETERS_QUERY ( NDI_CALCULATOR_OBJ , PARAMETERS_SPECIFICATION ) When one calls SEARCH_FOR_INPUT_PARAMETERS , it is possible to specify a ' query ' structure to select particular documents to be placed into the parameters ' depends_on ' specification . If one does not provide any ' query ' structure , then the default values here are used . The function returns : |-----------------------|----------------------------------------------| | query | A structure with ' name ' and ' query ' fields | | | that describes a search to be performed to | | | identify inputs for the ' depends_on ' field | | | in the PARAMETERS output . | |-----------------------|----------------------------------------------- For the ndi . calc . stimulus . speed_tuning_calc class , this looks for documents of type ' stimulus_response_scalar.json ' with ' response_type ' fields the contain ' mean ' or ' F1 ' . default_search_for_input_parameters - default parameters for searching for inputs PARAMETERS = DEFAULT_SEARCH_FOR_INPUT_PARAMETERS ( NDI_CALCULATOR_OBJ ) Returns a list of the default search parameters for finding appropriate inputs to the calculator . For speed_tuning_calc , there is no appropriate default parameters so this search will yield empty . defaultstruct_appdoc - return a default appdoc structure for a given APPDOC type APPDOC_STRUCT = DEFAULTSTRUCT_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE ) Return the default data structure for a given APPDOC_TYPE of an ndi . app . appdoc object . In the base class , the blank version of the ndi . document is read in and the default structure is built from the ndi . document ' s class property list. Help for ndi . calc . vis . speed_tuning / defaultstruct_appdoc is inherited from superclass ndi . app . appdoc doc2struct - create an ndi.document from an input structure and input parameters DOC = STRUCT2DOC ( NDI_APPDOC_OBJ , SESSION , APPDOC_TYPE , APPDOC_STRUCT , [ additional parameters ] Create an ndi . document from a data structure APPDOC_STRUCT . The ndi . document is created according to the APPDOC_TYPE of the NDI_APPDOC_OBJ . In the base class , this uses the property info in the ndi . document to load the data structure . Help for ndi . calc . vis . speed_tuning / doc2struct is inherited from superclass ndi . app . appdoc doc_about - --------------------------------------------------------------------------------------------- NDI_CALCULATOR: SPEED_TUNING_CALC ---------------------------------------------------------------------------------------------- ------------------------ | SPEED_TUNING_CALC -- ABOUT | ------------------------ SPEED_TUNING_CALC is a demonstration document . It simply produces the 'answer' that is provided in the input parameters . Each SPEED_TUNING_CALC document 'depends_on' an NDI daq system . Definition: apps/speed_tuning_calc . json find_appdoc - find an ndi.app.appdoc document in the session database DOC = FIND_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional inputs ]) Using search criteria that is supported by [ additional inputs ], FIND_APPDOC searches the database for the ndi . document object DOC that is described by APPDOC_TYPE . DOC is always a cell array of all matching NDI_DOCUMENTs . In this superclass , empty is always returned . Subclasses should override this function to search for each document type . The documentation for subclasses should be in the overriden function APPDOC_DESCRIPTION . Help for ndi . calc . vis . speed_tuning / find_appdoc is inherited from superclass ndi . app . appdoc graphical_edit_calculator - create and control a GUI to graphically edit an NDI calculator instance GRAPHICAL_EDIT_CALCULATOR ( ... ) Creates and controls a graphical user interface for creating an instance of an ndi . calculator object . Usage by the user : GRAPHICAL_EDIT_CALCULATOR ( ' command ' , ' NEW ' , ' type ' , ' ndi.calc.TYPE ' , ' filename ' , filename , ' name ' , name ) or GRAPHICAL_EDIT_CALCULATOR ( ' command ' , ' EDIT ' , ' filename ' , filename ) Help for ndi . calc . vis . speed_tuning . graphical_edit_calculator is inherited from superclass ndi . calculator is_valid_dependency_input - is a potential dependency input actually valid for this calculator? B = IS_VALID_DEPENDENCY_INPUT ( NDI_CALCULATOR_OBJ , NAME , VALUE ) Tests whether a potential input to a calculator is valid . The potential dependency name is provided in NAME and its ndi_document id is provided in VALUE . The base class behavior of this function is simply to return true , but it can be overriden if additional criteria beyond an ndi . query are needed to assess if a document is an appropriate input for the calculator . isequal_appdoc_struct - are two APPDOC data structures the same (equal)? B = ISEQUAL_APPDOC_STRUCT ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT1 , APPDOC_STRUCT2 ) Returns 1 if the structures APPDOC_STRUCT1 and APPDOC_STRUCT2 are valid and equal . This is true if APPDOC_STRUCT2 true if APPDOC_STRUCT1 and APPDOC_STRUCT2 have the same field names and same values and same sizes . That is , B is vlt . data . eqlen ( APPDOC_STRUCT1 , APPDOC_STRUCT2 ) . Help for ndi . calc . vis . speed_tuning / isequal_appdoc_struct is inherited from superclass ndi . calculator isvalid_appdoc_struct - is an input structure a valid descriptor for an APPDOC? [ B , ERRORMSG ] = ISVALID_APPDOC_STRUCT ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT ) Examines APPDOC_STRUCT and determines whether it is a valid input for creating an ndi . document described by APPDOC_TYPE . B is 1 if it is valid and 0 otherwise . In the base class , B is always 0 with ERRORMSG ' Base class always returns invalid. ' Help for ndi . calc . vis . speed_tuning / isvalid_appdoc_struct is inherited from superclass ndi . app . appdoc loaddata_appdoc - Load data from an application document [...] = LOADDATA_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional arguments ]) Loads the data from app document of style DOC_NAME from the database . [ additional inputs ] are used to find the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . In the base class , this always returns empty . This function should be overridden by each subclass . The documentation for subclasses should be in the overridden function APPDOC_DESCRIPTION . Help for ndi . calc . vis . speed_tuning / loaddata_appdoc is inherited from superclass ndi . app . appdoc newdocument - return a new database document of type ndi.document based on an app NDI_DOCUMENT_OBJ = NEWDOCUMENT ( NDI_APP_OBJ ) Creates a blank ndi . document object of type ' ndi_document_app ' . The ' app.name ' field is filled out with the name of NDI_APP_OBJ . VARAPPNAME () . Help for ndi . calc . vis . speed_tuning / newdocument is inherited from superclass ndi . app plot - provide a diagnostic plot to show the results of the calculator H = PLOT ( NDI_CALCULATOR_OBJ , DOC_OR_PARAMETERS , ... ) Produce a plot of the tuning curve . Handles to the figure , the axes , and any objects created are returned in H . This function takes additional input arguments as name / value pairs . See ndi . calculator . plot_parameters for a description of those parameters . plot_parameters - provide a diagnostic plot to show the results of the calculator, if appropriate PLOT ( NDI_CALCULATOR_OBJ , DOC_OR_PARAMETERS , ... ) Produce a diagnostic plot that can indicate to a reader whether or not the calculator has been performed in a manner that makes sense with its input data . Useful for debugging / validating a calculator . By default , this plot is made in the current axes . This function takes additional input arguments as name / value pairs : |---------------------------|--------------------------------------| | Parameter ( default ) | Description | |---------------------------|--------------------------------------| | newfigure ( 0 ) | 0 / 1 Should we make a new figure ? | | holdstate ( 0 ) | 0 / 1 Should we preserve the ' hold ' | | | state of the current axes ? | | suppress_x_label ( 0 ) | 0 / 1 Should we suppress the x label ? | | suppress_y_label ( 0 ) | 0 / 1 Should we suppress the y label ? | | suppress_z_label ( 0 ) | 0 / 1 Should we suppress the z label ? | | suppress_title ( 0 ) | 0 / 1 Should we suppress the title ? | |---------------------------|--------------------------------------| Help for ndi . calc . vis . speed_tuning . plot_parameters is inherited from superclass ndi . calculator run - run calculator on all possible inputs that match some parameters DOCS = RUN ( NDI_CALCULATOR_OBJ , DOCEXISTSACTION , PARAMETERS ) DOCEXISTSACTION can be 'Error' , 'NoAction' , 'Replace' , or 'ReplaceIfDifferent' For calculators , 'ReplaceIfDifferent' is equivalent to 'NoAction' because the input parameters define the calculator . Step 1 : set up input parameters ; they can either be completely specified by the caller , or defaults can be used Help for ndi . calc . vis . speed_tuning / run is inherited from superclass ndi . calculator search_for_calculator_docs - search for previous calculators [ DOCS ] = SEARCH_FOR_CALCULATOR ( NDI_CALCULATOR_OBJ , PARAMETERS ) Performs a search to find all previously - created calculator documents that this mini - app creates . PARAMETERS is a structure with the following fields |------------------------|----------------------------------| | Fieldname | Description | |-----------------------------------------------------------| | input_parameters | A structure of input parameters | | | needed by the calculator . | | depends_on | A structure with fields 'name' | | | and 'value' that indicates any | | | exact matches that should be | | | satisfied . | |------------------------|----------------------------------| in the abstract class , this returns empty Help for ndi . calc . vis . speed_tuning / search_for_calculator_docs is inherited from superclass ndi . calculator search_for_input_parameters - search for valid inputs to the calculator PARAMETERS = SEARCH_FOR_INPUT_PARAMETERS ( NDI_CALCULATOR_OBJ , PARAMETERS_SPECIFICATION ) Identifies all possible sets of specific input PARAMETERS that can be used as inputs to the calculator . PARAMETERS is a cell array of parameter structures with fields ' input_parameters ' and ' depends_on ' . PARAMETERS_SPECIFICATION is a structure with the following fields : |----------------------------------------------------------------------| | input_parameters | A structure of fixed input parameters needed | | | by the calculator . Should not depend on | | | values in other documents . | | depends_on | A structure with ' name ' and ' value ' fields | | | that lists specific inputs that should be | | | used for the ' depends_on ' field in the | | | PARAMETERS output . | | query | A structure with ' name ' and ' query ' fields | | | that describes a search to be performed to | | | identify inputs for the ' depends_on ' field | | | in the PARAMETERS output . | |-----------------------|----------------------------------------------- Help for ndi . calc . vis . speed_tuning / search_for_input_parameters is inherited from superclass ndi . calculator searchquery - return a search query for an ndi.document related to this app C = SEARCHQUERY ( NDI_APP_OBJ ) Returns a cell array of strings that allow the creation or searching of an ndi . database document for this app with field ' app ' that has subfield ' name ' equal to the app ' s VARAPPNAME. Help for ndi . calc . vis . speed_tuning / searchquery is inherited from superclass ndi . app speed_tuning - a speed_tuning demonstration of an ndi.calculator object SPEED_TUNING_OBJ = SPEED_TUNING ( SESSION ) Creates a SPEED_TUNING ndi . calculator object Documentation for ndi . calc . vis . speed_tuning / speed_tuning doc ndi . calc . vis . speed_tuning struct2doc - create an ndi.document from an input structure and input parameters DOC = STRUCT2DOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT , [ additional parameters ] Create an ndi . document from a data structure APPDOC_STRUCT . The ndi . document is created according to the APPDOC_TYPE of the NDI_APPDOC_OBJ . In the base class , this always returns empty . It must be overridden in subclasses . The documentation for overriden functions should be in the function APPDOC_DESCRIPTION . Help for ndi . calc . vis . speed_tuning / struct2doc is inherited from superclass ndi . app . appdoc varappname - return the name of the application for use in variable creation AN = VARAPPNAME ( NDI_APP_OBJ ) Returns the name of the app modified for use as a variable name , either as a Matlab variable or a name in a document . Help for ndi . calc . vis . speed_tuning / varappname is inherited from superclass ndi . app version_url - return the app version and url [ V , URL ] = VERSION_URL ( NDI_APP_OBJ ) Return the version and url for the current app . In the base class , it is assumed that GIT is used and is available from the command line and the version and url are read from the git directory . Developers should override this method in their own class if they use a different version control system . Help for ndi . calc . vis . speed_tuning / version_url is inherited from superclass ndi . app","title":"ndi.calc.vis.speed_tuning"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/speed_tuning.m/#class-ndicalcvisspeed_tuning","text":"SPEED_TUNING - a speed_tuning demonstration of an ndi.calculator object SPEED_TUNING_OBJ = SPEED_TUNING(SESSION) Creates a SPEED_TUNING ndi.calculator object","title":"CLASS ndi.calc.vis.speed_tuning"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/speed_tuning.m/#superclasses","text":"ndi.calculator , ndi.app , ndi.documentservice , ndi.app.appdoc","title":"Superclasses"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/speed_tuning.m/#properties","text":"Property Description fast_start session name doc_types doc_document_types doc_session","title":"Properties"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/speed_tuning.m/#methods","text":"Method Description add_appdoc Load data from an application document appdoc_description --------------------------------------------------------------------------------------------- calculate perform the calculator for ndi.calc.example.speed_tuning calculate_speed_indexes calculate speed index values from a tuning curve clear_appdoc remove an ndi.app.appdoc document from a session database default_parameters_query what queries should be used to search for input parameters if none are provided? default_search_for_input_parameters default parameters for searching for inputs defaultstruct_appdoc return a default appdoc structure for a given APPDOC type doc2struct create an ndi.document from an input structure and input parameters doc_about --------------------------------------------------------------------------------------------- find_appdoc find an ndi.app.appdoc document in the session database graphical_edit_calculator create and control a GUI to graphically edit an NDI calculator instance is_valid_dependency_input is a potential dependency input actually valid for this calculator? isequal_appdoc_struct are two APPDOC data structures the same (equal)? isvalid_appdoc_struct is an input structure a valid descriptor for an APPDOC? loaddata_appdoc Load data from an application document newdocument return a new database document of type ndi.document based on an app plot provide a diagnostic plot to show the results of the calculator plot_parameters provide a diagnostic plot to show the results of the calculator, if appropriate run run calculator on all possible inputs that match some parameters search_for_calculator_docs search for previous calculators search_for_input_parameters search for valid inputs to the calculator searchquery return a search query for an ndi.document related to this app speed_tuning a speed_tuning demonstration of an ndi.calculator object struct2doc create an ndi.document from an input structure and input parameters varappname return the name of the application for use in variable creation version_url return the app version and url","title":"Methods"},{"location":"reference/%2Bndi/%2Bcalc/%2Bvis/speed_tuning.m/#methods-help","text":"add_appdoc - Load data from an application document [...] = ADD_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , ... APPDOC_STRUCT , DOCEXISTSACTION , [ additional arguments ]) Creates a new ndi . document that is based on the type APPDOC_TYPE with creation data specified by APPDOC_STRUCT . [ additional inputs ] are used to find or specify the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . The DOC is returned as a cell array of NDI_DOCUMENTs ( should have 1 entry but could have more than 1 if the document already exists ). If APPDOC_STRUCT is empty , then default values are used . If it is a character array , then it is assumed to be a filename of a tab - separated - value text file . If it is an ndi . document , then it is assumed to be an ndi . document and it will be converted to the parameters using DOC2STRUCT . This function also takes a string DOCEXISTSACTION that describes what it should do in the event that the document fitting the [ additional inputs ] already exists : DOCEXISTACTION value | Description ---------------------------------------------------------------------------------- ' Error ' | An error is generating indicating the document exists . ' NoAction ' | The existing document is left alone . The existing ndi . document | is returned in DOC . ' Replace ' | Replace the document ; note that this deletes all NDI_DOCUMENTS | that depend on the original . ' ReplaceIfDifferent ' | Conditionally replace the document , but only if the | the data structures that define the document are not equal . Help for ndi . calc . vis . speed_tuning / add_appdoc is inherited from superclass ndi . app . appdoc appdoc_description - --------------------------------------------------------------------------------------------- DOCUMENT INFO: ---------------------------------------------------------------------------------------------- --------- | ABOUT | --------- To see the ABOUT information for the document that is created by this calculator , see 'help ndi . calculator/doc_about' ------------ | CREATION | ------------ DOC = CALCULATE(NDI_CALCULATOR_OBJ , PARAMETERS) PARAMETERS should contain the following fields: Fieldname | Description ------------------------------------------------------------------------- input_parameters | field1 description depends_on | field2 description ----------- | FINDING | ----------- [ DOC ] = SEARCH_FOR_CALCULATOR_DOCS(NDI_CALCULATOR_OBJ , PARAMETERS) PARAMETERS should contain the following fields: Fieldname | Description ------------------------------------------------------------------------- input_parameters | field1 description depends_on | field2 description Help for ndi . calc . vis . speed_tuning/appdoc_description is inherited from superclass ndi . calculator calculate - perform the calculator for ndi.calc.example.speed_tuning DOC = CALCULATE(NDI_CALCULATOR_OBJ, PARAMETERS) Creates a speed_tuning_calc document given input parameters. The document that is created speed_tuning by the input parameters. check inputs calculate_speed_indexes - calculate speed index values from a tuning curve SPEED_PROPS_DOC = CALCULATE_SPEED_INDEXES(NDI_SPEED_TUNING_CALC_OBJ, TUNING_DOC) Given a 2-dimensional tuning curve document with measurements at many spatial and and temporal frequencies, this function calculates speed response parameters and stores them in SPEED_TUNING document SPEED_PROPS_DOC. clear_appdoc - remove an ndi.app.appdoc document from a session database B = CLEAR_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional inputs ]) Deletes the app document of style DOC_NAME from the database . [ additional inputs ] are used to find the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . B is 1 if the document is found , and 0 otherwise . Help for ndi . calc . vis . speed_tuning / clear_appdoc is inherited from superclass ndi . app . appdoc default_parameters_query - what queries should be used to search for input parameters if none are provided? QUERY = DEFAULT_PARAMETERS_QUERY ( NDI_CALCULATOR_OBJ , PARAMETERS_SPECIFICATION ) When one calls SEARCH_FOR_INPUT_PARAMETERS , it is possible to specify a ' query ' structure to select particular documents to be placed into the parameters ' depends_on ' specification . If one does not provide any ' query ' structure , then the default values here are used . The function returns : |-----------------------|----------------------------------------------| | query | A structure with ' name ' and ' query ' fields | | | that describes a search to be performed to | | | identify inputs for the ' depends_on ' field | | | in the PARAMETERS output . | |-----------------------|----------------------------------------------- For the ndi . calc . stimulus . speed_tuning_calc class , this looks for documents of type ' stimulus_response_scalar.json ' with ' response_type ' fields the contain ' mean ' or ' F1 ' . default_search_for_input_parameters - default parameters for searching for inputs PARAMETERS = DEFAULT_SEARCH_FOR_INPUT_PARAMETERS ( NDI_CALCULATOR_OBJ ) Returns a list of the default search parameters for finding appropriate inputs to the calculator . For speed_tuning_calc , there is no appropriate default parameters so this search will yield empty . defaultstruct_appdoc - return a default appdoc structure for a given APPDOC type APPDOC_STRUCT = DEFAULTSTRUCT_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE ) Return the default data structure for a given APPDOC_TYPE of an ndi . app . appdoc object . In the base class , the blank version of the ndi . document is read in and the default structure is built from the ndi . document ' s class property list. Help for ndi . calc . vis . speed_tuning / defaultstruct_appdoc is inherited from superclass ndi . app . appdoc doc2struct - create an ndi.document from an input structure and input parameters DOC = STRUCT2DOC ( NDI_APPDOC_OBJ , SESSION , APPDOC_TYPE , APPDOC_STRUCT , [ additional parameters ] Create an ndi . document from a data structure APPDOC_STRUCT . The ndi . document is created according to the APPDOC_TYPE of the NDI_APPDOC_OBJ . In the base class , this uses the property info in the ndi . document to load the data structure . Help for ndi . calc . vis . speed_tuning / doc2struct is inherited from superclass ndi . app . appdoc doc_about - --------------------------------------------------------------------------------------------- NDI_CALCULATOR: SPEED_TUNING_CALC ---------------------------------------------------------------------------------------------- ------------------------ | SPEED_TUNING_CALC -- ABOUT | ------------------------ SPEED_TUNING_CALC is a demonstration document . It simply produces the 'answer' that is provided in the input parameters . Each SPEED_TUNING_CALC document 'depends_on' an NDI daq system . Definition: apps/speed_tuning_calc . json find_appdoc - find an ndi.app.appdoc document in the session database DOC = FIND_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional inputs ]) Using search criteria that is supported by [ additional inputs ], FIND_APPDOC searches the database for the ndi . document object DOC that is described by APPDOC_TYPE . DOC is always a cell array of all matching NDI_DOCUMENTs . In this superclass , empty is always returned . Subclasses should override this function to search for each document type . The documentation for subclasses should be in the overriden function APPDOC_DESCRIPTION . Help for ndi . calc . vis . speed_tuning / find_appdoc is inherited from superclass ndi . app . appdoc graphical_edit_calculator - create and control a GUI to graphically edit an NDI calculator instance GRAPHICAL_EDIT_CALCULATOR ( ... ) Creates and controls a graphical user interface for creating an instance of an ndi . calculator object . Usage by the user : GRAPHICAL_EDIT_CALCULATOR ( ' command ' , ' NEW ' , ' type ' , ' ndi.calc.TYPE ' , ' filename ' , filename , ' name ' , name ) or GRAPHICAL_EDIT_CALCULATOR ( ' command ' , ' EDIT ' , ' filename ' , filename ) Help for ndi . calc . vis . speed_tuning . graphical_edit_calculator is inherited from superclass ndi . calculator is_valid_dependency_input - is a potential dependency input actually valid for this calculator? B = IS_VALID_DEPENDENCY_INPUT ( NDI_CALCULATOR_OBJ , NAME , VALUE ) Tests whether a potential input to a calculator is valid . The potential dependency name is provided in NAME and its ndi_document id is provided in VALUE . The base class behavior of this function is simply to return true , but it can be overriden if additional criteria beyond an ndi . query are needed to assess if a document is an appropriate input for the calculator . isequal_appdoc_struct - are two APPDOC data structures the same (equal)? B = ISEQUAL_APPDOC_STRUCT ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT1 , APPDOC_STRUCT2 ) Returns 1 if the structures APPDOC_STRUCT1 and APPDOC_STRUCT2 are valid and equal . This is true if APPDOC_STRUCT2 true if APPDOC_STRUCT1 and APPDOC_STRUCT2 have the same field names and same values and same sizes . That is , B is vlt . data . eqlen ( APPDOC_STRUCT1 , APPDOC_STRUCT2 ) . Help for ndi . calc . vis . speed_tuning / isequal_appdoc_struct is inherited from superclass ndi . calculator isvalid_appdoc_struct - is an input structure a valid descriptor for an APPDOC? [ B , ERRORMSG ] = ISVALID_APPDOC_STRUCT ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT ) Examines APPDOC_STRUCT and determines whether it is a valid input for creating an ndi . document described by APPDOC_TYPE . B is 1 if it is valid and 0 otherwise . In the base class , B is always 0 with ERRORMSG ' Base class always returns invalid. ' Help for ndi . calc . vis . speed_tuning / isvalid_appdoc_struct is inherited from superclass ndi . app . appdoc loaddata_appdoc - Load data from an application document [...] = LOADDATA_APPDOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , [ additional arguments ]) Loads the data from app document of style DOC_NAME from the database . [ additional inputs ] are used to find the NDI_document in the database . They are passed to the function FIND_APPDOC , so see help FIND_APPDOC for the documentation for each app . In the base class , this always returns empty . This function should be overridden by each subclass . The documentation for subclasses should be in the overridden function APPDOC_DESCRIPTION . Help for ndi . calc . vis . speed_tuning / loaddata_appdoc is inherited from superclass ndi . app . appdoc newdocument - return a new database document of type ndi.document based on an app NDI_DOCUMENT_OBJ = NEWDOCUMENT ( NDI_APP_OBJ ) Creates a blank ndi . document object of type ' ndi_document_app ' . The ' app.name ' field is filled out with the name of NDI_APP_OBJ . VARAPPNAME () . Help for ndi . calc . vis . speed_tuning / newdocument is inherited from superclass ndi . app plot - provide a diagnostic plot to show the results of the calculator H = PLOT ( NDI_CALCULATOR_OBJ , DOC_OR_PARAMETERS , ... ) Produce a plot of the tuning curve . Handles to the figure , the axes , and any objects created are returned in H . This function takes additional input arguments as name / value pairs . See ndi . calculator . plot_parameters for a description of those parameters . plot_parameters - provide a diagnostic plot to show the results of the calculator, if appropriate PLOT ( NDI_CALCULATOR_OBJ , DOC_OR_PARAMETERS , ... ) Produce a diagnostic plot that can indicate to a reader whether or not the calculator has been performed in a manner that makes sense with its input data . Useful for debugging / validating a calculator . By default , this plot is made in the current axes . This function takes additional input arguments as name / value pairs : |---------------------------|--------------------------------------| | Parameter ( default ) | Description | |---------------------------|--------------------------------------| | newfigure ( 0 ) | 0 / 1 Should we make a new figure ? | | holdstate ( 0 ) | 0 / 1 Should we preserve the ' hold ' | | | state of the current axes ? | | suppress_x_label ( 0 ) | 0 / 1 Should we suppress the x label ? | | suppress_y_label ( 0 ) | 0 / 1 Should we suppress the y label ? | | suppress_z_label ( 0 ) | 0 / 1 Should we suppress the z label ? | | suppress_title ( 0 ) | 0 / 1 Should we suppress the title ? | |---------------------------|--------------------------------------| Help for ndi . calc . vis . speed_tuning . plot_parameters is inherited from superclass ndi . calculator run - run calculator on all possible inputs that match some parameters DOCS = RUN ( NDI_CALCULATOR_OBJ , DOCEXISTSACTION , PARAMETERS ) DOCEXISTSACTION can be 'Error' , 'NoAction' , 'Replace' , or 'ReplaceIfDifferent' For calculators , 'ReplaceIfDifferent' is equivalent to 'NoAction' because the input parameters define the calculator . Step 1 : set up input parameters ; they can either be completely specified by the caller , or defaults can be used Help for ndi . calc . vis . speed_tuning / run is inherited from superclass ndi . calculator search_for_calculator_docs - search for previous calculators [ DOCS ] = SEARCH_FOR_CALCULATOR ( NDI_CALCULATOR_OBJ , PARAMETERS ) Performs a search to find all previously - created calculator documents that this mini - app creates . PARAMETERS is a structure with the following fields |------------------------|----------------------------------| | Fieldname | Description | |-----------------------------------------------------------| | input_parameters | A structure of input parameters | | | needed by the calculator . | | depends_on | A structure with fields 'name' | | | and 'value' that indicates any | | | exact matches that should be | | | satisfied . | |------------------------|----------------------------------| in the abstract class , this returns empty Help for ndi . calc . vis . speed_tuning / search_for_calculator_docs is inherited from superclass ndi . calculator search_for_input_parameters - search for valid inputs to the calculator PARAMETERS = SEARCH_FOR_INPUT_PARAMETERS ( NDI_CALCULATOR_OBJ , PARAMETERS_SPECIFICATION ) Identifies all possible sets of specific input PARAMETERS that can be used as inputs to the calculator . PARAMETERS is a cell array of parameter structures with fields ' input_parameters ' and ' depends_on ' . PARAMETERS_SPECIFICATION is a structure with the following fields : |----------------------------------------------------------------------| | input_parameters | A structure of fixed input parameters needed | | | by the calculator . Should not depend on | | | values in other documents . | | depends_on | A structure with ' name ' and ' value ' fields | | | that lists specific inputs that should be | | | used for the ' depends_on ' field in the | | | PARAMETERS output . | | query | A structure with ' name ' and ' query ' fields | | | that describes a search to be performed to | | | identify inputs for the ' depends_on ' field | | | in the PARAMETERS output . | |-----------------------|----------------------------------------------- Help for ndi . calc . vis . speed_tuning / search_for_input_parameters is inherited from superclass ndi . calculator searchquery - return a search query for an ndi.document related to this app C = SEARCHQUERY ( NDI_APP_OBJ ) Returns a cell array of strings that allow the creation or searching of an ndi . database document for this app with field ' app ' that has subfield ' name ' equal to the app ' s VARAPPNAME. Help for ndi . calc . vis . speed_tuning / searchquery is inherited from superclass ndi . app speed_tuning - a speed_tuning demonstration of an ndi.calculator object SPEED_TUNING_OBJ = SPEED_TUNING ( SESSION ) Creates a SPEED_TUNING ndi . calculator object Documentation for ndi . calc . vis . speed_tuning / speed_tuning doc ndi . calc . vis . speed_tuning struct2doc - create an ndi.document from an input structure and input parameters DOC = STRUCT2DOC ( NDI_APPDOC_OBJ , APPDOC_TYPE , APPDOC_STRUCT , [ additional parameters ] Create an ndi . document from a data structure APPDOC_STRUCT . The ndi . document is created according to the APPDOC_TYPE of the NDI_APPDOC_OBJ . In the base class , this always returns empty . It must be overridden in subclasses . The documentation for overriden functions should be in the function APPDOC_DESCRIPTION . Help for ndi . calc . vis . speed_tuning / struct2doc is inherited from superclass ndi . app . appdoc varappname - return the name of the application for use in variable creation AN = VARAPPNAME ( NDI_APP_OBJ ) Returns the name of the app modified for use as a variable name , either as a Matlab variable or a name in a document . Help for ndi . calc . vis . speed_tuning / varappname is inherited from superclass ndi . app version_url - return the app version and url [ V , URL ] = VERSION_URL ( NDI_APP_OBJ ) Return the version and url for the current app . In the base class , it is assumed that GIT is used and is available from the command line and the version and url are read from the git directory . Developers should override this method in their own class if they use a different version control system . Help for ndi . calc . vis . speed_tuning / version_url is inherited from superclass ndi . app","title":"Methods help"}]}